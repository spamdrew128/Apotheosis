#ifndef __EVAL_CONSTANTS_H__
#define __EVAL_CONSTANTS_H__

#include <stdint.h>

#include "board_constants.h"
#include "board_info.h"

typedef uint8_t Phase_t;
typedef uint8_t Bucket_t;
enum {
  mg_phase,
  eg_phase,
  NUM_PHASES,
  PHASE_MAX = 24,

  KNIGHT_PHASE_VALUE = 1,
  BISHOP_PHASE_VALUE = 1,
  ROOK_PHASE_VALUE = 2,
  QUEEN_PHASE_VALUE = 4,
  PAWN_PHASE_VALUE = 0,
  KING_PHASE_VALUE = 0,

  QS_PST_MASK = C64(0x0F0F0F0F0F0F0F0F),
  KS_PST_MASK = C64(0xF0F0F0F0F0F0F0F0),
  NUM_PST_BUCKETS = 2,
};

// used for eval calcuations. Contains both EG and MG score packed into 1 value.
typedef int32_t Score_t;
#define S(mg, eg) \
	((Score_t)((uint32_t)eg << 16) + mg)

/*

 ██████╗ ██████╗ ███╗   ██╗███████╗████████╗ █████╗ ███╗   ██╗████████╗███████╗
██╔════╝██╔═══██╗████╗  ██║██╔════╝╚══██╔══╝██╔══██╗████╗  ██║╚══██╔══╝██╔════╝
██║     ██║   ██║██╔██╗ ██║███████╗   ██║   ███████║██╔██╗ ██║   ██║   ███████╗
██║     ██║   ██║██║╚██╗██║╚════██║   ██║   ██╔══██║██║╚██╗██║   ██║   ╚════██║
╚██████╗╚██████╔╝██║ ╚████║███████║   ██║   ██║  ██║██║ ╚████║   ██║   ███████║
 ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝

*/                                                                        

#define BISHOP_PAIR_BONUS \
   S(29, 70)

#define PASSED_PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(88, 206), S(28, 187), S(54, 189), S(147, 183), S(50, 259), S(56, 229), S(28, 269), S(63, 266), \
   S(49, 165), S(-58, 189), S(-42, 144), S(-38, 103), S(56, 143), S(-77, 236), S(-59, 271), S(-70, 286), \
   S(0, 88), S(-6, 71), S(90, 37), S(-6, 50), S(4, 68), S(-55, 112), S(-110, 161), S(-109, 185), \
   S(-16, 54), S(-47, 49), S(14, 28), S(-20, 27), S(-74, 55), S(-64, 62), S(-43, 87), S(-53, 89), \
   S(73, 12), S(-41, 35), S(-29, 18), S(-19, 24), S(-54, 23), S(-3, 5), S(-30, 34), S(-29, 42), \
   S(-2, 12), S(63, 25), S(57, 6), S(-47, 17), S(-11, 14), S(-47, 20), S(-41, 24), S(-38, 30), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(103, 258), S(93, 254), S(84, 245), S(117, 204), S(86, 206), S(78, 177), S(22, 209), S(1, 239), \
   S(55, 229), S(18, 239), S(25, 205), S(31, 161), S(-10, 136), S(67, 108), S(-53, 128), S(-35, 151), \
   S(28, 130), S(-2, 126), S(10, 99), S(12, 85), S(15, 57), S(61, 40), S(0, 82), S(23, 72), \
   S(6, 72), S(-18, 72), S(-35, 57), S(-17, 45), S(-26, 41), S(-15, 39), S(5, 53), S(28, 47), \
   S(1, 21), S(-9, 37), S(-28, 29), S(-29, 28), S(-4, 10), S(26, 10), S(17, 39), S(48, 13), \
   S(-6, 20), S(8, 26), S(6, 14), S(-29, 29), S(-2, 11), S(0, 13), S(29, 34), S(4, 28), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define BLOCKED_PASSERS { \
   S(63, -201), S(6, -119), S(-7, -46), S(2, -25), S(-18, 5), S(2, -14), S(0, 0), S(0, 0), \
}

#define ROOK_OPEN_FILE { \
   S(32, 0), S(37, 0), S(35, 2), S(40, 2), S(41, 6), S(41, -5), S(113, -22), S(108, -14), \
}

#define ROOK_SEMI_OPEN_FILE { \
   S(-10, 42), S(4, 13), S(12, 8), S(22, -2), S(17, -5), S(11, -6), S(37, -10), S(18, 21), \
}

#define QUEEN_OPEN_FILE { \
   S(-15, 12), S(-8, 31), S(-19, 25), S(-22, 36), S(-17, 42), S(-12, 11), S(18, 18), S(37, -18), \
}

#define QUEEN_SEMI_OPEN_FILE { \
   S(-5, -1), S(6, 0), S(4, 0), S(-5, 29), S(-3, 30), S(13, -33), S(39, -33), S(21, -22), \
}

#define KING_OPEN_FILE { \
   S(-40, -22), S(-99, 1), S(-82, 0), S(-22, -17), S(-57, -7), S(-72, 3), S(-87, 14), S(-30, 0), \
}

#define KING_SEMI_OPEN_FILE { \
   S(-11, 32), S(-45, 13), S(-5, -10), S(21, -17), S(-7, -4), S(-7, -6), S(-26, 14), S(-15, 29), \
}

#define ISOLATED_PAWNS { \
   S(-14, -17), S(-18, -16), S(-18, -21), S(-31, -16), S(-31, -23), S(-7, -21), S(-15, -16), S(-28, -19), \
}

#define KNIGHT_MOBILITY { \
   S(245, 174), S(264, 240), S(276, 264), S(282, 274), S(295, 280), S(302, 292), S(312, 291), S(315, 294), S(334, 275), \
}

#define BISHOP_MOBILITY { \
   S(239, 203), S(255, 222), S(269, 240), S(277, 258), S(285, 271), S(289, 281), S(294, 288), S(297, 289), S(294, 297), S(303, 294), S(318, 289), S(348, 285), S(277, 324), S(350, 278), \
}

#define ROOK_MOBILITY { \
   S(302, 361), S(316, 387), S(321, 403), S(325, 415), S(324, 427), S(331, 433), S(334, 440), S(341, 443), S(350, 448), S(357, 452), S(359, 458), S(368, 461), S(366, 469), S(383, 462), S(385, 460), \
}

#define QUEEN_MOBILITY { \
   S(752, 725), S(750, 657), S(747, 621), S(746, 657), S(750, 694), S(752, 712), S(754, 719), S(752, 760), S(754, 772), S(758, 782), S(763, 793), S(763, 809), S(759, 817), S(770, 820), S(771, 834), S(768, 847), S(766, 855), S(782, 840), S(795, 843), S(795, 843), S(791, 858), S(845, 827), S(799, 852), S(888, 805), S(952, 764), S(1032, 729), S(802, 899), S(677, 911), \
}

#define KNIGHT_KING_ZONE_ATTACKS { \
   S(-9, -6), S(-10, 2), S(-4, 11), S(0, 7), S(0, 11), S(6, 6), S(3, 12), S(6, 9), S(11, 7), S(11, 7), S(17, 4), S(18, 4), S(12, 4), S(20, 0), S(26, 0), S(18, 1), S(20, 0), S(28, -3), S(19, -5), S(20, -7), S(47, -13), S(35, -10), S(24, -13), S(17, -14), S(-11, -6), S(-72, -5), S(-6, -5), S(-131, 3), \
}

#define BISHOP_KING_ZONE_ATTACKS { \
   S(3, 4), S(0, 6), S(2, 8), S(5, 8), S(7, 10), S(9, 5), S(12, 0), S(10, 5), S(19, -1), S(14, 2), S(23, -3), S(21, -2), S(24, -2), S(24, -4), S(27, -2), S(20, -4), S(21, -3), S(21, -5), S(18, -2), S(27, -6), S(5, -1), S(15, -4), S(-10, 0), S(-33, 3), S(-40, 3), S(-22, -4), S(-2, -14), S(-78, 2), \
}

#define ROOK_KING_ZONE_ATTACKS { \
   S(8, 0), S(1, 1), S(7, -6), S(10, -12), S(10, -9), S(13, -11), S(12, -6), S(10, -5), S(17, -9), S(16, -9), S(23, -10), S(20, -9), S(20, -7), S(17, -6), S(27, -9), S(24, -7), S(23, -6), S(34, -10), S(31, -8), S(26, -6), S(17, -4), S(21, -6), S(27, -7), S(25, -5), S(29, -3), S(44, -9), S(-3, 4), S(21, -4), \
}

#define QUEEN_KING_ZONE_ATTACKS { \
   S(-1, -3), S(0, -13), S(2, -14), S(5, -16), S(8, -12), S(5, -3), S(7, -4), S(8, 1), S(11, -3), S(15, 0), S(13, 5), S(20, 3), S(24, 1), S(19, 5), S(29, -2), S(44, -9), S(40, -7), S(59, -20), S(60, -18), S(68, -24), S(93, -37), S(95, -39), S(99, -34), S(149, -64), S(150, -58), S(164, -71), S(214, -87), S(62, -27), \
}

#define PAWN_KING_ZONE_ATTACKS { \
   S(7, 22), S(10, 1), S(10, -7), S(8, -3), S(9, -5), S(6, -4), S(7, -2), S(8, -2), S(5, -3), S(6, -3), S(7, -5), S(6, -4), S(15, -7), S(17, -7), S(14, -7), S(19, -8), S(25, -10), S(26, -9), S(23, -10), S(25, -10), S(39, -13), S(54, -16), S(44, -13), S(25, -11), S(27, -11), S(61, -11), S(58, -4), S(72, -4), \
}

#define CHECK_BONUS { \
   S(121, 6), S(113, 70), S(178, -7), S(74, 123), S(376, -11), \
}

#define PAWN_THREAT_ON_KNIGHT S(60, 12)
#define PAWN_THREAT_ON_BISHOP S(61, 41)
#define PAWN_THREAT_ON_ROOK S(114, -38)
#define PAWN_THREAT_ON_QUEEN S(64, -14)

#define KNIGHT_THREAT_ON_BISHOP S(27, 23)
#define KNIGHT_THREAT_ON_ROOK S(66, -14)
#define KNIGHT_THREAT_ON_QUEEN S(26, -38)

#define BISHOP_THREAT_ON_KNIGHT S(23, 31)
#define BISHOP_THREAT_ON_ROOK S(44, 5)
#define BISHOP_THREAT_ON_QUEEN S(46, 35)

#define ROOK_THREAT_ON_QUEEN S(60, -16)

/*
Average PST values for MG, EG:
Knight Values: 140 122
Bishop Values: 154 156
Rook Values: 220 340
Queen Values: 517 594
Pawn Values: 99 144
*/

#define KNIGHT_PST { { \
   S(-104, 18), S(86, 18), S(26, 116), S(135, 61), S(207, 69), S(174, 54), S(132, 39), S(91, 49), \
   S(84, 67), S(146, 68), S(152, 84), S(156, 81), S(85, 106), S(156, 97), S(124, 96), S(42, 105), \
   S(44, 100), S(175, 81), S(178, 108), S(190, 112), S(145, 119), S(139, 106), S(108, 112), S(143, 76), \
   S(141, 89), S(164, 102), S(166, 132), S(179, 138), S(192, 122), S(173, 123), S(159, 110), S(92, 100), \
   S(138, 105), S(174, 93), S(160, 133), S(171, 130), S(147, 135), S(139, 128), S(141, 116), S(112, 119), \
   S(123, 85), S(133, 107), S(134, 107), S(141, 140), S(177, 120), S(145, 106), S(146, 86), S(117, 93), \
   S(74, 91), S(164, 104), S(107, 110), S(121, 121), S(126, 115), S(124, 100), S(86, 96), S(65, 109), \
   S(43, 83), S(112, 94), S(84, 121), S(101, 115), S(103, 99), S(113, 90), S(102, 97), S(75, 106), \
}, { \
   S(-14, 124), S(37, 134), S(63, 163), S(124, 127), S(154, 137), S(-1, 150), S(49, 103), S(31, 0), \
   S(49, 159), S(95, 177), S(175, 137), S(165, 156), S(177, 136), S(199, 116), S(140, 129), S(157, 91), \
   S(108, 142), S(188, 146), S(194, 173), S(213, 158), S(222, 147), S(290, 144), S(215, 119), S(166, 122), \
   S(162, 158), S(175, 174), S(175, 191), S(228, 180), S(198, 181), S(236, 172), S(189, 165), S(205, 139), \
   S(151, 165), S(163, 158), S(177, 185), S(190, 184), S(199, 179), S(192, 176), S(213, 153), S(172, 145), \
   S(142, 145), S(150, 163), S(172, 158), S(177, 168), S(194, 172), S(185, 143), S(190, 131), S(157, 156), \
   S(133, 124), S(136, 145), S(153, 145), S(177, 150), S(175, 160), S(170, 143), S(173, 129), S(161, 131), \
   S(58, 144), S(152, 124), S(147, 134), S(147, 154), S(167, 149), S(155, 148), S(154, 140), S(159, 94), \
}, }

#define BISHOP_PST { { \
   S(157, 129), S(83, 124), S(26, 137), S(-92, 133), S(-58, 156), S(-23, 136), S(40, 153), S(118, 134), \
   S(134, 109), S(140, 118), S(133, 118), S(136, 79), S(173, 123), S(109, 148), S(85, 151), S(21, 159), \
   S(196, 106), S(227, 104), S(180, 147), S(202, 124), S(158, 133), S(189, 111), S(146, 146), S(169, 135), \
   S(154, 109), S(133, 140), S(147, 144), S(211, 138), S(154, 151), S(171, 138), S(195, 121), S(116, 147), \
   S(131, 119), S(119, 137), S(111, 145), S(153, 144), S(186, 132), S(169, 128), S(132, 132), S(131, 145), \
   S(122, 134), S(135, 131), S(151, 137), S(146, 143), S(168, 141), S(181, 129), S(180, 146), S(159, 138), \
   S(154, 106), S(147, 133), S(186, 116), S(151, 134), S(160, 126), S(183, 110), S(202, 101), S(122, 146), \
   S(64, 135), S(71, 167), S(148, 144), S(148, 143), S(179, 124), S(150, 128), S(139, 129), S(142, 117), \
}, { \
   S(158, 180), S(129, 173), S(66, 190), S(23, 199), S(107, 174), S(58, 189), S(205, 161), S(161, 151), \
   S(138, 192), S(154, 192), S(126, 183), S(97, 197), S(154, 171), S(167, 173), S(144, 175), S(90, 169), \
   S(161, 187), S(198, 181), S(197, 179), S(187, 173), S(194, 173), S(228, 187), S(199, 179), S(196, 173), \
   S(160, 185), S(183, 186), S(180, 198), S(222, 197), S(185, 198), S(196, 192), S(169, 175), S(164, 185), \
   S(168, 182), S(179, 187), S(185, 195), S(204, 201), S(198, 188), S(174, 185), S(162, 185), S(166, 167), \
   S(181, 173), S(198, 185), S(192, 192), S(193, 185), S(192, 195), S(201, 183), S(190, 174), S(181, 169), \
   S(190, 168), S(200, 158), S(200, 165), S(186, 177), S(194, 180), S(207, 173), S(218, 166), S(192, 155), \
   S(174, 159), S(206, 164), S(183, 180), S(168, 179), S(191, 177), S(172, 194), S(190, 174), S(185, 159), \
}, }

#define ROOK_PST { { \
   S(232, 303), S(178, 304), S(210, 299), S(170, 320), S(164, 324), S(164, 331), S(220, 307), S(114, 328), \
   S(281, 277), S(289, 280), S(231, 284), S(211, 296), S(236, 283), S(185, 313), S(125, 321), S(113, 323), \
   S(237, 288), S(270, 283), S(227, 281), S(254, 281), S(187, 298), S(167, 312), S(234, 286), S(101, 304), \
   S(169, 297), S(184, 301), S(179, 311), S(164, 311), S(187, 299), S(215, 308), S(98, 322), S(117, 310), \
   S(123, 300), S(121, 318), S(125, 318), S(162, 310), S(192, 292), S(161, 315), S(154, 295), S(150, 285), \
   S(153, 285), S(137, 300), S(175, 281), S(198, 261), S(130, 301), S(179, 294), S(124, 299), S(130, 280), \
   S(162, 277), S(147, 296), S(184, 274), S(171, 282), S(183, 285), S(176, 297), S(105, 299), S(127, 286), \
   S(184, 273), S(194, 280), S(174, 287), S(176, 288), S(185, 277), S(170, 296), S(121, 305), S(149, 286), \
}, { \
   S(285, 392), S(317, 385), S(257, 413), S(313, 387), S(304, 387), S(245, 415), S(308, 392), S(302, 387), \
   S(263, 399), S(260, 407), S(298, 398), S(323, 388), S(324, 375), S(332, 386), S(191, 432), S(253, 396), \
   S(241, 393), S(272, 396), S(263, 400), S(277, 396), S(285, 378), S(334, 372), S(309, 394), S(257, 383), \
   S(229, 395), S(273, 382), S(259, 400), S(261, 388), S(252, 383), S(254, 396), S(245, 388), S(236, 384), \
   S(235, 387), S(243, 389), S(249, 396), S(259, 386), S(277, 366), S(245, 386), S(260, 387), S(232, 379), \
   S(244, 372), S(253, 381), S(257, 375), S(250, 380), S(261, 375), S(279, 370), S(273, 374), S(245, 359), \
   S(234, 373), S(257, 368), S(256, 374), S(263, 378), S(271, 363), S(268, 371), S(263, 366), S(196, 375), \
   S(263, 374), S(264, 372), S(265, 376), S(271, 369), S(271, 365), S(266, 375), S(229, 381), S(256, 345), \
}, }

#define QUEEN_PST { { \
   S(466, 563), S(559, 498), S(613, 463), S(446, 510), S(664, 408), S(468, 530), S(530, 431), S(421, 548), \
   S(605, 441), S(467, 504), S(610, 429), S(495, 517), S(404, 536), S(412, 536), S(414, 505), S(420, 509), \
   S(542, 456), S(498, 507), S(580, 475), S(476, 516), S(468, 526), S(456, 520), S(420, 512), S(410, 528), \
   S(471, 510), S(455, 481), S(375, 538), S(441, 533), S(418, 490), S(445, 517), S(367, 551), S(444, 541), \
   S(473, 505), S(410, 544), S(412, 553), S(414, 541), S(405, 502), S(420, 581), S(399, 548), S(390, 559), \
   S(490, 452), S(453, 454), S(448, 495), S(452, 443), S(433, 501), S(480, 469), S(426, 522), S(423, 520), \
   S(416, 506), S(440, 430), S(479, 436), S(460, 465), S(474, 475), S(488, 480), S(397, 516), S(412, 454), \
   S(397, 487), S(422, 416), S(431, 462), S(470, 407), S(480, 425), S(430, 446), S(375, 501), S(363, 550), \
}, { \
   S(534, 695), S(554, 696), S(518, 751), S(599, 697), S(673, 649), S(573, 749), S(674, 679), S(619, 748), \
   S(531, 699), S(519, 702), S(552, 737), S(543, 761), S(497, 811), S(647, 693), S(594, 750), S(650, 729), \
   S(572, 671), S(568, 664), S(559, 694), S(563, 735), S(618, 692), S(648, 728), S(653, 668), S(614, 732), \
   S(538, 717), S(560, 695), S(563, 694), S(549, 728), S(554, 743), S(580, 734), S(568, 760), S(583, 724), \
   S(579, 659), S(550, 699), S(566, 705), S(555, 735), S(570, 703), S(560, 718), S(585, 709), S(579, 731), \
   S(567, 690), S(586, 653), S(576, 695), S(583, 670), S(579, 687), S(585, 694), S(594, 684), S(580, 712), \
   S(573, 655), S(582, 652), S(597, 640), S(603, 630), S(605, 634), S(594, 650), S(586, 605), S(588, 663), \
   S(587, 650), S(572, 638), S(583, 642), S(603, 610), S(586, 628), S(551, 661), S(550, 643), S(558, 616), \
}, }

#define PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(88, 206), S(28, 187), S(54, 189), S(147, 183), S(50, 259), S(56, 229), S(28, 269), S(63, 266), \
   S(84, 151), S(196, 108), S(226, 113), S(207, 136), S(61, 166), S(165, 126), S(90, 167), S(112, 165), \
   S(54, 134), S(60, 129), S(101, 124), S(112, 125), S(107, 134), S(109, 127), S(145, 122), S(148, 131), \
   S(32, 130), S(41, 134), S(88, 124), S(114, 119), S(114, 119), S(111, 116), S(113, 115), S(117, 120), \
   S(25, 125), S(43, 127), S(80, 125), S(72, 132), S(102, 123), S(110, 121), S(130, 98), S(132, 104), \
   S(31, 135), S(50, 130), S(87, 125), S(83, 129), S(96, 130), S(126, 119), S(135, 103), S(117, 111), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(103, 258), S(93, 254), S(84, 245), S(117, 204), S(86, 206), S(78, 177), S(22, 209), S(1, 239), \
   S(84, 181), S(88, 169), S(112, 157), S(130, 137), S(187, 128), S(179, 131), S(192, 145), S(148, 157), \
   S(78, 158), S(98, 137), S(100, 133), S(116, 105), S(113, 128), S(114, 121), S(87, 130), S(92, 132), \
   S(67, 143), S(87, 128), S(98, 125), S(124, 114), S(111, 123), S(112, 113), S(80, 117), S(85, 119), \
   S(71, 131), S(91, 117), S(98, 119), S(106, 125), S(111, 137), S(113, 121), S(117, 105), S(102, 111), \
   S(71, 136), S(99, 114), S(86, 135), S(102, 129), S(99, 152), S(130, 126), S(131, 106), S(97, 106), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define KING_PST { { \
   S(-95, -82), S(-40, -7), S(-8, -56), S(-214, 13), S(33, 35), S(0, 62), S(262, 4), S(311, -42), \
   S(169, -77), S(98, 23), S(204, 4), S(106, 13), S(213, 43), S(204, 62), S(261, 32), S(283, -8), \
   S(-34, 24), S(12, 29), S(61, 50), S(23, 50), S(268, 62), S(335, 55), S(396, 31), S(223, 18), \
   S(-56, -9), S(-13, 36), S(24, 39), S(-115, 66), S(271, 58), S(241, 58), S(379, 29), S(263, 16), \
   S(-161, 4), S(-18, 1), S(17, 29), S(-83, 54), S(218, 56), S(287, 36), S(287, 13), S(200, -4), \
   S(-23, -34), S(6, -5), S(-18, 17), S(17, 23), S(260, 37), S(288, 15), S(284, -1), S(281, -16), \
   S(8, -39), S(46, -29), S(41, -10), S(-35, 15), S(286, 20), S(263, 4), S(293, -19), S(286, -43), \
   S(19, -88), S(49, -56), S(10, -38), S(-70, -4), S(264, -16), S(234, -14), S(294, -50), S(267, -87), \
}, { \
   S(-216, -123), S(-71, -96), S(-62, -51), S(-331, 8), S(-80, 16), S(-16, 3), S(108, -14), S(-59, -29), \
   S(-292, 10), S(-215, 19), S(-323, 36), S(-283, 43), S(14, 48), S(17, 51), S(167, 4), S(-196, 55), \
   S(-340, 24), S(-193, 23), S(-149, 18), S(-320, 53), S(75, 43), S(261, 40), S(232, 38), S(13, 10), \
   S(-217, 0), S(-209, 23), S(-234, 37), S(-311, 61), S(-63, 70), S(0, 55), S(-25, 39), S(-160, 21), \
   S(-401, 13), S(-218, -2), S(-253, 27), S(-376, 62), S(-86, 78), S(-34, 47), S(-49, 24), S(-111, 6), \
   S(-283, -24), S(-285, 0), S(-274, 14), S(-339, 41), S(9, 43), S(4, 29), S(8, 10), S(-33, -13), \
   S(-212, -70), S(-245, -25), S(-282, 5), S(-330, 24), S(-34, 36), S(-11, 24), S(20, -1), S(8, -29), \
   S(-264, -113), S(-221, -82), S(-237, -48), S(-377, 5), S(-15, -11), S(-56, 7), S(20, -35), S(2, -74), \
}, }

#endif