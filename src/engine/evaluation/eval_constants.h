#ifndef __EVAL_CONSTANTS_H__
#define __EVAL_CONSTANTS_H__

#include <stdint.h>

#include "board_constants.h"
#include "board_info.h"

typedef uint8_t Phase_t;
typedef uint8_t Bucket_t;
enum {
  mg_phase,
  eg_phase,
  NUM_PHASES,
  PHASE_MAX = 24,

  KNIGHT_PHASE_VALUE = 1,
  BISHOP_PHASE_VALUE = 1,
  ROOK_PHASE_VALUE = 2,
  QUEEN_PHASE_VALUE = 4,
  PAWN_PHASE_VALUE = 0,
  KING_PHASE_VALUE = 0,

  QS_PST_MASK = C64(0x0F0F0F0F0F0F0F0F),
  KS_PST_MASK = C64(0xF0F0F0F0F0F0F0F0),
  NUM_PST_BUCKETS = 2,
};

// used for eval calcuations. Contains both EG and MG score packed into 1 value.
typedef int32_t Score_t;
#define S(mg, eg) \
	((Score_t)((uint32_t)eg << 16) + mg)

/*

 ██████╗ ██████╗ ███╗   ██╗███████╗████████╗ █████╗ ███╗   ██╗████████╗███████╗
██╔════╝██╔═══██╗████╗  ██║██╔════╝╚══██╔══╝██╔══██╗████╗  ██║╚══██╔══╝██╔════╝
██║     ██║   ██║██╔██╗ ██║███████╗   ██║   ███████║██╔██╗ ██║   ██║   ███████╗
██║     ██║   ██║██║╚██╗██║╚════██║   ██║   ██╔══██║██║╚██╗██║   ██║   ╚════██║
╚██████╗╚██████╔╝██║ ╚████║███████║   ██║   ██║  ██║██║ ╚████║   ██║   ███████║
 ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝

*/                                                                        

#define TEMPO_BONUS \
   S(49, 38)

#define BISHOP_PAIR_BONUS \
   S(39, 65)

#define PASSED_PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(31, 340), S(42, 284), S(11, 298), S(17, 313), S(40, 357), S(0, 373), S(-36, 386), S(35, 377), \
   S(-31, 186), S(-19, 177), S(-9, 125), S(-106, 112), S(5, 120), S(-10, 216), S(-73, 265), S(-91, 309), \
   S(-18, 86), S(12, 69), S(37, 49), S(41, 37), S(-21, 79), S(-63, 110), S(-74, 150), S(-125, 188), \
   S(8, 48), S(-2, 41), S(-7, 27), S(0, 16), S(-59, 43), S(-73, 54), S(-25, 76), S(-70, 94), \
   S(54, 6), S(6, 21), S(39, 3), S(2, -5), S(-51, 15), S(-28, 17), S(-66, 41), S(-18, 31), \
   S(12, 2), S(80, 11), S(84, 5), S(-26, -11), S(-26, 6), S(-34, 8), S(-50, 31), S(-33, 25), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(79, 373), S(58, 360), S(24, 367), S(71, 324), S(73, 310), S(38, 290), S(11, 316), S(-12, 350), \
   S(38, 250), S(4, 267), S(2, 210), S(32, 150), S(8, 98), S(47, 110), S(-15, 114), S(-29, 169), \
   S(12, 135), S(1, 129), S(11, 94), S(8, 79), S(15, 56), S(60, 41), S(20, 67), S(14, 73), \
   S(4, 71), S(-25, 72), S(-41, 61), S(-15, 38), S(-15, 37), S(-23, 38), S(13, 51), S(34, 39), \
   S(0, 24), S(-17, 32), S(-37, 29), S(-30, 20), S(1, 6), S(-1, 13), S(26, 32), S(45, 9), \
   S(-1, 18), S(-4, 25), S(2, 5), S(-25, 12), S(27, 3), S(27, 2), S(55, 25), S(18, 19), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define BLOCKED_PASSERS { \
   S(146, -439), S(27, -139), S(4, -55), S(5, -22), S(5, 0), S(-7, -4), S(0, 0), S(0, 0), \
}

#define ROOK_OPEN_FILE { \
   S(44, -4), S(58, -12), S(49, -10), S(54, -8), S(61, -7), S(88, -22), S(137, -32), S(134, -26), \
}

#define ROOK_SEMI_OPEN_FILE { \
   S(-9, 60), S(12, 29), S(17, 14), S(27, 4), S(25, -3), S(30, -5), S(56, -7), S(30, 36), \
}

#define QUEEN_OPEN_FILE { \
   S(-4, 2), S(-6, 18), S(-21, 21), S(-19, 34), S(-1, 26), S(31, -13), S(59, -44), S(95, -64), \
}

#define QUEEN_SEMI_OPEN_FILE { \
   S(-1, 13), S(14, 11), S(3, 11), S(-12, 57), S(11, 19), S(30, -35), S(47, -61), S(47, -31), \
}

#define KING_OPEN_FILE { \
   S(-81, -15), S(-123, 0), S(-91, -2), S(-48, -10), S(-69, -2), S(-90, 8), S(-113, 16), S(-58, 3), \
}

#define KING_SEMI_OPEN_FILE { \
   S(-33, 42), S(-62, 21), S(-29, -2), S(-21, -4), S(-27, 0), S(-30, 3), S(-46, 21), S(-50, 40), \
}

#define ISOLATED_PAWNS { \
   S(-16, -20), S(-23, -16), S(-23, -18), S(-37, -12), S(-31, -21), S(-10, -17), S(-17, -18), S(-32, -16), \
}

#define KNIGHT_MOBILITY { \
   S(292, 159), S(317, 214), S(332, 241), S(338, 257), S(353, 259), S(361, 270), S(370, 268), S(379, 264), S(406, 245), \
}

#define BISHOP_MOBILITY { \
   S(283, 171), S(300, 205), S(319, 214), S(329, 230), S(339, 246), S(343, 258), S(348, 263), S(353, 263), S(352, 273), S(360, 267), S(371, 267), S(397, 256), S(365, 289), S(436, 245), \
}

#define ROOK_MOBILITY { \
   S(364, 330), S(379, 360), S(383, 371), S(390, 386), S(390, 398), S(397, 407), S(400, 414), S(408, 418), S(419, 422), S(424, 428), S(426, 432), S(436, 437), S(439, 443), S(449, 435), S(455, 430), \
}

#define QUEEN_MOBILITY { \
   S(831, 500), S(831, 591), S(829, 585), S(831, 593), S(837, 596), S(839, 629), S(840, 658), S(844, 692), S(848, 707), S(853, 721), S(854, 731), S(860, 747), S(861, 753), S(864, 767), S(875, 771), S(874, 784), S(875, 790), S(882, 790), S(902, 785), S(918, 781), S(941, 777), S(958, 778), S(1005, 744), S(1002, 757), S(1039, 723), S(1140, 680), S(839, 866), S(802, 852), \
}

#define PAWN_THREAT_ON_KNIGHT S(94, 30)
#define PAWN_THREAT_ON_BISHOP S(91, 61)
#define PAWN_THREAT_ON_ROOK S(153, -15)
#define PAWN_THREAT_ON_QUEEN S(99, -3)

#define KNIGHT_THREAT_ON_BISHOP S(44, 50)
#define KNIGHT_THREAT_ON_ROOK S(99, 15)
#define KNIGHT_THREAT_ON_QUEEN S(73, -32)

#define BISHOP_THREAT_ON_KNIGHT S(25, 32)
#define BISHOP_THREAT_ON_ROOK S(77, 35)
#define BISHOP_THREAT_ON_QUEEN S(84, 28)

#define ROOK_THREAT_ON_QUEEN S(98, -16)

/*
Average PST values for MG, EG:
Knight Values: 169 120
Bishop Values: 189 160
Rook Values: 257 338
Queen Values: 623 595
Pawn Values: 114 161
*/

#define KNIGHT_PST { { \
   S(-55, 2), S(156, 3), S(0, 52), S(164, 49), S(224, 43), S(123, 59), S(105, 59), S(78, 16), \
   S(140, 44), S(227, 49), S(123, 72), S(240, 65), S(187, 91), S(213, 74), S(135, 93), S(21, 104), \
   S(195, 51), S(220, 61), S(223, 81), S(223, 99), S(203, 103), S(203, 99), S(170, 100), S(84, 92), \
   S(187, 96), S(193, 95), S(232, 118), S(220, 115), S(237, 123), S(220, 112), S(198, 102), S(122, 106), \
   S(179, 82), S(229, 86), S(201, 128), S(213, 120), S(181, 134), S(192, 120), S(151, 106), S(107, 126), \
   S(147, 72), S(163, 104), S(161, 113), S(176, 124), S(209, 113), S(181, 100), S(159, 101), S(114, 110), \
   S(72, 74), S(154, 100), S(144, 104), S(159, 117), S(158, 108), S(146, 106), S(123, 103), S(86, 101), \
   S(121, 39), S(125, 81), S(94, 113), S(150, 97), S(114, 97), S(137, 77), S(132, 51), S(40, 94), \
}, { \
   S(-16, 125), S(-47, 179), S(70, 153), S(90, 151), S(193, 125), S(48, 136), S(129, 71), S(81, 28), \
   S(81, 150), S(111, 181), S(177, 156), S(204, 152), S(196, 154), S(211, 122), S(160, 123), S(150, 115), \
   S(114, 164), S(176, 154), S(193, 189), S(240, 174), S(274, 158), S(389, 113), S(256, 137), S(226, 111), \
   S(178, 158), S(212, 171), S(206, 195), S(255, 193), S(230, 197), S(275, 186), S(214, 185), S(252, 146), \
   S(177, 159), S(194, 176), S(211, 191), S(224, 190), S(228, 198), S(228, 188), S(249, 163), S(198, 157), \
   S(167, 148), S(184, 157), S(204, 160), S(210, 179), S(232, 180), S(218, 156), S(224, 154), S(180, 157), \
   S(158, 113), S(174, 128), S(185, 152), S(216, 144), S(219, 149), S(215, 141), S(217, 142), S(192, 130), \
   S(77, 143), S(173, 126), S(165, 135), S(178, 155), S(203, 151), S(191, 148), S(176, 139), S(161, 112), \
}, }

#define BISHOP_PST { { \
   S(17, 146), S(133, 127), S(126, 106), S(74, 113), S(-31, 152), S(25, 143), S(59, 135), S(95, 132), \
   S(208, 94), S(167, 118), S(137, 119), S(141, 121), S(206, 123), S(111, 148), S(116, 157), S(25, 158), \
   S(241, 114), S(353, 84), S(229, 121), S(225, 123), S(208, 136), S(217, 133), S(123, 158), S(132, 142), \
   S(206, 117), S(179, 133), S(233, 131), S(237, 127), S(215, 157), S(198, 142), S(205, 131), S(127, 141), \
   S(161, 126), S(168, 135), S(156, 150), S(204, 147), S(213, 139), S(233, 128), S(182, 126), S(140, 137), \
   S(147, 129), S(174, 136), S(178, 146), S(180, 141), S(221, 139), S(216, 129), S(234, 132), S(180, 142), \
   S(179, 114), S(175, 138), S(174, 122), S(190, 127), S(196, 124), S(226, 126), S(227, 119), S(174, 118), \
   S(63, 144), S(126, 150), S(179, 132), S(152, 145), S(186, 128), S(167, 131), S(167, 131), S(123, 141), \
}, { \
   S(186, 176), S(124, 190), S(88, 202), S(76, 197), S(121, 190), S(129, 182), S(150, 179), S(200, 153), \
   S(147, 205), S(176, 201), S(191, 190), S(163, 186), S(176, 189), S(216, 170), S(178, 189), S(146, 170), \
   S(193, 189), S(206, 203), S(213, 202), S(220, 192), S(261, 183), S(307, 190), S(273, 186), S(247, 174), \
   S(188, 196), S(213, 198), S(217, 208), S(277, 201), S(243, 216), S(246, 206), S(213, 198), S(220, 187), \
   S(203, 183), S(214, 195), S(232, 206), S(251, 212), S(255, 202), S(218, 205), S(233, 182), S(218, 175), \
   S(220, 179), S(240, 193), S(237, 200), S(235, 201), S(233, 208), S(251, 191), S(231, 188), S(220, 181), \
   S(239, 164), S(246, 158), S(237, 172), S(229, 181), S(239, 182), S(252, 183), S(267, 170), S(232, 159), \
   S(212, 167), S(240, 173), S(217, 185), S(211, 188), S(224, 186), S(208, 193), S(232, 169), S(219, 154), \
}, }

#define ROOK_PST { { \
   S(222, 297), S(201, 301), S(205, 297), S(194, 306), S(214, 302), S(202, 314), S(171, 311), S(195, 297), \
   S(283, 277), S(286, 279), S(305, 261), S(290, 272), S(229, 286), S(237, 304), S(163, 311), S(163, 305), \
   S(286, 276), S(309, 269), S(342, 264), S(303, 259), S(262, 275), S(197, 316), S(198, 296), S(154, 295), \
   S(239, 287), S(209, 294), S(212, 289), S(255, 291), S(206, 302), S(226, 313), S(123, 318), S(163, 299), \
   S(169, 295), S(204, 288), S(209, 287), S(211, 289), S(211, 290), S(205, 307), S(139, 307), S(131, 302), \
   S(164, 283), S(192, 281), S(219, 277), S(217, 273), S(186, 283), S(197, 295), S(136, 305), S(160, 277), \
   S(173, 267), S(171, 283), S(212, 265), S(203, 275), S(179, 285), S(171, 304), S(131, 284), S(130, 284), \
   S(196, 269), S(219, 269), S(216, 272), S(211, 284), S(214, 278), S(205, 288), S(130, 308), S(173, 275), \
}, { \
   S(332, 382), S(318, 396), S(276, 415), S(332, 388), S(322, 393), S(306, 399), S(328, 395), S(343, 384), \
   S(309, 402), S(302, 416), S(335, 408), S(379, 388), S(372, 383), S(372, 382), S(250, 424), S(300, 396), \
   S(287, 398), S(312, 405), S(317, 407), S(353, 389), S(363, 379), S(401, 369), S(373, 377), S(346, 374), \
   S(265, 408), S(291, 405), S(303, 417), S(320, 397), S(317, 393), S(349, 389), S(327, 392), S(299, 388), \
   S(276, 390), S(262, 410), S(291, 409), S(295, 397), S(316, 378), S(305, 387), S(307, 386), S(288, 373), \
   S(274, 377), S(274, 393), S(289, 393), S(293, 388), S(307, 378), S(320, 375), S(318, 369), S(289, 361), \
   S(264, 376), S(280, 377), S(280, 393), S(298, 382), S(311, 369), S(320, 372), S(334, 355), S(233, 370), \
   S(292, 376), S(292, 376), S(297, 389), S(308, 378), S(314, 370), S(316, 374), S(272, 382), S(310, 334), \
}, }

#define QUEEN_PST { { \
   S(570, 485), S(595, 474), S(749, 401), S(529, 477), S(631, 458), S(534, 512), S(637, 418), S(445, 519), \
   S(748, 381), S(659, 426), S(678, 455), S(538, 548), S(582, 514), S(512, 515), S(436, 543), S(498, 485), \
   S(684, 401), S(732, 433), S(789, 436), S(678, 439), S(542, 523), S(496, 537), S(485, 538), S(449, 516), \
   S(606, 489), S(595, 469), S(548, 506), S(548, 509), S(542, 484), S(518, 502), S(492, 521), S(509, 485), \
   S(559, 501), S(536, 519), S(517, 588), S(565, 494), S(535, 465), S(504, 547), S(494, 518), S(460, 511), \
   S(558, 468), S(547, 475), S(533, 493), S(531, 451), S(540, 482), S(567, 462), S(508, 540), S(490, 463), \
   S(532, 456), S(527, 449), S(567, 424), S(535, 468), S(567, 429), S(573, 446), S(458, 531), S(484, 458), \
   S(489, 492), S(531, 440), S(541, 438), S(559, 395), S(555, 408), S(516, 478), S(481, 499), S(470, 448), \
}, { \
   S(663, 672), S(662, 701), S(682, 701), S(704, 702), S(749, 686), S(775, 712), S(798, 712), S(726, 750), \
   S(655, 697), S(642, 701), S(654, 743), S(662, 745), S(622, 827), S(759, 752), S(709, 784), S(722, 777), \
   S(662, 686), S(680, 680), S(675, 708), S(699, 724), S(744, 722), S(811, 748), S(787, 741), S(764, 767), \
   S(644, 713), S(665, 703), S(665, 722), S(686, 716), S(673, 780), S(698, 802), S(693, 825), S(689, 793), \
   S(679, 677), S(659, 711), S(687, 706), S(681, 733), S(687, 733), S(673, 771), S(692, 774), S(686, 783), \
   S(674, 673), S(695, 653), S(680, 705), S(689, 685), S(698, 689), S(694, 725), S(703, 738), S(690, 733), \
   S(672, 651), S(691, 652), S(707, 642), S(714, 647), S(714, 644), S(710, 666), S(708, 660), S(675, 722), \
   S(675, 657), S(671, 652), S(694, 641), S(710, 615), S(695, 633), S(658, 681), S(647, 699), S(668, 646), \
}, }

#define PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(31, 340), S(42, 284), S(11, 298), S(17, 313), S(40, 357), S(0, 373), S(-36, 386), S(35, 377), \
   S(140, 143), S(223, 96), S(215, 125), S(285, 139), S(128, 188), S(140, 140), S(91, 182), S(138, 153), \
   S(75, 135), S(112, 114), S(134, 112), S(145, 113), S(139, 124), S(143, 124), S(127, 138), S(142, 133), \
   S(56, 130), S(68, 122), S(122, 110), S(147, 111), S(140, 117), S(154, 111), S(114, 122), S(132, 119), \
   S(49, 123), S(75, 117), S(108, 117), S(111, 122), S(142, 119), S(150, 111), S(148, 104), S(143, 106), \
   S(52, 133), S(81, 119), S(118, 117), S(131, 117), S(137, 121), S(179, 108), S(161, 104), S(129, 109), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(79, 373), S(58, 360), S(24, 367), S(71, 324), S(73, 310), S(38, 290), S(11, 316), S(-12, 350), \
   S(92, 180), S(118, 156), S(138, 149), S(150, 148), S(204, 157), S(214, 128), S(204, 153), S(156, 147), \
   S(91, 159), S(119, 139), S(117, 134), S(139, 111), S(140, 119), S(145, 111), S(114, 129), S(119, 123), \
   S(80, 143), S(102, 128), S(129, 116), S(149, 111), S(141, 116), S(152, 104), S(106, 116), S(109, 114), \
   S(87, 129), S(112, 114), S(125, 116), S(126, 122), S(136, 130), S(145, 111), S(145, 104), S(124, 106), \
   S(81, 136), S(124, 111), S(105, 134), S(125, 133), S(119, 144), S(171, 117), S(162, 107), S(122, 103), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define KING_PST { { \
   S(14, -96), S(134, -38), S(57, -77), S(227, -89), S(274, -36), S(339, -14), S(352, -48), S(286, -71), \
   S(48, -44), S(204, 22), S(135, 12), S(18, 17), S(279, 37), S(334, 34), S(379, 16), S(399, -45), \
   S(96, -12), S(131, 12), S(260, 29), S(9, 35), S(318, 43), S(402, 37), S(386, 21), S(341, -3), \
   S(-38, -24), S(50, 19), S(25, 32), S(-95, 64), S(254, 65), S(236, 66), S(320, 48), S(286, 14), \
   S(-106, -9), S(-69, 18), S(-94, 47), S(-153, 69), S(181, 78), S(271, 50), S(297, 21), S(217, 0), \
   S(-123, -22), S(-20, 0), S(-116, 42), S(-147, 55), S(238, 55), S(228, 41), S(306, 5), S(302, -21), \
   S(19, -50), S(8, -17), S(-42, 7), S(-132, 29), S(250, 34), S(278, 12), S(327, -17), S(325, -44), \
   S(6, -98), S(61, -80), S(-21, -39), S(-126, -7), S(302, -26), S(264, -19), S(367, -70), S(346, -100), \
}, { \
   S(-100, -157), S(-157, -71), S(-154, -62), S(-205, -44), S(-51, -19), S(80, -28), S(311, -89), S(72, -63), \
   S(-116, -60), S(-187, -1), S(-167, -3), S(-308, 25), S(98, 13), S(85, 22), S(117, 21), S(-57, 15), \
   S(-251, -3), S(-196, 17), S(-251, 23), S(-286, 43), S(86, 38), S(259, 38), S(188, 50), S(41, 8), \
   S(-295, -2), S(-296, 36), S(-329, 44), S(-356, 63), S(-42, 61), S(10, 54), S(-84, 56), S(-197, 22), \
   S(-386, -4), S(-266, 2), S(-369, 45), S(-442, 66), S(-109, 77), S(-118, 64), S(-99, 35), S(-163, 5), \
   S(-326, -28), S(-321, 1), S(-377, 31), S(-447, 57), S(-107, 67), S(-81, 48), S(-31, 16), S(-59, -15), \
   S(-236, -76), S(-295, -22), S(-370, 15), S(-412, 31), S(-101, 49), S(-60, 31), S(15, -4), S(18, -39), \
   S(-256, -116), S(-208, -100), S(-248, -61), S(-399, -9), S(-18, -19), S(-61, -5), S(50, -55), S(37, -99), \
}, }

#endif