#ifndef __EVAL_CONSTANTS_H__
#define __EVAL_CONSTANTS_H__

#include <stdint.h>

#include "board_constants.h"
#include "board_info.h"

typedef uint8_t Phase_t;
typedef uint8_t Bucket_t;
enum {
  mg_phase,
  eg_phase,
  NUM_PHASES,
  PHASE_MAX = 24,

  KNIGHT_PHASE_VALUE = 1,
  BISHOP_PHASE_VALUE = 1,
  ROOK_PHASE_VALUE = 2,
  QUEEN_PHASE_VALUE = 4,
  PAWN_PHASE_VALUE = 0,
  KING_PHASE_VALUE = 0,

  QS_PST_MASK = C64(0x0F0F0F0F0F0F0F0F),
  KS_PST_MASK = C64(0xF0F0F0F0F0F0F0F0),
  NUM_PST_BUCKETS = 2,
};

// used for eval calcuations. Contains both EG and MG score packed into 1 value.
typedef int32_t Score_t;
#define S(mg, eg) \
	((Score_t)((uint32_t)eg << 16) + mg)


/*

  ██████╗ ██████╗ ███╗   ██╗███████╗████████╗ █████╗ ███╗   ██╗████████╗███████╗
 ██╔════╝██╔═══██╗████╗  ██║██╔════╝╚══██╔══╝██╔══██╗████╗  ██║╚══██╔══╝██╔════╝
 ██║     ██║   ██║██╔██╗ ██║███████╗   ██║   ███████║██╔██╗ ██║   ██║   ███████╗
 ██║     ██║   ██║██║╚██╗██║╚════██║   ██║   ██╔══██║██║╚██╗██║   ██║   ╚════██║
 ╚██████╗╚██████╔╝██║ ╚████║███████║   ██║   ██║  ██║██║ ╚████║   ██║   ███████║
  ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝

*/

#define BISHOP_PAIR_BONUS \
   S(39, 68)

#define PASSED_PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(31, 337), S(44, 279), S(25, 293), S(31, 308), S(52, 352), S(4, 367), S(-26, 377), S(32, 373), \
   S(-33, 188), S(-50, 182), S(-4, 121), S(-110, 116), S(-4, 125), S(-24, 222), S(-71, 264), S(-72, 306), \
   S(-11, 85), S(7, 71), S(28, 53), S(31, 42), S(-19, 79), S(-59, 111), S(-62, 149), S(-116, 188), \
   S(3, 50), S(-10, 45), S(1, 26), S(-1, 17), S(-50, 41), S(-67, 56), S(-15, 77), S(-61, 95), \
   S(56, 9), S(1, 24), S(41, 5), S(-4, -1), S(-44, 15), S(-27, 20), S(-52, 41), S(-7, 30), \
   S(3, 5), S(68, 19), S(81, 8), S(-14, -5), S(-32, 8), S(-28, 10), S(-39, 30), S(-29, 27), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(84, 366), S(88, 347), S(36, 359), S(81, 317), S(97, 299), S(35, 286), S(40, 306), S(-11, 343), \
   S(48, 246), S(10, 264), S(6, 208), S(35, 152), S(6, 96), S(57, 110), S(-12, 111), S(-19, 163), \
   S(16, 135), S(6, 129), S(14, 96), S(8, 81), S(16, 57), S(59, 43), S(14, 70), S(25, 69), \
   S(11, 72), S(-20, 74), S(-32, 60), S(-11, 38), S(-13, 36), S(-20, 40), S(11, 52), S(41, 38), \
   S(2, 26), S(-7, 34), S(-33, 30), S(-30, 21), S(4, 6), S(10, 11), S(22, 34), S(46, 10), \
   S(0, 21), S(2, 26), S(2, 7), S(-27, 16), S(24, 5), S(19, 6), S(30, 34), S(14, 22), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define BLOCKED_PASSERS { \
   S(124, -426), S(19, -133), S(-4, -50), S(-6, -19), S(-1, 0), S(-17, 0), S(0, 0), S(0, 0), \
}

#define ROOK_OPEN_FILE { \
   S(46, -3), S(58, -9), S(52, -8), S(54, -6), S(61, -7), S(62, -15), S(124, -26), S(122, -21), \
}

#define ROOK_SEMI_OPEN_FILE { \
   S(-8, 52), S(15, 21), S(17, 10), S(27, 2), S(28, -8), S(21, -11), S(52, -12), S(22, 31), \
}

#define QUEEN_OPEN_FILE { \
   S(-1, 6), S(-3, 20), S(-20, 21), S(-22, 37), S(-7, 34), S(-7, 5), S(29, -27), S(67, -39), \
}

#define QUEEN_SEMI_OPEN_FILE { \
   S(1, 1), S(15, 2), S(2, 8), S(-11, 53), S(9, 21), S(22, -38), S(46, -66), S(41, -39), \
}

#define KING_OPEN_FILE { \
   S(-81, -15), S(-113, 0), S(-88, -3), S(-40, -12), S(-65, -3), S(-82, 7), S(-109, 15), S(-56, 2), \
}

#define KING_SEMI_OPEN_FILE { \
   S(-19, 35), S(-50, 17), S(-21, -3), S(-13, -6), S(-20, -2), S(-25, 1), S(-39, 17), S(-44, 35), \
}

#define ISOLATED_PAWNS { \
   S(-18, -20), S(-24, -14), S(-22, -18), S(-37, -11), S(-33, -20), S(-8, -17), S(-17, -18), S(-32, -15), \
}

#define KNIGHT_MOBILITY { \
   S(284, 139), S(306, 200), S(319, 229), S(323, 245), S(335, 248), S(342, 259), S(350, 258), S(357, 255), S(379, 239), \
}

#define BISHOP_MOBILITY { \
   S(271, 158), S(287, 191), S(304, 201), S(314, 217), S(322, 234), S(326, 246), S(330, 252), S(334, 254), S(333, 262), S(342, 257), S(353, 258), S(377, 249), S(347, 284), S(412, 241), \
}

#define ROOK_MOBILITY { \
   S(348, 311), S(362, 340), S(366, 352), S(372, 367), S(372, 378), S(379, 386), S(380, 393), S(387, 397), S(396, 402), S(401, 408), S(400, 413), S(408, 419), S(408, 426), S(417, 420), S(423, 416), \
}

#define QUEEN_MOBILITY { \
   S(811, 478), S(808, 577), S(805, 532), S(805, 556), S(810, 561), S(810, 590), S(810, 622), S(810, 657), S(813, 669), S(815, 685), S(814, 697), S(818, 709), S(816, 718), S(816, 732), S(822, 741), S(817, 754), S(814, 763), S(813, 769), S(840, 758), S(847, 760), S(875, 755), S(883, 762), S(913, 739), S(925, 744), S(919, 737), S(1062, 669), S(801, 849), S(740, 835), \
}

/*
Average PST values for MG, EG:
Knight Values: 164 116
Bishop Values: 181 153
Rook Values: 244 326
Queen Values: 587 574
Pawn Values: 110 157
*/

#define KNIGHT_PST { { \
   S(-70, 6), S(216, -1), S(-6, 65), S(163, 55), S(251, 42), S(157, 54), S(107, 58), S(76, 17), \
   S(138, 45), S(220, 55), S(167, 74), S(245, 67), S(193, 89), S(263, 58), S(137, 84), S(33, 98), \
   S(171, 56), S(228, 60), S(224, 88), S(216, 98), S(215, 97), S(213, 87), S(189, 93), S(79, 85), \
   S(163, 96), S(174, 92), S(223, 118), S(204, 113), S(221, 119), S(218, 103), S(187, 93), S(119, 100), \
   S(166, 79), S(219, 84), S(187, 126), S(202, 114), S(164, 130), S(183, 112), S(146, 98), S(104, 121), \
   S(138, 70), S(153, 101), S(154, 108), S(167, 121), S(196, 106), S(172, 94), S(148, 97), S(107, 111), \
   S(67, 74), S(145, 96), S(131, 101), S(151, 114), S(149, 106), S(139, 104), S(109, 102), S(88, 97), \
   S(103, 45), S(123, 81), S(78, 113), S(144, 92), S(103, 98), S(135, 77), S(133, 52), S(35, 97), \
}, { \
   S(-38, 135), S(-28, 172), S(78, 145), S(94, 144), S(185, 127), S(38, 147), S(117, 81), S(45, 39), \
   S(85, 140), S(110, 171), S(209, 138), S(221, 145), S(196, 155), S(248, 110), S(164, 123), S(150, 115), \
   S(110, 151), S(194, 139), S(201, 177), S(239, 165), S(280, 147), S(357, 122), S(254, 131), S(193, 116), \
   S(171, 149), S(194, 163), S(198, 183), S(248, 182), S(214, 188), S(261, 180), S(190, 179), S(231, 143), \
   S(167, 151), S(175, 167), S(193, 182), S(203, 185), S(210, 189), S(210, 182), S(221, 158), S(186, 151), \
   S(158, 141), S(172, 151), S(192, 152), S(190, 173), S(215, 173), S(203, 149), S(206, 148), S(165, 152), \
   S(152, 108), S(165, 122), S(172, 148), S(205, 139), S(205, 145), S(197, 137), S(198, 137), S(177, 130), \
   S(65, 141), S(171, 120), S(151, 131), S(165, 149), S(188, 148), S(178, 144), S(174, 135), S(150, 112), \
}, }

#define BISHOP_PST { { \
   S(49, 138), S(153, 120), S(105, 109), S(64, 107), S(-32, 145), S(51, 130), S(77, 125), S(120, 125), \
   S(177, 94), S(179, 112), S(138, 118), S(136, 116), S(211, 115), S(117, 135), S(124, 146), S(24, 152), \
   S(205, 114), S(325, 82), S(181, 128), S(221, 118), S(201, 132), S(222, 118), S(124, 144), S(121, 138), \
   S(189, 116), S(174, 127), S(216, 129), S(229, 120), S(202, 149), S(194, 133), S(208, 122), S(135, 131), \
   S(164, 118), S(163, 128), S(150, 143), S(197, 139), S(211, 128), S(221, 122), S(178, 120), S(143, 128), \
   S(150, 122), S(163, 130), S(174, 139), S(172, 135), S(212, 131), S(206, 124), S(224, 129), S(182, 137), \
   S(187, 105), S(174, 134), S(167, 115), S(183, 122), S(185, 122), S(214, 120), S(224, 112), S(161, 120), \
   S(63, 139), S(124, 143), S(176, 128), S(141, 141), S(180, 123), S(164, 126), S(154, 127), S(114, 139), \
}, { \
   S(176, 175), S(132, 182), S(99, 189), S(88, 186), S(108, 184), S(133, 177), S(152, 176), S(180, 155), \
   S(135, 200), S(192, 184), S(184, 179), S(156, 178), S(187, 179), S(210, 164), S(196, 175), S(136, 165), \
   S(152, 193), S(198, 192), S(211, 190), S(211, 184), S(230, 180), S(266, 190), S(228, 180), S(197, 178), \
   S(178, 187), S(206, 189), S(204, 200), S(260, 191), S(232, 202), S(222, 198), S(209, 184), S(184, 183), \
   S(198, 175), S(204, 186), S(214, 199), S(238, 201), S(234, 193), S(212, 191), S(214, 174), S(211, 167), \
   S(212, 173), S(227, 186), S(222, 193), S(224, 192), S(219, 199), S(234, 185), S(217, 180), S(210, 175), \
   S(232, 159), S(236, 154), S(227, 166), S(214, 176), S(225, 176), S(239, 176), S(257, 163), S(222, 153), \
   S(197, 161), S(224, 169), S(209, 177), S(193, 183), S(210, 180), S(204, 182), S(218, 166), S(204, 151), \
}, }

#define ROOK_PST { { \
   S(204, 292), S(167, 303), S(170, 301), S(174, 304), S(194, 302), S(225, 297), S(192, 294), S(213, 280), \
   S(274, 264), S(268, 269), S(255, 266), S(261, 268), S(219, 279), S(242, 285), S(159, 294), S(157, 292), \
   S(259, 270), S(268, 266), S(290, 270), S(277, 255), S(240, 269), S(200, 297), S(198, 279), S(147, 279), \
   S(215, 278), S(187, 285), S(172, 290), S(222, 286), S(193, 294), S(246, 288), S(125, 299), S(174, 278), \
   S(148, 286), S(174, 285), S(169, 287), S(172, 287), S(186, 285), S(207, 289), S(135, 290), S(136, 287), \
   S(145, 277), S(179, 273), S(200, 269), S(206, 260), S(170, 276), S(215, 277), S(146, 288), S(172, 258), \
   S(175, 253), S(158, 275), S(192, 258), S(196, 266), S(173, 276), S(183, 288), S(134, 270), S(146, 264), \
   S(202, 259), S(215, 262), S(205, 266), S(210, 275), S(216, 270), S(216, 281), S(145, 296), S(189, 266), \
}, { \
   S(318, 369), S(303, 382), S(260, 400), S(311, 379), S(299, 387), S(273, 399), S(324, 385), S(342, 369), \
   S(293, 384), S(279, 399), S(315, 391), S(356, 374), S(352, 370), S(336, 379), S(231, 410), S(287, 380), \
   S(270, 381), S(295, 387), S(295, 389), S(328, 375), S(324, 370), S(353, 367), S(333, 371), S(310, 365), \
   S(256, 385), S(279, 382), S(288, 396), S(294, 380), S(284, 382), S(309, 380), S(292, 382), S(272, 375), \
   S(263, 371), S(247, 390), S(270, 391), S(268, 383), S(278, 368), S(276, 376), S(272, 378), S(277, 354), \
   S(265, 360), S(264, 374), S(274, 376), S(277, 372), S(295, 362), S(300, 362), S(299, 357), S(274, 347), \
   S(265, 359), S(275, 359), S(275, 374), S(288, 366), S(299, 355), S(309, 357), S(318, 345), S(231, 352), \
   S(294, 363), S(290, 362), S(295, 373), S(304, 365), S(307, 360), S(314, 363), S(267, 370), S(308, 323), \
}, }

#define QUEEN_PST { { \
   S(525, 479), S(557, 471), S(669, 417), S(485, 471), S(547, 478), S(476, 519), S(624, 410), S(447, 486), \
   S(684, 392), S(560, 445), S(590, 470), S(481, 544), S(564, 484), S(489, 499), S(419, 531), S(496, 455), \
   S(589, 422), S(619, 443), S(675, 460), S(585, 452), S(506, 506), S(495, 505), S(482, 508), S(445, 497), \
   S(529, 493), S(523, 467), S(490, 488), S(478, 510), S(504, 460), S(506, 473), S(469, 506), S(502, 467), \
   S(528, 487), S(473, 512), S(480, 555), S(528, 468), S(500, 436), S(488, 532), S(477, 513), S(452, 484), \
   S(537, 444), S(520, 448), S(510, 455), S(513, 427), S(526, 456), S(562, 433), S(502, 512), S(485, 444), \
   S(519, 427), S(504, 440), S(557, 388), S(526, 442), S(554, 411), S(580, 424), S(458, 511), S(488, 432), \
   S(466, 474), S(514, 431), S(523, 425), S(550, 390), S(541, 391), S(522, 458), S(480, 475), S(474, 445), \
}, { \
   S(615, 661), S(603, 695), S(613, 700), S(640, 696), S(683, 678), S(711, 698), S(753, 693), S(677, 735), \
   S(622, 670), S(602, 677), S(614, 717), S(613, 723), S(569, 795), S(643, 755), S(637, 765), S(672, 751), \
   S(630, 659), S(652, 646), S(642, 683), S(648, 708), S(668, 708), S(693, 749), S(676, 727), S(664, 760), \
   S(618, 683), S(636, 678), S(632, 692), S(633, 696), S(618, 750), S(623, 779), S(625, 788), S(639, 739), \
   S(662, 642), S(628, 686), S(658, 673), S(650, 693), S(644, 697), S(640, 714), S(644, 736), S(648, 736), \
   S(653, 641), S(680, 616), S(661, 669), S(672, 647), S(673, 651), S(666, 679), S(668, 692), S(654, 695), \
   S(655, 624), S(677, 620), S(694, 608), S(697, 613), S(699, 604), S(694, 616), S(690, 620), S(659, 672), \
   S(665, 624), S(656, 625), S(678, 610), S(700, 581), S(683, 598), S(647, 642), S(633, 667), S(655, 608), \
}, }

#define PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(31, 337), S(44, 279), S(25, 293), S(31, 308), S(52, 352), S(4, 367), S(-26, 377), S(32, 373), \
   S(131, 140), S(229, 92), S(210, 130), S(283, 137), S(139, 179), S(142, 132), S(96, 174), S(118, 152), \
   S(66, 135), S(107, 110), S(132, 110), S(148, 106), S(139, 119), S(133, 120), S(120, 133), S(128, 130), \
   S(51, 127), S(67, 116), S(119, 108), S(141, 107), S(131, 114), S(137, 109), S(103, 119), S(118, 116), \
   S(43, 121), S(66, 113), S(102, 115), S(104, 119), S(130, 116), S(130, 110), S(132, 102), S(128, 104), \
   S(48, 130), S(76, 115), S(111, 115), S(124, 111), S(128, 118), S(163, 107), S(148, 102), S(117, 108), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(84, 366), S(88, 347), S(36, 359), S(81, 317), S(97, 299), S(35, 286), S(40, 306), S(-11, 343), \
   S(86, 177), S(119, 150), S(139, 144), S(150, 141), S(210, 154), S(208, 126), S(192, 153), S(136, 150), \
   S(86, 155), S(114, 132), S(114, 129), S(141, 102), S(143, 112), S(138, 109), S(110, 123), S(106, 121), \
   S(71, 141), S(99, 123), S(117, 114), S(141, 108), S(135, 113), S(141, 102), S(101, 112), S(99, 111), \
   S(80, 125), S(102, 110), S(113, 114), S(118, 117), S(126, 127), S(131, 110), S(134, 101), S(114, 104), \
   S(76, 132), S(116, 108), S(95, 132), S(119, 128), S(111, 140), S(160, 115), S(152, 103), S(113, 100), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define KING_PST { { \
   S(25, -98), S(78, -27), S(54, -76), S(190, -79), S(224, -29), S(316, -11), S(311, -41), S(221, -54), \
   S(49, -38), S(198, 22), S(134, 13), S(3, 17), S(248, 39), S(318, 31), S(348, 14), S(383, -46), \
   S(75, -12), S(107, 13), S(258, 26), S(-22, 38), S(285, 44), S(378, 33), S(372, 13), S(312, -1), \
   S(-61, -21), S(53, 17), S(35, 30), S(-90, 61), S(241, 59), S(217, 61), S(307, 42), S(279, 10), \
   S(-85, -12), S(-56, 13), S(-67, 43), S(-141, 64), S(186, 72), S(276, 44), S(294, 16), S(219, -2), \
   S(-119, -21), S(-16, -2), S(-95, 36), S(-125, 50), S(239, 50), S(227, 36), S(293, 4), S(302, -23), \
   S(16, -45), S(8, -15), S(-30, 5), S(-118, 27), S(240, 33), S(271, 10), S(314, -16), S(310, -39), \
   S(6, -94), S(53, -72), S(-18, -36), S(-122, -4), S(277, -20), S(236, -14), S(338, -61), S(312, -87), \
}, { \
   S(-103, -153), S(-180, -62), S(-162, -53), S(-244, -31), S(-51, -17), S(16, -16), S(286, -82), S(68, -57), \
   S(-110, -60), S(-200, 4), S(-181, 1), S(-313, 27), S(47, 19), S(63, 21), S(102, 23), S(-86, 24), \
   S(-246, -4), S(-186, 14), S(-242, 23), S(-282, 44), S(48, 41), S(245, 33), S(163, 47), S(6, 12), \
   S(-277, -2), S(-299, 34), S(-303, 40), S(-349, 62), S(-31, 56), S(25, 46), S(-78, 48), S(-210, 24), \
   S(-355, -6), S(-241, -2), S(-325, 39), S(-406, 62), S(-79, 70), S(-87, 55), S(-76, 28), S(-147, 4), \
   S(-308, -25), S(-300, 0), S(-346, 28), S(-413, 53), S(-86, 62), S(-58, 42), S(-23, 13), S(-53, -13), \
   S(-214, -73), S(-270, -23), S(-348, 15), S(-382, 28), S(-88, 46), S(-47, 28), S(18, -3), S(21, -34), \
   S(-250, -109), S(-204, -91), S(-239, -55), S(-386, -4), S(-17, -15), S(-62, -3), S(42, -48), S(26, -89), \
}, }

#define SAFETY_TABLE { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(-86, -5), S(13, -14), S(-1, -10), S(7, -5), S(1, -5), S(11, -8), \
   S(5, 0), S(11, -6), S(13, 0), S(10, -2), S(15, -2), S(13, 1), S(19, 1), S(16, 0), S(13, 4), S(20, -3), \
   S(15, 8), S(18, 8), S(20, 12), S(23, 5), S(33, 13), S(29, 20), S(34, 18), S(60, 4), S(32, 19), S(49, 20), \
   S(45, 10), S(44, 28), S(46, 13), S(67, 15), S(67, 22), S(80, 20), S(71, 40), S(87, 15), S(101, 38), S(89, 43), \
   S(93, 25), S(98, 60), S(124, -4), S(123, 50), S(176, -33), S(164, -2), S(220, -47), S(117, 89), S(167, -1), S(248, -25), \
   S(225, 44), S(203, 1), S(197, 51), S(236, -53), S(391, -202), S(286, -58), S(316, -4), S(362, -130), S(294, -9), S(339, 1), \
   S(242, 137), S(477, -98), S(265, -33), S(467, -121), S(463, -1), S(308, 13), S(263, 200), S(318, 199), S(315, 144), S(416, 154), \
   S(219, 202), S(165, 0), S(357, 145), S(230, -48), S(363, 74), S(292, 233), S(272, 135), S(305, 203), S(305, 203), S(331, 145), \
}

#endif