#ifndef __EVAL_CONSTANTS_H__
#define __EVAL_CONSTANTS_H__

#include <stdint.h>

#include "board_constants.h"
#include "board_info.h"

typedef uint8_t Phase_t;
typedef uint8_t Bucket_t;
enum {
  mg_phase,
  eg_phase,
  NUM_PHASES,
  PHASE_MAX = 24,

  KNIGHT_PHASE_VALUE = 1,
  BISHOP_PHASE_VALUE = 1,
  ROOK_PHASE_VALUE = 2,
  QUEEN_PHASE_VALUE = 4,
  PAWN_PHASE_VALUE = 0,
  KING_PHASE_VALUE = 0,

  QS_PST_MASK = C64(0x0F0F0F0F0F0F0F0F),
  KS_PST_MASK = C64(0xF0F0F0F0F0F0F0F0),
  NUM_PST_BUCKETS = 2,
};

// used for eval calcuations. Contains both EG and MG score packed into 1 value.
typedef int32_t Score_t;
#define S(mg, eg) \
	((Score_t)((uint32_t)eg << 16) + mg)

/*

 ██████╗ ██████╗ ███╗   ██╗███████╗████████╗ █████╗ ███╗   ██╗████████╗███████╗
██╔════╝██╔═══██╗████╗  ██║██╔════╝╚══██╔══╝██╔══██╗████╗  ██║╚══██╔══╝██╔════╝
██║     ██║   ██║██╔██╗ ██║███████╗   ██║   ███████║██╔██╗ ██║   ██║   ███████╗
██║     ██║   ██║██║╚██╗██║╚════██║   ██║   ██╔══██║██║╚██╗██║   ██║   ╚════██║
╚██████╗╚██████╔╝██║ ╚████║███████║   ██║   ██║  ██║██║ ╚████║   ██║   ███████║
 ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝

*/                                                                        

#define BISHOP_PAIR_BONUS \
   S(28, 72)

#define PASSED_PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(75, 210), S(14, 191), S(48, 191), S(140, 187), S(41, 261), S(50, 230), S(23, 271), S(59, 268), \
   S(57, 163), S(-53, 190), S(-25, 140), S(-35, 96), S(58, 135), S(-86, 235), S(-70, 272), S(-65, 288), \
   S(-1, 88), S(-13, 72), S(85, 39), S(-1, 49), S(2, 68), S(-57, 112), S(-116, 161), S(-112, 185), \
   S(-9, 53), S(-37, 48), S(29, 26), S(-8, 24), S(-75, 55), S(-70, 63), S(-45, 87), S(-56, 89), \
   S(82, 8), S(-23, 31), S(-17, 14), S(0, 17), S(-53, 23), S(-12, 8), S(-31, 35), S(-29, 43), \
   S(11, 9), S(87, 21), S(97, -2), S(-16, 8), S(-15, 15), S(-45, 21), S(-40, 24), S(-39, 30), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(105, 257), S(91, 254), S(78, 247), S(118, 203), S(75, 209), S(121, 167), S(1, 214), S(-6, 241), \
   S(53, 228), S(17, 239), S(31, 201), S(33, 155), S(5, 128), S(59, 109), S(-46, 124), S(-42, 152), \
   S(27, 129), S(-4, 127), S(9, 99), S(10, 85), S(11, 58), S(62, 42), S(-7, 85), S(16, 73), \
   S(4, 72), S(-23, 74), S(-37, 59), S(-18, 46), S(-27, 43), S(-3, 36), S(9, 53), S(31, 46), \
   S(1, 21), S(-13, 38), S(-29, 30), S(-29, 26), S(7, 6), S(35, 7), S(44, 31), S(59, 9), \
   S(-6, 20), S(6, 26), S(7, 13), S(-25, 27), S(6, 7), S(17, 8), S(69, 23), S(11, 26), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define BLOCKED_PASSERS { \
   S(57, -200), S(6, -117), S(-9, -43), S(1, -23), S(-20, 7), S(1, -14), S(0, 0), S(0, 0), \
}

#define ROOK_OPEN_FILE { \
   S(31, 1), S(36, 0), S(36, 1), S(40, 1), S(42, 6), S(47, -7), S(107, -21), S(102, -12), \
}

#define ROOK_SEMI_OPEN_FILE { \
   S(-12, 43), S(4, 13), S(13, 7), S(24, -3), S(19, -7), S(13, -8), S(40, -12), S(21, 21), \
}

#define QUEEN_OPEN_FILE { \
   S(-15, 14), S(-9, 29), S(-20, 24), S(-23, 38), S(-13, 40), S(-3, 15), S(25, 13), S(40, -16), \
}

#define QUEEN_SEMI_OPEN_FILE { \
   S(-7, 1), S(5, 1), S(4, 0), S(-4, 30), S(-1, 29), S(16, -38), S(49, -48), S(29, -17), \
}

#define KING_OPEN_FILE { \
   S(-86, -14), S(-131, 8), S(-103, 4), S(-45, -11), S(-71, -3), S(-101, 10), S(-108, 19), S(-76, 10), \
}

#define KING_SEMI_OPEN_FILE { \
   S(-41, 36), S(-62, 16), S(-19, -7), S(8, -15), S(-18, -1), S(-27, 0), S(-41, 18), S(-46, 35), \
}

#define ISOLATED_PAWNS { \
   S(-15, -17), S(-18, -16), S(-18, -21), S(-32, -16), S(-31, -22), S(-10, -19), S(-16, -16), S(-28, -18), \
}

#define KNIGHT_MOBILITY { \
   S(239, 175), S(259, 241), S(270, 263), S(276, 274), S(290, 279), S(297, 291), S(308, 288), S(312, 289), S(334, 267), \
}

#define BISHOP_MOBILITY { \
   S(231, 193), S(246, 214), S(261, 232), S(270, 251), S(278, 264), S(282, 275), S(287, 282), S(291, 283), S(288, 291), S(297, 287), S(311, 282), S(339, 278), S(268, 317), S(344, 269), \
}

#define ROOK_MOBILITY { \
   S(290, 349), S(304, 377), S(309, 394), S(314, 407), S(313, 419), S(320, 425), S(323, 432), S(330, 434), S(340, 439), S(346, 443), S(347, 449), S(356, 453), S(352, 461), S(365, 455), S(364, 454), \
}

#define QUEEN_MOBILITY { \
   S(715, 615), S(708, 624), S(707, 617), S(706, 647), S(710, 687), S(713, 706), S(715, 712), S(714, 751), S(716, 762), S(720, 770), S(725, 782), S(727, 795), S(722, 805), S(733, 808), S(734, 820), S(732, 832), S(730, 842), S(747, 828), S(763, 828), S(771, 825), S(763, 842), S(817, 810), S(794, 822), S(889, 773), S(926, 742), S(935, 746), S(736, 892), S(670, 878), \
}

#define KING_RING_THREATS { \
   S(14, -10), S(23, -3), S(25, -7), S(14, 7), S(33, -14), \
}

#define CHECK_BONUS { \
   S(14, -10), S(23, -3), S(25, -7), S(14, 7), S(33, -14), \
}

#define PAWN_THREAT_ON_KNIGHT S(61, 8)
#define PAWN_THREAT_ON_BISHOP S(60, 42)
#define PAWN_THREAT_ON_ROOK S(118, -39)
#define PAWN_THREAT_ON_QUEEN S(63, -13)

#define KNIGHT_THREAT_ON_BISHOP S(27, 24)
#define KNIGHT_THREAT_ON_ROOK S(65, -12)
#define KNIGHT_THREAT_ON_QUEEN S(27, -34)

#define BISHOP_THREAT_ON_KNIGHT S(25, 29)
#define BISHOP_THREAT_ON_ROOK S(45, 5)
#define BISHOP_THREAT_ON_QUEEN S(46, 35)

#define ROOK_THREAT_ON_QUEEN S(61, -22)

/*
Average PST values for MG, EG:
Knight Values: 148 130
Bishop Values: 163 161
Rook Values: 223 347
Queen Values: 529 607
Pawn Values: 99 144
*/

#define KNIGHT_PST { { \
   S(-81, 22), S(63, 34), S(32, 130), S(150, 73), S(192, 86), S(165, 65), S(115, 50), S(82, 51), \
   S(126, 75), S(203, 76), S(212, 88), S(180, 95), S(115, 114), S(160, 108), S(130, 102), S(32, 110), \
   S(70, 111), S(208, 94), S(188, 129), S(216, 130), S(157, 138), S(152, 117), S(100, 122), S(135, 82), \
   S(164, 101), S(166, 122), S(166, 156), S(186, 159), S(203, 137), S(189, 131), S(166, 114), S(91, 103), \
   S(154, 115), S(187, 106), S(169, 150), S(179, 145), S(162, 145), S(151, 134), S(151, 116), S(117, 119), \
   S(135, 89), S(148, 116), S(147, 120), S(156, 148), S(191, 125), S(154, 109), S(155, 86), S(115, 94), \
   S(84, 94), S(179, 107), S(116, 115), S(134, 124), S(135, 115), S(143, 97), S(102, 94), S(72, 110), \
   S(27, 91), S(120, 94), S(95, 122), S(113, 116), S(111, 98), S(134, 86), S(113, 90), S(92, 108), \
}, { \
   S(-12, 121), S(30, 137), S(65, 167), S(122, 140), S(176, 148), S(5, 164), S(62, 114), S(32, 9), \
   S(48, 157), S(94, 180), S(196, 136), S(162, 176), S(190, 159), S(209, 138), S(184, 131), S(163, 107), \
   S(108, 140), S(187, 148), S(188, 184), S(209, 182), S(223, 178), S(312, 168), S(209, 147), S(192, 136), \
   S(164, 156), S(178, 173), S(174, 199), S(228, 197), S(182, 214), S(229, 202), S(171, 197), S(204, 160), \
   S(154, 160), S(164, 157), S(181, 188), S(194, 195), S(202, 196), S(192, 197), S(218, 170), S(174, 161), \
   S(146, 141), S(154, 159), S(178, 156), S(179, 173), S(199, 183), S(187, 154), S(191, 148), S(160, 162), \
   S(135, 122), S(139, 141), S(157, 144), S(185, 145), S(184, 159), S(184, 143), S(187, 131), S(172, 132), \
   S(55, 143), S(156, 120), S(150, 130), S(154, 149), S(176, 146), S(174, 142), S(161, 135), S(165, 90), \
}, }

#define BISHOP_PST { { \
   S(155, 139), S(129, 126), S(21, 147), S(-72, 140), S(-48, 164), S(0, 140), S(52, 159), S(115, 141), \
   S(156, 115), S(164, 121), S(155, 122), S(143, 88), S(200, 127), S(114, 156), S(84, 159), S(28, 165), \
   S(210, 112), S(256, 106), S(183, 155), S(208, 132), S(166, 142), S(194, 118), S(134, 156), S(167, 144), \
   S(158, 118), S(146, 144), S(165, 149), S(219, 146), S(155, 161), S(174, 145), S(195, 128), S(109, 156), \
   S(144, 126), S(142, 140), S(135, 149), S(175, 147), S(201, 137), S(178, 134), S(133, 140), S(132, 152), \
   S(144, 138), S(148, 136), S(164, 143), S(162, 148), S(190, 144), S(197, 133), S(185, 153), S(157, 146), \
   S(167, 113), S(156, 138), S(193, 121), S(164, 138), S(174, 131), S(209, 113), S(216, 108), S(126, 156), \
   S(69, 143), S(74, 174), S(161, 147), S(162, 148), S(193, 129), S(169, 132), S(177, 129), S(157, 125), \
}, { \
   S(155, 186), S(134, 178), S(62, 197), S(38, 204), S(109, 182), S(53, 197), S(197, 169), S(172, 156), \
   S(140, 195), S(156, 196), S(132, 188), S(107, 201), S(162, 182), S(205, 169), S(153, 184), S(121, 171), \
   S(163, 190), S(196, 186), S(201, 181), S(182, 182), S(204, 182), S(224, 198), S(211, 186), S(195, 184), \
   S(159, 188), S(182, 190), S(176, 205), S(215, 206), S(193, 207), S(201, 199), S(179, 185), S(166, 194), \
   S(168, 185), S(176, 193), S(190, 198), S(210, 207), S(210, 195), S(189, 193), S(186, 188), S(182, 173), \
   S(182, 177), S(200, 188), S(199, 196), S(201, 192), S(208, 201), S(214, 188), S(201, 178), S(195, 177), \
   S(193, 173), S(209, 158), S(208, 171), S(200, 181), S(207, 182), S(222, 173), S(232, 167), S(206, 160), \
   S(179, 165), S(215, 171), S(194, 186), S(182, 182), S(203, 179), S(186, 193), S(204, 177), S(199, 161), \
}, }

#define ROOK_PST { { \
   S(229, 315), S(147, 323), S(233, 305), S(148, 338), S(139, 343), S(152, 345), S(183, 328), S(107, 340), \
   S(268, 291), S(305, 288), S(241, 294), S(204, 311), S(210, 302), S(155, 334), S(115, 335), S(107, 335), \
   S(244, 297), S(258, 299), S(256, 286), S(264, 291), S(189, 311), S(164, 325), S(229, 300), S(96, 317), \
   S(194, 302), S(201, 308), S(199, 317), S(191, 317), S(203, 307), S(231, 316), S(119, 328), S(129, 319), \
   S(134, 308), S(140, 323), S(136, 326), S(174, 319), S(200, 303), S(172, 325), S(165, 303), S(156, 294), \
   S(161, 293), S(149, 306), S(190, 287), S(201, 273), S(141, 311), S(178, 308), S(139, 307), S(139, 288), \
   S(165, 287), S(159, 302), S(201, 280), S(180, 292), S(187, 296), S(189, 307), S(119, 309), S(138, 294), \
   S(189, 283), S(204, 287), S(189, 294), S(191, 295), S(201, 285), S(191, 303), S(137, 312), S(160, 294), \
}, { \
   S(264, 400), S(292, 394), S(228, 424), S(284, 398), S(271, 400), S(244, 418), S(276, 402), S(279, 395), \
   S(248, 405), S(244, 414), S(276, 408), S(298, 399), S(294, 387), S(338, 388), S(198, 434), S(240, 402), \
   S(241, 397), S(273, 400), S(264, 403), S(278, 399), S(294, 378), S(346, 372), S(324, 395), S(277, 381), \
   S(235, 397), S(278, 384), S(268, 402), S(273, 389), S(272, 380), S(278, 392), S(264, 386), S(253, 383), \
   S(237, 389), S(243, 393), S(253, 399), S(260, 390), S(284, 368), S(254, 386), S(267, 388), S(242, 377), \
   S(244, 376), S(253, 385), S(257, 380), S(247, 386), S(262, 379), S(285, 371), S(283, 373), S(255, 357), \
   S(234, 377), S(256, 373), S(255, 380), S(264, 384), S(274, 367), S(286, 369), S(282, 363), S(207, 374), \
   S(264, 377), S(265, 376), S(267, 381), S(278, 373), S(282, 368), S(286, 374), S(244, 379), S(269, 341), \
}, }

#define QUEEN_PST { { \
   S(466, 574), S(512, 526), S(673, 453), S(495, 503), S(632, 447), S(508, 521), S(486, 476), S(419, 554), \
   S(618, 451), S(517, 504), S(647, 435), S(486, 545), S(416, 552), S(420, 544), S(419, 519), S(424, 517), \
   S(577, 466), S(540, 518), S(625, 501), S(522, 528), S(480, 553), S(472, 530), S(425, 529), S(419, 537), \
   S(501, 541), S(491, 522), S(406, 567), S(475, 553), S(446, 514), S(466, 532), S(390, 559), S(461, 550), \
   S(498, 528), S(452, 572), S(447, 589), S(452, 564), S(433, 521), S(436, 596), S(421, 551), S(410, 559), \
   S(526, 472), S(476, 474), S(474, 529), S(479, 470), S(460, 517), S(502, 481), S(447, 535), S(431, 533), \
   S(444, 513), S(460, 454), S(499, 459), S(483, 488), S(498, 492), S(524, 479), S(426, 522), S(441, 458), \
   S(419, 508), S(442, 448), S(448, 492), S(492, 431), S(502, 453), S(460, 462), S(386, 525), S(393, 540), \
}, { \
   S(538, 680), S(544, 698), S(526, 741), S(590, 696), S(667, 636), S(588, 733), S(675, 673), S(619, 738), \
   S(533, 688), S(513, 700), S(543, 741), S(533, 763), S(476, 818), S(650, 701), S(585, 778), S(648, 726), \
   S(576, 666), S(569, 664), S(572, 688), S(553, 748), S(622, 707), S(643, 754), S(649, 710), S(603, 760), \
   S(542, 715), S(562, 698), S(560, 706), S(547, 738), S(566, 750), S(580, 767), S(572, 801), S(579, 751), \
   S(577, 667), S(547, 705), S(566, 708), S(564, 731), S(574, 716), S(565, 748), S(587, 742), S(581, 757), \
   S(564, 689), S(587, 654), S(579, 695), S(586, 675), S(587, 698), S(592, 710), S(596, 709), S(583, 731), \
   S(573, 650), S(583, 652), S(599, 647), S(610, 637), S(612, 644), S(606, 666), S(594, 630), S(595, 669), \
   S(589, 649), S(573, 647), S(588, 655), S(609, 625), S(591, 645), S(564, 677), S(562, 652), S(567, 618), \
}, }

#define PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(75, 210), S(14, 191), S(48, 191), S(140, 187), S(41, 261), S(50, 230), S(23, 271), S(59, 268), \
   S(68, 155), S(172, 113), S(200, 123), S(188, 148), S(43, 178), S(167, 127), S(95, 169), S(109, 164), \
   S(54, 136), S(60, 129), S(106, 124), S(113, 126), S(108, 134), S(111, 128), S(148, 123), S(150, 130), \
   S(34, 130), S(44, 133), S(95, 120), S(119, 117), S(119, 116), S(113, 116), S(115, 115), S(116, 120), \
   S(24, 126), S(48, 124), S(84, 121), S(72, 130), S(108, 119), S(117, 118), S(131, 98), S(135, 103), \
   S(30, 134), S(54, 128), S(93, 122), S(94, 123), S(104, 125), S(143, 113), S(142, 102), S(123, 109), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(105, 257), S(91, 254), S(78, 247), S(118, 203), S(75, 209), S(121, 167), S(1, 214), S(-6, 241), \
   S(81, 182), S(87, 168), S(97, 163), S(122, 144), S(153, 142), S(163, 138), S(160, 156), S(139, 159), \
   S(76, 158), S(98, 136), S(103, 132), S(120, 103), S(121, 124), S(124, 118), S(96, 127), S(97, 131), \
   S(67, 143), S(88, 127), S(101, 123), S(128, 111), S(122, 118), S(119, 111), S(92, 114), S(91, 117), \
   S(71, 131), S(91, 116), S(100, 117), S(108, 124), S(113, 135), S(115, 118), S(120, 104), S(104, 109), \
   S(71, 136), S(100, 113), S(87, 134), S(109, 127), S(105, 149), S(145, 120), S(138, 104), S(103, 104), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define KING_PST { { \
   S(-63, -87), S(20, -16), S(48, -62), S(-147, -2), S(45, 28), S(0, 59), S(255, 2), S(246, -34), \
   S(138, -73), S(132, 16), S(189, 4), S(144, 5), S(224, 37), S(227, 53), S(266, 29), S(287, -13), \
   S(-28, 19), S(27, 23), S(78, 43), S(35, 44), S(252, 58), S(317, 51), S(383, 28), S(224, 13), \
   S(-84, -8), S(2, 30), S(13, 35), S(-113, 60), S(238, 56), S(221, 53), S(357, 25), S(254, 13), \
   S(-162, 4), S(-25, -1), S(-4, 29), S(-123, 56), S(170, 57), S(235, 38), S(257, 11), S(155, 0), \
   S(-35, -30), S(3, -6), S(-59, 23), S(-29, 30), S(196, 45), S(230, 22), S(255, 0), S(255, -14), \
   S(20, -39), S(45, -28), S(12, -3), S(-67, 22), S(236, 28), S(227, 9), S(275, -17), S(287, -44), \
   S(44, -91), S(67, -59), S(14, -38), S(-70, -1), S(249, -15), S(217, -12), S(293, -53), S(274, -91), \
}, { \
   S(-133, -134), S(13, -105), S(0, -58), S(-252, -2), S(-29, 5), S(43, -7), S(142, -22), S(-21, -34), \
   S(-204, 0), S(-132, 7), S(-255, 26), S(-225, 34), S(60, 35), S(58, 39), S(184, 0), S(-158, 45), \
   S(-271, 15), S(-141, 16), S(-129, 16), S(-271, 45), S(88, 36), S(295, 29), S(247, 30), S(37, 3), \
   S(-203, -1), S(-191, 21), S(-238, 38), S(-290, 57), S(-79, 64), S(-10, 48), S(-16, 30), S(-161, 18), \
   S(-390, 14), S(-210, -2), S(-260, 29), S(-381, 63), S(-133, 81), S(-66, 47), S(-63, 21), S(-131, 8), \
   S(-271, -21), S(-270, 1), S(-294, 21), S(-381, 52), S(-58, 55), S(-56, 40), S(-12, 14), S(-55, -8), \
   S(-176, -70), S(-221, -24), S(-281, 10), S(-334, 30), S(-64, 41), S(-33, 29), S(18, 0), S(17, -29), \
   S(-217, -118), S(-179, -86), S(-204, -51), S(-354, 6), S(-11, -14), S(-52, 4), S(36, -40), S(26, -81), \
}, }

#endif