#ifndef __EVAL_CONSTANTS_H__
#define __EVAL_CONSTANTS_H__

#include <stdint.h>

#include "board_constants.h"
#include "board_info.h"

typedef uint8_t Phase_t;
typedef uint8_t Bucket_t;
enum {
  mg_phase,
  eg_phase,
  NUM_PHASES,
  PHASE_MAX = 24,

  KNIGHT_PHASE_VALUE = 1,
  BISHOP_PHASE_VALUE = 1,
  ROOK_PHASE_VALUE = 2,
  QUEEN_PHASE_VALUE = 4,
  PAWN_PHASE_VALUE = 0,
  KING_PHASE_VALUE = 0,

  QS_PST_MASK = C64(0x0F0F0F0F0F0F0F0F),
  KS_PST_MASK = C64(0xF0F0F0F0F0F0F0F0),
  NUM_PST_BUCKETS = 2,
};

// used for eval calcuations. Contains both EG and MG score packed into 1 value.
typedef int32_t Score_t;
#define S(mg, eg) \
	((Score_t)((uint32_t)eg << 16) + mg)

/*

 ██████╗ ██████╗ ███╗   ██╗███████╗████████╗ █████╗ ███╗   ██╗████████╗███████╗
██╔════╝██╔═══██╗████╗  ██║██╔════╝╚══██╔══╝██╔══██╗████╗  ██║╚══██╔══╝██╔════╝
██║     ██║   ██║██╔██╗ ██║███████╗   ██║   ███████║██╔██╗ ██║   ██║   ███████╗
██║     ██║   ██║██║╚██╗██║╚════██║   ██║   ██╔══██║██║╚██╗██║   ██║   ╚════██║
╚██████╗╚██████╔╝██║ ╚████║███████║   ██║   ██║  ██║██║ ╚████║   ██║   ███████║
 ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝

*/                                                                        

#define BISHOP_PAIR_BONUS \
   S(37, 68)

#define PASSED_PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(23, 339), S(43, 279), S(18, 294), S(20, 310), S(47, 353), S(3, 367), S(-31, 379), S(31, 373), \
   S(-26, 187), S(-38, 181), S(-3, 121), S(-102, 113), S(2, 123), S(-18, 221), S(-71, 264), S(-78, 308), \
   S(-11, 85), S(13, 70), S(41, 51), S(34, 41), S(-19, 79), S(-61, 112), S(-72, 151), S(-120, 189), \
   S(11, 48), S(0, 44), S(1, 26), S(5, 16), S(-53, 42), S(-69, 57), S(-27, 80), S(-69, 96), \
   S(60, 8), S(9, 23), S(48, 3), S(-1, -1), S(-46, 16), S(-32, 22), S(-59, 43), S(-14, 32), \
   S(16, 2), S(81, 16), S(91, 6), S(-13, -6), S(-33, 8), S(-30, 10), S(-43, 31), S(-34, 28), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(79, 368), S(83, 348), S(28, 361), S(74, 319), S(92, 300), S(36, 286), S(39, 307), S(-12, 343), \
   S(43, 247), S(7, 265), S(2, 210), S(30, 153), S(4, 97), S(55, 111), S(-10, 111), S(-17, 163), \
   S(14, 135), S(4, 130), S(12, 96), S(6, 82), S(16, 57), S(62, 43), S(18, 69), S(25, 69), \
   S(9, 72), S(-22, 74), S(-33, 61), S(-10, 38), S(-11, 36), S(-18, 40), S(11, 52), S(42, 38), \
   S(1, 26), S(-12, 35), S(-36, 31), S(-30, 21), S(3, 6), S(7, 12), S(31, 32), S(53, 8), \
   S(-1, 21), S(0, 27), S(0, 9), S(-28, 17), S(25, 5), S(27, 4), S(61, 26), S(22, 19), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define BLOCKED_PASSERS { \
   S(131, -428), S(21, -133), S(-3, -50), S(-5, -18), S(-3, 1), S(-19, 0), S(0, 0), S(0, 0), \
}

#define ROOK_OPEN_FILE { \
   S(43, -3), S(56, -9), S(49, -8), S(53, -6), S(59, -6), S(83, -20), S(130, -28), S(128, -23), \
}

#define ROOK_SEMI_OPEN_FILE { \
   S(-10, 52), S(13, 22), S(17, 10), S(27, 1), S(27, -8), S(29, -11), S(55, -13), S(26, 30), \
}

#define QUEEN_OPEN_FILE { \
   S(-6, 5), S(-8, 20), S(-23, 22), S(-21, 32), S(-4, 30), S(28, -12), S(55, -43), S(97, -66), \
}

#define QUEEN_SEMI_OPEN_FILE { \
   S(0, 4), S(13, 3), S(1, 9), S(-9, 49), S(10, 18), S(31, -42), S(50, -74), S(52, -49), \
}

#define KING_OPEN_FILE { \
   S(-84, -14), S(-123, 0), S(-95, -2), S(-49, -10), S(-68, -3), S(-91, 8), S(-111, 16), S(-56, 2), \
}

#define KING_SEMI_OPEN_FILE { \
   S(-35, 38), S(-62, 19), S(-26, -2), S(-20, -5), S(-23, -1), S(-32, 2), S(-44, 19), S(-45, 35), \
}

#define ISOLATED_PAWNS { \
   S(-18, -20), S(-23, -15), S(-22, -17), S(-37, -11), S(-33, -20), S(-10, -17), S(-16, -18), S(-33, -14), \
}

#define KNIGHT_MOBILITY { \
   S(281, 138), S(304, 199), S(317, 228), S(321, 245), S(334, 248), S(341, 260), S(349, 259), S(357, 256), S(382, 239), \
}

#define BISHOP_MOBILITY { \
   S(267, 157), S(284, 190), S(301, 200), S(312, 216), S(321, 233), S(325, 246), S(330, 252), S(334, 254), S(334, 263), S(343, 258), S(357, 258), S(386, 249), S(355, 284), S(425, 240), \
}

#define ROOK_MOBILITY { \
   S(342, 313), S(356, 342), S(361, 353), S(366, 368), S(367, 380), S(374, 388), S(376, 395), S(383, 399), S(394, 404), S(400, 410), S(402, 415), S(411, 420), S(413, 427), S(425, 421), S(431, 417), \
}

#define QUEEN_MOBILITY { \
   S(790, 486), S(787, 585), S(785, 543), S(787, 567), S(792, 569), S(793, 598), S(794, 628), S(796, 663), S(800, 676), S(804, 691), S(805, 702), S(810, 715), S(811, 724), S(813, 738), S(822, 746), S(822, 758), S(822, 766), S(825, 772), S(853, 761), S(862, 765), S(891, 761), S(911, 762), S(959, 732), S(958, 744), S(974, 728), S(1096, 672), S(813, 858), S(786, 835), \
}

/*
Average PST values for MG, EG:
Knight Values: 164 118
Bishop Values: 183 155
Rook Values: 244 328
Queen Values: 595 579
Pawn Values: 109 158
*/

#define KNIGHT_PST { { \
   S(-68, 9), S(181, 5), S(-3, 66), S(168, 56), S(249, 44), S(150, 56), S(107, 59), S(69, 21), \
   S(142, 47), S(236, 54), S(167, 76), S(253, 67), S(196, 90), S(266, 58), S(140, 85), S(27, 101), \
   S(176, 57), S(241, 60), S(221, 91), S(220, 99), S(221, 96), S(211, 88), S(184, 95), S(73, 87), \
   S(176, 96), S(178, 94), S(220, 120), S(211, 114), S(225, 120), S(216, 105), S(186, 94), S(114, 103), \
   S(168, 81), S(217, 87), S(184, 128), S(198, 117), S(167, 131), S(185, 113), S(144, 99), S(102, 122), \
   S(138, 72), S(153, 103), S(153, 109), S(168, 122), S(197, 106), S(171, 95), S(148, 98), S(105, 111), \
   S(68, 76), S(144, 99), S(133, 102), S(152, 115), S(148, 107), S(137, 104), S(107, 104), S(88, 98), \
   S(104, 47), S(123, 83), S(82, 114), S(145, 94), S(105, 98), S(132, 78), S(133, 53), S(29, 99), \
}, { \
   S(-41, 139), S(-41, 176), S(79, 146), S(100, 144), S(191, 128), S(45, 148), S(125, 82), S(50, 40), \
   S(83, 143), S(107, 173), S(206, 140), S(225, 146), S(199, 156), S(244, 113), S(169, 124), S(156, 117), \
   S(104, 154), S(187, 142), S(196, 179), S(240, 166), S(288, 147), S(366, 121), S(259, 132), S(208, 115), \
   S(166, 151), S(192, 164), S(194, 184), S(247, 184), S(216, 189), S(262, 181), S(192, 181), S(234, 145), \
   S(164, 153), S(172, 169), S(191, 184), S(200, 188), S(208, 192), S(208, 184), S(221, 161), S(185, 154), \
   S(154, 143), S(169, 151), S(190, 152), S(190, 174), S(215, 175), S(203, 151), S(207, 149), S(165, 155), \
   S(149, 110), S(164, 123), S(171, 148), S(203, 140), S(206, 146), S(197, 138), S(200, 139), S(177, 133), \
   S(60, 144), S(169, 122), S(150, 133), S(164, 150), S(188, 150), S(175, 146), S(171, 138), S(146, 116), \
}, }

#define BISHOP_PST { { \
   S(54, 140), S(160, 121), S(121, 108), S(90, 105), S(-16, 145), S(36, 135), S(90, 125), S(126, 126), \
   S(191, 94), S(183, 113), S(150, 118), S(156, 114), S(222, 115), S(118, 136), S(125, 148), S(21, 155), \
   S(212, 115), S(336, 82), S(193, 127), S(228, 119), S(203, 133), S(223, 119), S(120, 147), S(115, 140), \
   S(193, 117), S(177, 129), S(223, 130), S(234, 121), S(210, 148), S(193, 136), S(208, 123), S(128, 134), \
   S(165, 121), S(157, 132), S(149, 145), S(199, 140), S(211, 131), S(227, 122), S(174, 123), S(142, 130), \
   S(150, 125), S(168, 131), S(172, 141), S(173, 137), S(214, 133), S(207, 126), S(229, 129), S(180, 139), \
   S(187, 108), S(174, 135), S(169, 117), S(184, 124), S(187, 123), S(222, 121), S(223, 114), S(165, 121), \
   S(60, 141), S(126, 144), S(177, 128), S(141, 143), S(182, 124), S(166, 128), S(163, 128), S(115, 141), \
}, { \
   S(179, 176), S(127, 184), S(96, 191), S(88, 188), S(112, 185), S(131, 179), S(147, 179), S(184, 156), \
   S(134, 201), S(187, 186), S(183, 181), S(158, 179), S(195, 179), S(217, 164), S(201, 176), S(140, 167), \
   S(149, 195), S(192, 194), S(206, 192), S(211, 185), S(242, 178), S(272, 190), S(236, 181), S(202, 181), \
   S(173, 190), S(204, 189), S(203, 201), S(261, 192), S(235, 203), S(223, 200), S(210, 186), S(187, 186), \
   S(196, 176), S(202, 188), S(213, 200), S(236, 204), S(234, 194), S(209, 193), S(213, 177), S(213, 169), \
   S(212, 175), S(226, 187), S(221, 194), S(223, 193), S(220, 201), S(235, 186), S(218, 182), S(211, 177), \
   S(231, 161), S(235, 155), S(227, 168), S(215, 178), S(226, 178), S(239, 177), S(256, 165), S(222, 156), \
   S(197, 163), S(226, 171), S(211, 180), S(195, 184), S(211, 182), S(203, 184), S(216, 168), S(204, 153), \
}, }

#define ROOK_PST { { \
   S(215, 290), S(182, 300), S(202, 296), S(197, 300), S(206, 299), S(206, 302), S(179, 298), S(197, 285), \
   S(285, 262), S(287, 266), S(286, 261), S(267, 268), S(218, 280), S(225, 290), S(149, 298), S(149, 296), \
   S(272, 268), S(291, 262), S(323, 265), S(287, 255), S(242, 270), S(185, 301), S(191, 282), S(141, 282), \
   S(229, 276), S(192, 285), S(191, 289), S(233, 285), S(196, 295), S(226, 294), S(121, 301), S(161, 283), \
   S(152, 287), S(185, 285), S(186, 286), S(181, 287), S(187, 286), S(193, 293), S(131, 292), S(127, 291), \
   S(146, 279), S(188, 273), S(206, 271), S(209, 262), S(173, 278), S(197, 283), S(136, 291), S(161, 262), \
   S(172, 256), S(165, 275), S(198, 260), S(196, 268), S(169, 279), S(166, 293), S(123, 273), S(136, 268), \
   S(200, 260), S(217, 263), S(211, 267), S(208, 277), S(209, 273), S(205, 282), S(134, 299), S(177, 269), \
}, { \
   S(314, 370), S(304, 382), S(255, 402), S(308, 380), S(304, 386), S(277, 399), S(329, 384), S(344, 370), \
   S(289, 386), S(276, 401), S(313, 392), S(355, 375), S(353, 371), S(351, 376), S(232, 410), S(289, 381), \
   S(262, 384), S(290, 388), S(290, 391), S(327, 376), S(327, 370), S(366, 365), S(341, 371), S(320, 364), \
   S(250, 388), S(272, 385), S(282, 399), S(291, 382), S(287, 383), S(318, 380), S(301, 382), S(276, 375), \
   S(258, 373), S(241, 392), S(267, 392), S(269, 384), S(283, 369), S(279, 377), S(280, 378), S(278, 356), \
   S(258, 363), S(257, 377), S(267, 379), S(271, 374), S(290, 365), S(300, 365), S(305, 358), S(274, 349), \
   S(257, 362), S(268, 362), S(268, 376), S(281, 369), S(294, 358), S(308, 359), S(319, 346), S(229, 354), \
   S(287, 364), S(283, 364), S(288, 374), S(298, 366), S(303, 361), S(309, 366), S(265, 371), S(306, 323), \
}, }

#define QUEEN_PST { { \
   S(554, 477), S(558, 481), S(704, 411), S(510, 472), S(576, 475), S(497, 512), S(608, 423), S(419, 510), \
   S(711, 387), S(616, 427), S(669, 439), S(488, 553), S(576, 487), S(487, 502), S(397, 546), S(480, 470), \
   S(645, 406), S(682, 430), S(758, 433), S(648, 432), S(527, 507), S(471, 522), S(465, 516), S(429, 512), \
   S(572, 492), S(572, 464), S(529, 492), S(513, 506), S(519, 461), S(495, 482), S(457, 512), S(490, 473), \
   S(543, 502), S(511, 512), S(501, 571), S(537, 479), S(510, 443), S(485, 533), S(470, 518), S(443, 495), \
   S(549, 458), S(533, 466), S(520, 469), S(516, 436), S(526, 463), S(553, 440), S(495, 522), S(475, 454), \
   S(528, 437), S(509, 451), S(559, 411), S(524, 453), S(556, 414), S(565, 428), S(440, 521), S(477, 446), \
   S(466, 484), S(514, 443), S(521, 441), S(547, 397), S(541, 399), S(509, 462), S(464, 488), S(448, 463), \
}, { \
   S(616, 662), S(615, 692), S(621, 700), S(644, 702), S(695, 683), S(744, 689), S(763, 696), S(677, 750), \
   S(612, 675), S(592, 680), S(611, 718), S(608, 731), S(587, 797), S(722, 729), S(651, 776), S(674, 771), \
   S(619, 663), S(637, 652), S(629, 685), S(655, 706), S(700, 700), S(760, 734), S(738, 729), S(720, 761), \
   S(608, 686), S(628, 673), S(628, 689), S(645, 686), S(635, 750), S(651, 789), S(654, 810), S(652, 780), \
   S(656, 641), S(622, 687), S(655, 671), S(647, 699), S(650, 701), S(647, 733), S(653, 764), S(661, 762), \
   S(648, 642), S(673, 617), S(653, 671), S(668, 648), S(673, 653), S(668, 693), S(676, 713), S(662, 714), \
   S(650, 625), S(670, 620), S(690, 606), S(694, 614), S(695, 607), S(690, 628), S(683, 634), S(653, 695), \
   S(657, 628), S(652, 624), S(676, 607), S(696, 584), S(676, 600), S(636, 652), S(625, 675), S(648, 621), \
}, }

#define PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(23, 339), S(43, 279), S(18, 294), S(20, 310), S(47, 353), S(3, 367), S(-31, 379), S(31, 373), \
   S(125, 141), S(226, 94), S(202, 131), S(277, 140), S(125, 183), S(141, 133), S(91, 176), S(125, 150), \
   S(61, 136), S(103, 111), S(127, 111), S(145, 107), S(137, 120), S(140, 119), S(122, 133), S(133, 129), \
   S(45, 129), S(60, 117), S(114, 109), S(138, 108), S(132, 114), S(144, 108), S(106, 119), S(124, 115), \
   S(39, 122), S(63, 113), S(98, 115), S(103, 119), S(131, 116), S(138, 109), S(136, 102), S(134, 103), \
   S(42, 131), S(73, 115), S(111, 115), S(123, 111), S(128, 118), S(170, 106), S(150, 102), S(122, 106), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(79, 368), S(83, 348), S(28, 361), S(74, 319), S(92, 300), S(36, 286), S(39, 307), S(-12, 343), \
   S(83, 178), S(116, 151), S(136, 144), S(150, 141), S(209, 154), S(210, 126), S(191, 155), S(139, 149), \
   S(84, 155), S(112, 133), S(112, 129), S(140, 103), S(140, 113), S(137, 109), S(107, 124), S(107, 121), \
   S(70, 141), S(97, 123), S(117, 114), S(139, 109), S(134, 113), S(141, 102), S(100, 112), S(100, 111), \
   S(79, 125), S(102, 110), S(113, 114), S(118, 118), S(126, 127), S(133, 110), S(134, 101), S(116, 103), \
   S(76, 132), S(115, 108), S(97, 130), S(118, 128), S(113, 139), S(161, 114), S(151, 104), S(115, 99), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define KING_PST { { \
   S(33, -98), S(120, -32), S(76, -78), S(227, -85), S(236, -31), S(329, -11), S(326, -43), S(231, -55), \
   S(56, -39), S(220, 20), S(156, 11), S(25, 14), S(262, 38), S(341, 28), S(363, 12), S(401, -49), \
   S(107, -16), S(135, 10), S(271, 25), S(1, 36), S(297, 42), S(389, 32), S(377, 12), S(321, -2), \
   S(-66, -21), S(54, 16), S(30, 31), S(-87, 60), S(241, 60), S(218, 61), S(297, 43), S(278, 10), \
   S(-111, -9), S(-68, 14), S(-99, 46), S(-169, 67), S(149, 77), S(249, 47), S(274, 18), S(192, 1), \
   S(-124, -21), S(-29, -1), S(-127, 40), S(-154, 53), S(212, 54), S(202, 39), S(275, 6), S(285, -21), \
   S(15, -46), S(1, -15), S(-47, 7), S(-136, 29), S(226, 35), S(254, 13), S(300, -14), S(297, -37), \
   S(9, -95), S(57, -74), S(-17, -38), S(-127, -3), S(279, -22), S(238, -15), S(340, -62), S(315, -88), \
}, { \
   S(-66, -159), S(-143, -67), S(-129, -57), S(-204, -36), S(-22, -20), S(53, -21), S(321, -87), S(82, -59), \
   S(-84, -64), S(-169, 0), S(-150, -2), S(-279, 22), S(86, 13), S(98, 16), S(133, 18), S(-54, 19), \
   S(-216, -8), S(-161, 10), S(-221, 20), S(-259, 41), S(69, 38), S(278, 28), S(200, 42), S(35, 7), \
   S(-261, -5), S(-284, 32), S(-299, 40), S(-344, 62), S(-34, 56), S(26, 46), S(-73, 47), S(-202, 23), \
   S(-366, -4), S(-250, -1), S(-350, 43), S(-431, 64), S(-113, 74), S(-116, 58), S(-96, 30), S(-164, 6), \
   S(-308, -26), S(-305, 0), S(-364, 31), S(-433, 56), S(-112, 65), S(-81, 45), S(-34, 14), S(-62, -13), \
   S(-218, -72), S(-272, -22), S(-352, 15), S(-386, 29), S(-100, 47), S(-58, 29), S(11, -3), S(14, -33), \
   S(-240, -111), S(-193, -93), S(-228, -58), S(-378, -5), S(-14, -17), S(-62, -4), S(47, -50), S(30, -91), \
}, }

#endif