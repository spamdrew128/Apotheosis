#ifndef __EVAL_CONSTANTS_H__
#define __EVAL_CONSTANTS_H__

#include <stdint.h>

#include "board_constants.h"
#include "board_info.h"

typedef uint8_t Phase_t;
typedef uint8_t Bucket_t;
enum {
  mg_phase,
  eg_phase,
  NUM_PHASES,
  PHASE_MAX = 24,

  KNIGHT_PHASE_VALUE = 1,
  BISHOP_PHASE_VALUE = 1,
  ROOK_PHASE_VALUE = 2,
  QUEEN_PHASE_VALUE = 4,
  PAWN_PHASE_VALUE = 0,
  KING_PHASE_VALUE = 0,

  QS_PST_MASK = C64(0x0F0F0F0F0F0F0F0F),
  KS_PST_MASK = C64(0xF0F0F0F0F0F0F0F0),
  NUM_PST_BUCKETS = 2,
};

// used for eval calcuations. Contains both EG and MG score packed into 1 value.
typedef int32_t Score_t;
#define S(mg, eg) \
	((Score_t)((uint32_t)eg << 16) + mg)

/*

 ██████╗ ██████╗ ███╗   ██╗███████╗████████╗ █████╗ ███╗   ██╗████████╗███████╗
██╔════╝██╔═══██╗████╗  ██║██╔════╝╚══██╔══╝██╔══██╗████╗  ██║╚══██╔══╝██╔════╝
██║     ██║   ██║██╔██╗ ██║███████╗   ██║   ███████║██╔██╗ ██║   ██║   ███████╗
██║     ██║   ██║██║╚██╗██║╚════██║   ██║   ██╔══██║██║╚██╗██║   ██║   ╚════██║
╚██████╗╚██████╔╝██║ ╚████║███████║   ██║   ██║  ██║██║ ╚████║   ██║   ███████║
 ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝

*/                                                                        

#define BISHOP_PAIR_BONUS \
   S(28, 71)

#define PASSED_PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(74, 210), S(1, 194), S(46, 194), S(137, 190), S(37, 262), S(46, 231), S(19, 271), S(55, 269), \
   S(60, 161), S(-60, 190), S(-29, 141), S(-36, 103), S(52, 138), S(-84, 235), S(-72, 274), S(-74, 291), \
   S(-1, 88), S(-10, 73), S(90, 39), S(-4, 51), S(0, 68), S(-61, 113), S(-117, 162), S(-113, 186), \
   S(-13, 54), S(-44, 51), S(24, 28), S(-15, 27), S(-78, 57), S(-71, 64), S(-48, 88), S(-57, 90), \
   S(81, 8), S(-27, 32), S(-12, 14), S(-3, 19), S(-57, 25), S(-12, 9), S(-28, 34), S(-29, 43), \
   S(8, 9), S(85, 21), S(94, -2), S(-26, 12), S(-18, 14), S(-47, 21), S(-38, 23), S(-40, 31), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(103, 258), S(90, 255), S(77, 247), S(113, 206), S(74, 212), S(65, 183), S(0, 217), S(-12, 245), \
   S(53, 230), S(19, 239), S(32, 201), S(34, 159), S(3, 129), S(64, 104), S(-49, 123), S(-38, 148), \
   S(29, 130), S(-3, 127), S(10, 100), S(11, 86), S(11, 60), S(61, 42), S(-8, 87), S(18, 73), \
   S(6, 72), S(-22, 73), S(-38, 59), S(-18, 46), S(-28, 43), S(-7, 40), S(6, 56), S(28, 48), \
   S(2, 21), S(-12, 38), S(-30, 30), S(-29, 27), S(3, 8), S(36, 9), S(40, 34), S(57, 11), \
   S(-6, 20), S(8, 26), S(7, 13), S(-22, 26), S(2, 8), S(15, 10), S(63, 26), S(8, 28), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define BLOCKED_PASSERS { \
   S(62, -200), S(6, -119), S(-8, -47), S(1, -25), S(-18, 5), S(4, -14), S(0, 0), S(0, 0), \
}

#define ROOK_OPEN_FILE { \
   S(31, 0), S(36, 0), S(36, 1), S(40, 1), S(42, 5), S(37, -4), S(108, -21), S(100, -11), \
}

#define ROOK_SEMI_OPEN_FILE { \
   S(-11, 43), S(4, 13), S(12, 7), S(23, -2), S(19, -6), S(9, -6), S(38, -10), S(19, 23), \
}

#define QUEEN_OPEN_FILE { \
   S(-13, 12), S(-7, 27), S(-18, 22), S(-19, 34), S(-13, 42), S(-9, 13), S(22, 16), S(39, -14), \
}

#define QUEEN_SEMI_OPEN_FILE { \
   S(-7, 2), S(5, 0), S(5, 0), S(-4, 30), S(-1, 30), S(14, -38), S(49, -51), S(28, -19), \
}

#define KING_OPEN_FILE { \
   S(-68, -15), S(-121, 6), S(-100, 3), S(-41, -13), S(-70, -5), S(-101, 7), S(-107, 17), S(-70, 10), \
}

#define KING_SEMI_OPEN_FILE { \
   S(-32, 30), S(-61, 19), S(-19, -3), S(7, -10), S(-16, 1), S(-31, 2), S(-41, 19), S(-39, 31), \
}

#define ISOLATED_PAWNS { \
   S(-15, -17), S(-19, -16), S(-18, -21), S(-32, -15), S(-31, -22), S(-9, -20), S(-16, -15), S(-28, -19), \
}

#define KNIGHT_MOBILITY { \
   S(245, 173), S(264, 240), S(276, 262), S(282, 273), S(296, 278), S(303, 289), S(314, 286), S(318, 286), S(341, 264), \
}

#define BISHOP_MOBILITY { \
   S(236, 193), S(251, 215), S(266, 232), S(274, 250), S(283, 263), S(287, 273), S(292, 281), S(296, 282), S(293, 289), S(302, 285), S(318, 280), S(346, 275), S(268, 316), S(350, 267), \
}

#define ROOK_MOBILITY { \
   S(287, 350), S(302, 377), S(307, 394), S(312, 407), S(311, 419), S(318, 425), S(321, 432), S(328, 435), S(337, 440), S(343, 445), S(345, 450), S(354, 454), S(350, 462), S(366, 455), S(369, 453), \
}

#define QUEEN_MOBILITY { \
   S(728, 723), S(722, 632), S(721, 611), S(721, 635), S(725, 675), S(728, 692), S(731, 698), S(729, 736), S(732, 747), S(736, 754), S(741, 765), S(742, 779), S(738, 789), S(748, 791), S(749, 803), S(746, 816), S(744, 825), S(759, 813), S(776, 813), S(780, 811), S(772, 828), S(827, 798), S(793, 814), S(898, 761), S(966, 715), S(1050, 681), S(795, 860), S(716, 860), \
}

#define KNIGHT_KING_ZONE_ATTACKS { \
   S(0, 0), S(0, 7), S(6, 8), S(33, -11), S(93, -7), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}

#define BISHOP_KING_ZONE_ATTACKS { \
   S(0, 0), S(5, 8), S(8, 3), S(30, 4), S(68, -6), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}

#define ROOK_KING_ZONE_ATTACKS { \
   S(0, 0), S(11, -7), S(15, -14), S(26, -11), S(57, -30), S(88, -29), S(116, -34), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}

#define QUEEN_KING_ZONE_ATTACKS { \
   S(0, 0), S(4, 9), S(3, 21), S(5, 39), S(3, 41), S(22, 51), S(33, 52), S(86, 40), S(127, 26), S(247, -45), S(322, -53), S(0, 0), S(0, 0), S(0, 0), \
}

#define PAWN_KING_ZONE_ATTACKS { \
   S(0, 0), S(36, -33), S(61, -31), S(119, -36), S(246, -55), S(56, -15), S(58, 80), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}

#define CHECK_BONUS { \
   S(123, 3), S(127, 66), S(202, -10), S(100, 117), S(383, -14), \
}

#define PAWN_THREAT_ON_KNIGHT S(61, 10)
#define PAWN_THREAT_ON_BISHOP S(61, 41)
#define PAWN_THREAT_ON_ROOK S(118, -38)
#define PAWN_THREAT_ON_QUEEN S(63, -8)

#define KNIGHT_THREAT_ON_BISHOP S(27, 24)
#define KNIGHT_THREAT_ON_ROOK S(63, -10)
#define KNIGHT_THREAT_ON_QUEEN S(27, -32)

#define BISHOP_THREAT_ON_KNIGHT S(24, 30)
#define BISHOP_THREAT_ON_ROOK S(43, 5)
#define BISHOP_THREAT_ON_QUEEN S(45, 37)

#define ROOK_THREAT_ON_QUEEN S(61, -20)

/*
Average PST values for MG, EG:
Knight Values: 142 122
Bishop Values: 159 157
Rook Values: 222 349
Queen Values: 538 591
Pawn Values: 97 146
*/

#define KNIGHT_PST { { \
   S(-82, 8), S(56, 15), S(3, 118), S(164, 49), S(192, 71), S(176, 50), S(120, 42), S(79, 50), \
   S(104, 60), S(183, 61), S(197, 74), S(162, 81), S(92, 102), S(152, 96), S(125, 92), S(27, 109), \
   S(41, 95), S(182, 79), S(173, 110), S(188, 115), S(147, 121), S(147, 104), S(103, 110), S(124, 81), \
   S(157, 82), S(166, 101), S(166, 133), S(182, 137), S(196, 120), S(181, 120), S(160, 105), S(85, 103), \
   S(144, 101), S(178, 91), S(162, 132), S(173, 126), S(152, 131), S(144, 124), S(139, 112), S(110, 119), \
   S(129, 76), S(138, 102), S(137, 106), S(154, 131), S(188, 113), S(149, 101), S(149, 81), S(109, 91), \
   S(80, 86), S(166, 97), S(110, 104), S(129, 113), S(131, 106), S(135, 92), S(94, 90), S(66, 109), \
   S(21, 82), S(114, 87), S(94, 111), S(106, 108), S(105, 94), S(126, 81), S(106, 88), S(73, 109), \
}, { \
   S(-14, 127), S(26, 137), S(64, 161), S(134, 124), S(178, 133), S(14, 147), S(59, 98), S(39, -6), \
   S(47, 160), S(94, 178), S(177, 138), S(166, 163), S(161, 156), S(201, 129), S(157, 128), S(155, 95), \
   S(104, 143), S(186, 147), S(188, 180), S(204, 171), S(210, 166), S(276, 159), S(208, 127), S(149, 133), \
   S(161, 159), S(176, 173), S(174, 195), S(228, 186), S(190, 195), S(230, 184), S(183, 175), S(205, 145), \
   S(151, 163), S(161, 159), S(177, 187), S(190, 188), S(196, 187), S(187, 185), S(213, 159), S(168, 151), \
   S(144, 143), S(152, 160), S(176, 155), S(179, 168), S(198, 174), S(188, 146), S(186, 139), S(159, 155), \
   S(133, 125), S(137, 142), S(155, 143), S(184, 145), S(183, 155), S(183, 139), S(184, 125), S(170, 128), \
   S(55, 144), S(154, 122), S(150, 131), S(152, 150), S(174, 147), S(172, 142), S(160, 134), S(164, 88), \
}, }

#define BISHOP_PST { { \
   S(162, 131), S(115, 121), S(33, 139), S(-76, 136), S(-54, 157), S(-4, 132), S(40, 153), S(114, 132), \
   S(140, 109), S(144, 118), S(150, 117), S(131, 83), S(188, 121), S(105, 150), S(76, 153), S(18, 162), \
   S(210, 102), S(237, 103), S(184, 147), S(196, 127), S(160, 134), S(193, 110), S(133, 150), S(163, 139), \
   S(162, 109), S(139, 138), S(162, 141), S(213, 139), S(161, 151), S(169, 138), S(196, 122), S(107, 152), \
   S(137, 119), S(129, 135), S(122, 144), S(165, 141), S(193, 131), S(177, 126), S(133, 134), S(127, 149), \
   S(133, 132), S(138, 129), S(155, 136), S(151, 142), S(180, 138), S(190, 127), S(182, 147), S(157, 142), \
   S(154, 107), S(150, 132), S(188, 115), S(156, 134), S(166, 123), S(199, 106), S(210, 103), S(124, 151), \
   S(64, 135), S(73, 167), S(153, 145), S(156, 143), S(184, 124), S(160, 124), S(164, 124), S(149, 119), \
}, { \
   S(155, 185), S(133, 175), S(72, 191), S(37, 202), S(111, 180), S(72, 194), S(208, 166), S(169, 153), \
   S(140, 195), S(155, 196), S(130, 186), S(99, 199), S(155, 179), S(173, 176), S(144, 182), S(103, 169), \
   S(163, 192), S(199, 186), S(196, 182), S(191, 177), S(188, 181), S(233, 193), S(189, 187), S(204, 177), \
   S(159, 191), S(186, 190), S(184, 200), S(227, 200), S(193, 204), S(207, 195), S(174, 181), S(174, 189), \
   S(169, 187), S(182, 191), S(190, 198), S(212, 204), S(203, 193), S(181, 192), S(176, 187), S(176, 170), \
   S(185, 175), S(201, 188), S(199, 194), S(195, 190), S(203, 198), S(209, 185), S(198, 177), S(188, 173), \
   S(195, 172), S(207, 158), S(204, 169), S(196, 178), S(204, 179), S(222, 172), S(230, 167), S(204, 156), \
   S(179, 163), S(208, 169), S(191, 184), S(178, 180), S(202, 179), S(185, 193), S(205, 176), S(198, 159), \
}, }

#define ROOK_PST { { \
   S(241, 307), S(165, 315), S(201, 311), S(142, 336), S(151, 337), S(155, 339), S(199, 318), S(122, 330), \
   S(287, 282), S(305, 284), S(199, 302), S(219, 305), S(228, 294), S(177, 323), S(128, 327), S(122, 327), \
   S(240, 294), S(258, 295), S(222, 291), S(254, 291), S(180, 310), S(173, 318), S(238, 292), S(101, 312), \
   S(175, 304), S(177, 312), S(172, 323), S(165, 320), S(188, 309), S(227, 313), S(104, 328), S(121, 316), \
   S(124, 308), S(122, 325), S(119, 329), S(161, 320), S(190, 303), S(168, 322), S(162, 300), S(154, 290), \
   S(153, 292), S(139, 308), S(176, 289), S(195, 271), S(135, 309), S(179, 302), S(136, 303), S(138, 284), \
   S(161, 285), S(149, 303), S(189, 282), S(173, 291), S(184, 293), S(185, 303), S(120, 303), S(135, 290), \
   S(185, 280), S(197, 287), S(180, 295), S(185, 294), S(198, 282), S(190, 297), S(135, 307), S(158, 290), \
}, { \
   S(286, 401), S(314, 395), S(249, 426), S(305, 399), S(290, 402), S(230, 431), S(299, 405), S(304, 397), \
   S(263, 410), S(264, 417), S(298, 411), S(323, 401), S(319, 390), S(325, 399), S(199, 441), S(259, 405), \
   S(245, 404), S(277, 407), S(266, 412), S(279, 408), S(290, 389), S(333, 385), S(305, 408), S(268, 391), \
   S(236, 404), S(278, 392), S(265, 411), S(264, 400), S(255, 395), S(254, 407), S(244, 400), S(236, 395), \
   S(240, 396), S(247, 400), S(255, 407), S(262, 397), S(285, 377), S(250, 396), S(262, 399), S(242, 386), \
   S(250, 381), S(257, 391), S(261, 386), S(252, 392), S(268, 386), S(288, 380), S(282, 384), S(258, 365), \
   S(239, 382), S(262, 377), S(261, 384), S(269, 389), S(279, 374), S(286, 378), S(283, 373), S(211, 381), \
   S(270, 382), S(271, 380), S(273, 386), S(283, 378), S(287, 375), S(291, 380), S(248, 386), S(272, 348), \
}, }

#define QUEEN_PST { { \
   S(490, 551), S(562, 493), S(726, 398), S(532, 464), S(633, 425), S(511, 504), S(528, 433), S(414, 541), \
   S(641, 424), S(526, 484), S(628, 410), S(510, 505), S(444, 517), S(438, 521), S(425, 504), S(431, 505), \
   S(559, 450), S(486, 520), S(562, 493), S(483, 514), S(493, 516), S(479, 509), S(434, 505), S(428, 509), \
   S(491, 503), S(465, 493), S(377, 544), S(452, 533), S(438, 485), S(471, 508), S(391, 540), S(465, 527), \
   S(495, 494), S(436, 536), S(435, 546), S(445, 525), S(430, 491), S(443, 570), S(425, 535), S(413, 544), \
   S(523, 442), S(478, 437), S(474, 487), S(476, 436), S(462, 489), S(505, 461), S(452, 515), S(435, 516), \
   S(447, 481), S(462, 428), S(500, 430), S(484, 464), S(499, 464), S(525, 463), S(426, 506), S(445, 436), \
   S(418, 487), S(443, 422), S(452, 462), S(492, 419), S(503, 431), S(460, 441), S(388, 502), S(393, 528), \
}, { \
   S(555, 689), S(574, 693), S(539, 747), S(609, 693), S(697, 632), S(584, 747), S(712, 672), S(634, 752), \
   S(556, 697), S(540, 707), S(576, 739), S(561, 761), S(509, 804), S(609, 707), S(619, 755), S(671, 734), \
   S(596, 668), S(590, 668), S(578, 697), S(575, 741), S(611, 697), S(633, 739), S(592, 710), S(610, 746), \
   S(563, 714), S(580, 697), S(586, 695), S(566, 725), S(565, 737), S(589, 731), S(568, 763), S(595, 712), \
   S(598, 670), S(573, 705), S(589, 706), S(582, 727), S(593, 694), S(578, 712), S(600, 704), S(596, 728), \
   S(588, 694), S(607, 662), S(600, 697), S(607, 667), S(606, 684), S(613, 685), S(617, 688), S(603, 708), \
   S(593, 658), S(604, 658), S(619, 644), S(629, 630), S(630, 639), S(628, 655), S(614, 624), S(618, 657), \
   S(610, 654), S(594, 645), S(607, 652), S(628, 622), S(612, 648), S(587, 674), S(586, 652), S(588, 615), \
}, }

#define PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(74, 210), S(1, 194), S(46, 194), S(137, 190), S(37, 262), S(46, 231), S(19, 271), S(55, 269), \
   S(65, 161), S(171, 119), S(197, 127), S(188, 146), S(47, 181), S(163, 130), S(97, 167), S(117, 162), \
   S(50, 139), S(59, 132), S(102, 127), S(111, 127), S(106, 137), S(106, 130), S(147, 122), S(150, 131), \
   S(31, 132), S(44, 133), S(96, 121), S(120, 117), S(118, 117), S(111, 116), S(114, 115), S(117, 120), \
   S(21, 128), S(46, 124), S(83, 121), S(74, 130), S(107, 119), S(115, 118), S(131, 97), S(135, 103), \
   S(27, 136), S(52, 128), S(91, 122), S(93, 123), S(101, 125), S(140, 114), S(142, 101), S(123, 109), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(103, 258), S(90, 255), S(77, 247), S(113, 206), S(74, 212), S(65, 183), S(0, 217), S(-12, 245), \
   S(81, 183), S(87, 169), S(97, 165), S(120, 145), S(157, 147), S(156, 150), S(162, 161), S(133, 170), \
   S(76, 159), S(98, 136), S(102, 133), S(119, 105), S(121, 126), S(118, 123), S(95, 129), S(94, 136), \
   S(66, 144), S(88, 127), S(101, 123), S(128, 112), S(123, 118), S(120, 110), S(93, 113), S(90, 118), \
   S(70, 131), S(91, 116), S(100, 117), S(108, 124), S(115, 134), S(117, 118), S(121, 103), S(104, 110), \
   S(71, 137), S(100, 114), S(87, 134), S(107, 128), S(105, 149), S(144, 121), S(138, 104), S(102, 104), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define KING_PST { { \
   S(-92, -83), S(-3, -13), S(27, -58), S(-210, 14), S(23, 36), S(-4, 64), S(269, 3), S(333, -48), \
   S(166, -76), S(127, 17), S(191, 3), S(111, 12), S(225, 42), S(224, 57), S(264, 33), S(305, -15), \
   S(-15, 17), S(14, 24), S(59, 46), S(38, 42), S(252, 61), S(334, 51), S(389, 30), S(258, 8), \
   S(-67, -13), S(7, 29), S(31, 33), S(-112, 59), S(273, 54), S(258, 52), S(384, 26), S(297, 6), \
   S(-154, 1), S(-26, -2), S(3, 28), S(-105, 53), S(209, 56), S(278, 35), S(290, 9), S(200, -8), \
   S(-20, -35), S(5, -8), S(-47, 19), S(-21, 27), S(235, 42), S(265, 19), S(289, -3), S(307, -25), \
   S(33, -41), S(44, -28), S(18, -5), S(-62, 21), S(268, 28), S(262, 7), S(307, -19), S(331, -50), \
   S(48, -89), S(64, -58), S(15, -38), S(-73, 0), S(279, -14), S(245, -11), S(322, -52), S(309, -92), \
}, { \
   S(-202, -130), S(-59, -100), S(-69, -52), S(-345, 7), S(-86, 16), S(1, -2), S(149, -23), S(-53, -30), \
   S(-258, 2), S(-212, 15), S(-323, 33), S(-294, 41), S(7, 46), S(14, 49), S(154, 5), S(-199, 49), \
   S(-319, 15), S(-200, 20), S(-175, 16), S(-324, 44), S(48, 41), S(282, 30), S(238, 30), S(34, 0), \
   S(-223, -5), S(-221, 20), S(-266, 36), S(-326, 53), S(-77, 63), S(6, 48), S(-8, 30), S(-159, 13), \
   S(-410, 9), S(-239, -4), S(-285, 26), S(-407, 59), S(-134, 82), S(-56, 46), S(-63, 20), S(-112, -1), \
   S(-284, -29), S(-300, -1), S(-320, 18), S(-405, 49), S(-57, 54), S(-51, 37), S(-17, 12), S(-35, -17), \
   S(-188, -76), S(-254, -25), S(-311, 9), S(-361, 28), S(-70, 44), S(-33, 29), S(14, 0), S(24, -31), \
   S(-242, -120), S(-213, -86), S(-236, -51), S(-390, 8), S(-19, -10), S(-58, 7), S(31, -38), S(23, -79), \
}, }

#endif