#ifndef __EVAL_CONSTANTS_H__
#define __EVAL_CONSTANTS_H__

#include <stdint.h>

#include "board_constants.h"
#include "board_info.h"

typedef uint8_t Phase_t;
typedef uint8_t Bucket_t;
enum {
  mg_phase,
  eg_phase,
  NUM_PHASES,
  PHASE_MAX = 24,

  KNIGHT_PHASE_VALUE = 1,
  BISHOP_PHASE_VALUE = 1,
  ROOK_PHASE_VALUE = 2,
  QUEEN_PHASE_VALUE = 4,
  PAWN_PHASE_VALUE = 0,
  KING_PHASE_VALUE = 0,

  QS_PST_MASK = C64(0x0F0F0F0F0F0F0F0F),
  KS_PST_MASK = C64(0xF0F0F0F0F0F0F0F0),
  NUM_PST_BUCKETS = 2,
};

// used for eval calcuations. Contains both EG and MG score packed into 1 value.
typedef int32_t Score_t;
#define S(mg, eg) \
	((Score_t)((uint32_t)eg << 16) + mg)

/*

 ██████╗ ██████╗ ███╗   ██╗███████╗████████╗ █████╗ ███╗   ██╗████████╗███████╗
██╔════╝██╔═══██╗████╗  ██║██╔════╝╚══██╔══╝██╔══██╗████╗  ██║╚══██╔══╝██╔════╝
██║     ██║   ██║██╔██╗ ██║███████╗   ██║   ███████║██╔██╗ ██║   ██║   ███████╗
██║     ██║   ██║██║╚██╗██║╚════██║   ██║   ██╔══██║██║╚██╗██║   ██║   ╚════██║
╚██████╗╚██████╔╝██║ ╚████║███████║   ██║   ██║  ██║██║ ╚████║   ██║   ███████║
 ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝

*/                                                                        

#define BISHOP_PAIR_BONUS \
   S(28, 72)

#define PASSED_PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(66, 211), S(1, 193), S(46, 191), S(137, 187), S(34, 262), S(48, 231), S(21, 270), S(56, 268), \
   S(58, 163), S(-56, 189), S(-26, 140), S(-38, 101), S(55, 136), S(-87, 235), S(-73, 273), S(-67, 287), \
   S(-4, 88), S(-12, 72), S(84, 39), S(-2, 48), S(2, 68), S(-59, 112), S(-116, 161), S(-111, 185), \
   S(-10, 53), S(-41, 48), S(26, 26), S(-11, 24), S(-76, 55), S(-69, 62), S(-47, 87), S(-56, 89), \
   S(82, 7), S(-23, 31), S(-15, 14), S(0, 17), S(-55, 23), S(-11, 7), S(-30, 34), S(-28, 42), \
   S(8, 9), S(86, 21), S(93, -2), S(-15, 7), S(-20, 15), S(-49, 22), S(-43, 24), S(-40, 30), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(103, 258), S(90, 255), S(77, 247), S(114, 205), S(74, 210), S(67, 181), S(-3, 215), S(-13, 243), \
   S(53, 229), S(19, 239), S(32, 202), S(34, 157), S(4, 129), S(60, 109), S(-50, 126), S(-43, 153), \
   S(28, 129), S(-3, 127), S(10, 99), S(10, 86), S(11, 59), S(61, 42), S(-8, 85), S(17, 73), \
   S(5, 72), S(-22, 74), S(-37, 59), S(-18, 46), S(-28, 43), S(-5, 37), S(8, 53), S(30, 47), \
   S(1, 21), S(-12, 38), S(-28, 30), S(-28, 26), S(6, 7), S(35, 8), S(44, 32), S(59, 9), \
   S(-6, 20), S(7, 26), S(7, 13), S(-26, 28), S(4, 8), S(17, 8), S(69, 23), S(12, 26), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define BLOCKED_PASSERS { \
   S(61, -200), S(5, -117), S(-9, -43), S(1, -23), S(-19, 7), S(2, -14), S(0, 0), S(0, 0), \
}

#define ROOK_OPEN_FILE { \
   S(31, 0), S(36, 0), S(37, 1), S(40, 1), S(42, 5), S(47, -7), S(108, -21), S(102, -12), \
}

#define ROOK_SEMI_OPEN_FILE { \
   S(-12, 43), S(4, 13), S(12, 7), S(23, -3), S(19, -7), S(12, -8), S(40, -12), S(21, 21), \
}

#define QUEEN_OPEN_FILE { \
   S(-14, 11), S(-8, 27), S(-19, 22), S(-22, 35), S(-14, 39), S(-2, 13), S(24, 11), S(42, -23), \
}

#define QUEEN_SEMI_OPEN_FILE { \
   S(-7, 1), S(5, 1), S(4, 0), S(-4, 29), S(-1, 28), S(15, -37), S(49, -47), S(28, -18), \
}

#define KING_OPEN_FILE { \
   S(-82, -14), S(-126, 8), S(-101, 4), S(-43, -11), S(-70, -3), S(-100, 9), S(-108, 20), S(-75, 10), \
}

#define KING_SEMI_OPEN_FILE { \
   S(-43, 37), S(-61, 16), S(-18, -7), S(8, -15), S(-18, -2), S(-29, 0), S(-41, 18), S(-46, 35), \
}

#define ISOLATED_PAWNS { \
   S(-14, -17), S(-18, -16), S(-18, -21), S(-32, -16), S(-31, -23), S(-10, -20), S(-16, -16), S(-28, -18), \
}

#define KNIGHT_MOBILITY { \
   S(239, 176), S(258, 241), S(270, 263), S(276, 274), S(289, 279), S(296, 291), S(307, 288), S(311, 289), S(334, 267), \
}

#define BISHOP_MOBILITY { \
   S(230, 192), S(245, 214), S(261, 232), S(269, 251), S(278, 264), S(282, 275), S(287, 282), S(290, 283), S(288, 291), S(296, 288), S(312, 282), S(340, 278), S(262, 318), S(345, 269), \
}

#define ROOK_MOBILITY { \
   S(288, 351), S(302, 378), S(308, 395), S(312, 408), S(312, 420), S(319, 426), S(322, 432), S(329, 435), S(338, 440), S(345, 444), S(346, 450), S(355, 453), S(350, 462), S(365, 456), S(365, 455), \
}

#define QUEEN_MOBILITY { \
   S(727, 731), S(722, 626), S(721, 609), S(720, 637), S(725, 677), S(727, 696), S(730, 702), S(729, 741), S(731, 752), S(735, 760), S(739, 772), S(741, 786), S(736, 796), S(746, 799), S(747, 813), S(745, 826), S(742, 835), S(757, 824), S(774, 823), S(781, 821), S(772, 840), S(824, 811), S(798, 822), S(901, 770), S(959, 726), S(1070, 677), S(821, 854), S(720, 861), \
}

#define KING_RING_THREATS { \
   S(15, -10), S(23, -3), S(25, -7), S(14, 8), S(34, -14), \
}

#define CHECK_BONUS { \
   S(122, 0), S(121, 67), S(204, -13), S(100, 120), S(374, -9), \
}

#define PAWN_THREAT_ON_KNIGHT S(62, 9)
#define PAWN_THREAT_ON_BISHOP S(60, 41)
#define PAWN_THREAT_ON_ROOK S(117, -38)
#define PAWN_THREAT_ON_QUEEN S(63, -13)

#define KNIGHT_THREAT_ON_BISHOP S(27, 24)
#define KNIGHT_THREAT_ON_ROOK S(63, -11)
#define KNIGHT_THREAT_ON_QUEEN S(28, -34)

#define BISHOP_THREAT_ON_KNIGHT S(26, 29)
#define BISHOP_THREAT_ON_ROOK S(43, 5)
#define BISHOP_THREAT_ON_QUEEN S(46, 36)

#define ROOK_THREAT_ON_QUEEN S(61, -21)

/*
Average PST values for MG, EG:
Knight Values: 147 130
Bishop Values: 162 161
Rook Values: 220 347
Queen Values: 534 600
Pawn Values: 97 145
*/

#define KNIGHT_PST { { \
   S(-86, 21), S(121, 21), S(21, 128), S(159, 68), S(189, 84), S(164, 62), S(114, 47), S(82, 48), \
   S(100, 76), S(187, 75), S(204, 87), S(175, 92), S(100, 113), S(153, 105), S(124, 101), S(31, 108), \
   S(60, 109), S(196, 93), S(185, 126), S(209, 128), S(156, 134), S(149, 114), S(100, 119), S(131, 80), \
   S(159, 98), S(161, 119), S(161, 154), S(180, 157), S(199, 134), S(185, 128), S(163, 112), S(89, 101), \
   S(150, 113), S(185, 103), S(165, 147), S(176, 143), S(158, 142), S(148, 132), S(147, 114), S(114, 117), \
   S(133, 86), S(144, 113), S(144, 117), S(153, 146), S(189, 123), S(151, 107), S(152, 84), S(113, 91), \
   S(81, 91), S(173, 105), S(113, 112), S(131, 122), S(132, 112), S(138, 95), S(99, 92), S(70, 108), \
   S(24, 88), S(117, 92), S(95, 119), S(111, 113), S(107, 97), S(131, 84), S(111, 88), S(85, 104), \
}, { \
   S(-9, 125), S(28, 140), S(69, 168), S(130, 140), S(176, 150), S(9, 165), S(64, 115), S(27, 11), \
   S(50, 160), S(96, 182), S(179, 145), S(168, 177), S(176, 165), S(213, 139), S(163, 139), S(162, 108), \
   S(110, 143), S(189, 150), S(191, 186), S(207, 185), S(225, 178), S(296, 174), S(210, 148), S(184, 140), \
   S(166, 158), S(180, 175), S(176, 201), S(230, 199), S(183, 216), S(229, 203), S(171, 198), S(205, 162), \
   S(156, 162), S(166, 159), S(183, 190), S(196, 197), S(204, 198), S(194, 198), S(220, 172), S(176, 163), \
   S(148, 142), S(156, 161), S(180, 158), S(181, 175), S(201, 185), S(189, 156), S(193, 150), S(162, 165), \
   S(137, 124), S(142, 142), S(159, 145), S(187, 147), S(185, 161), S(185, 145), S(189, 132), S(174, 134), \
   S(59, 144), S(158, 122), S(153, 132), S(156, 151), S(178, 148), S(175, 144), S(163, 137), S(167, 92), \
}, }

#define BISHOP_PST { { \
   S(158, 137), S(131, 122), S(16, 145), S(-68, 136), S(-51, 162), S(1, 137), S(45, 157), S(116, 138), \
   S(150, 113), S(162, 118), S(149, 120), S(140, 85), S(198, 123), S(113, 153), S(83, 156), S(24, 163), \
   S(205, 110), S(251, 104), S(182, 152), S(206, 130), S(157, 140), S(193, 114), S(131, 153), S(164, 141), \
   S(155, 115), S(142, 142), S(164, 145), S(218, 142), S(151, 157), S(167, 142), S(192, 125), S(104, 154), \
   S(142, 123), S(136, 138), S(132, 146), S(171, 144), S(198, 135), S(174, 130), S(129, 137), S(128, 151), \
   S(141, 136), S(145, 133), S(160, 141), S(158, 146), S(186, 142), S(193, 131), S(182, 151), S(154, 143), \
   S(160, 112), S(153, 136), S(191, 118), S(161, 136), S(171, 128), S(206, 110), S(214, 106), S(123, 154), \
   S(66, 141), S(72, 171), S(157, 145), S(159, 146), S(188, 127), S(166, 128), S(174, 127), S(155, 122), \
}, { \
   S(158, 188), S(139, 180), S(81, 195), S(42, 206), S(110, 184), S(57, 199), S(200, 170), S(174, 157), \
   S(142, 197), S(160, 198), S(136, 189), S(106, 204), S(167, 183), S(179, 179), S(156, 184), S(111, 175), \
   S(166, 192), S(198, 188), S(196, 186), S(184, 184), S(200, 185), S(227, 199), S(211, 188), S(197, 186), \
   S(161, 191), S(183, 193), S(177, 207), S(216, 208), S(195, 208), S(203, 201), S(180, 187), S(167, 197), \
   S(171, 187), S(179, 195), S(191, 200), S(212, 209), S(212, 197), S(191, 195), S(187, 190), S(184, 175), \
   S(184, 179), S(202, 190), S(201, 198), S(202, 194), S(209, 203), S(215, 190), S(203, 180), S(197, 178), \
   S(195, 176), S(211, 160), S(210, 173), S(202, 183), S(209, 184), S(224, 176), S(234, 168), S(208, 162), \
   S(181, 167), S(217, 173), S(196, 188), S(184, 184), S(205, 181), S(188, 195), S(206, 179), S(201, 163), \
}, }

#define ROOK_PST { { \
   S(221, 310), S(144, 317), S(216, 302), S(135, 334), S(130, 339), S(128, 345), S(175, 323), S(99, 335), \
   S(261, 286), S(287, 285), S(215, 293), S(202, 304), S(200, 298), S(146, 329), S(106, 330), S(101, 330), \
   S(237, 292), S(257, 291), S(241, 282), S(252, 287), S(184, 305), S(160, 319), S(224, 294), S(87, 313), \
   S(186, 297), S(194, 303), S(195, 311), S(181, 311), S(199, 302), S(226, 311), S(109, 324), S(124, 313), \
   S(129, 303), S(132, 318), S(130, 321), S(165, 314), S(194, 298), S(167, 319), S(158, 299), S(150, 289), \
   S(156, 288), S(141, 302), S(184, 282), S(195, 267), S(135, 305), S(173, 302), S(133, 302), S(134, 283), \
   S(159, 282), S(152, 298), S(196, 274), S(174, 287), S(182, 291), S(182, 302), S(114, 303), S(132, 289), \
   S(184, 278), S(198, 282), S(183, 289), S(185, 290), S(196, 280), S(186, 298), S(132, 307), S(155, 290), \
}, { \
   S(269, 403), S(293, 398), S(224, 430), S(283, 402), S(268, 404), S(239, 423), S(282, 405), S(282, 399), \
   S(251, 410), S(248, 417), S(279, 411), S(304, 401), S(298, 391), S(334, 391), S(187, 440), S(242, 406), \
   S(245, 401), S(276, 404), S(268, 407), S(282, 403), S(300, 381), S(352, 375), S(320, 400), S(279, 385), \
   S(238, 401), S(282, 388), S(271, 406), S(277, 392), S(275, 384), S(283, 394), S(266, 389), S(255, 386), \
   S(240, 394), S(248, 397), S(257, 403), S(264, 394), S(287, 372), S(258, 389), S(269, 392), S(246, 381), \
   S(248, 380), S(256, 390), S(260, 385), S(251, 390), S(265, 383), S(289, 374), S(286, 378), S(259, 361), \
   S(237, 381), S(260, 377), S(259, 384), S(267, 387), S(277, 371), S(289, 373), S(285, 367), S(211, 378), \
   S(268, 381), S(269, 380), S(271, 386), S(282, 377), S(286, 372), S(290, 378), S(248, 383), S(273, 345), \
}, }

#define QUEEN_PST { { \
   S(455, 567), S(524, 499), S(761, 378), S(520, 463), S(645, 415), S(500, 501), S(494, 451), S(395, 555), \
   S(615, 435), S(499, 492), S(641, 412), S(490, 519), S(421, 528), S(417, 522), S(414, 502), S(421, 504), \
   S(570, 446), S(538, 495), S(617, 479), S(519, 504), S(483, 529), S(471, 510), S(421, 513), S(417, 520), \
   S(497, 518), S(487, 502), S(403, 551), S(470, 540), S(443, 494), S(458, 515), S(387, 544), S(456, 539), \
   S(494, 514), S(450, 551), S(443, 570), S(446, 547), S(430, 503), S(433, 576), S(415, 539), S(407, 547), \
   S(523, 456), S(473, 456), S(469, 513), S(475, 454), S(456, 502), S(499, 463), S(442, 521), S(424, 521), \
   S(442, 496), S(457, 439), S(496, 442), S(479, 473), S(494, 476), S(519, 465), S(420, 510), S(433, 449), \
   S(415, 490), S(436, 435), S(444, 477), S(488, 418), S(497, 441), S(456, 449), S(380, 513), S(380, 542), \
}, { \
   S(546, 686), S(552, 701), S(513, 760), S(593, 701), S(671, 639), S(573, 751), S(684, 677), S(619, 750), \
   S(547, 692), S(529, 702), S(559, 743), S(548, 768), S(488, 825), S(656, 695), S(593, 766), S(657, 733), \
   S(590, 671), S(584, 670), S(573, 702), S(569, 750), S(627, 706), S(660, 751), S(663, 704), S(619, 756), \
   S(556, 722), S(575, 704), S(576, 708), S(561, 739), S(575, 756), S(597, 764), S(589, 799), S(594, 750), \
   S(591, 673), S(562, 709), S(581, 711), S(579, 733), S(589, 718), S(580, 750), S(603, 744), S(596, 758), \
   S(578, 694), S(601, 657), S(594, 698), S(601, 678), S(601, 702), S(607, 714), S(611, 712), S(598, 736), \
   S(587, 656), S(598, 656), S(613, 651), S(624, 641), S(626, 648), S(621, 669), S(609, 632), S(609, 674), \
   S(604, 654), S(587, 651), S(603, 660), S(624, 629), S(606, 650), S(578, 682), S(576, 658), S(579, 626), \
}, }

#define PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(66, 211), S(1, 193), S(46, 191), S(137, 187), S(34, 262), S(48, 231), S(21, 270), S(56, 268), \
   S(65, 156), S(169, 114), S(193, 124), S(189, 144), S(45, 177), S(167, 127), S(96, 168), S(111, 164), \
   S(52, 136), S(59, 130), S(104, 124), S(111, 126), S(108, 134), S(110, 128), S(147, 123), S(149, 131), \
   S(32, 130), S(43, 133), S(94, 121), S(118, 117), S(118, 116), S(112, 116), S(114, 115), S(115, 121), \
   S(22, 127), S(46, 124), S(83, 122), S(71, 130), S(108, 119), S(116, 118), S(130, 98), S(134, 104), \
   S(28, 135), S(53, 128), S(92, 122), S(93, 123), S(103, 125), S(142, 113), S(141, 101), S(123, 109), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(103, 258), S(90, 255), S(77, 247), S(114, 205), S(74, 210), S(67, 181), S(-3, 215), S(-13, 243), \
   S(81, 182), S(87, 169), S(98, 163), S(122, 143), S(155, 142), S(162, 138), S(160, 156), S(138, 159), \
   S(76, 159), S(98, 136), S(102, 132), S(120, 103), S(121, 125), S(124, 118), S(95, 128), S(96, 131), \
   S(66, 144), S(88, 127), S(101, 123), S(128, 112), S(122, 118), S(118, 111), S(92, 114), S(90, 117), \
   S(70, 131), S(91, 116), S(100, 118), S(107, 125), S(113, 135), S(115, 119), S(120, 104), S(104, 110), \
   S(71, 136), S(100, 114), S(87, 134), S(108, 126), S(105, 149), S(144, 121), S(138, 104), S(103, 104), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define KING_PST { { \
   S(-83, -84), S(48, -20), S(61, -65), S(-170, 3), S(75, 29), S(41, 57), S(321, -5), S(347, -47), \
   S(188, -82), S(178, 9), S(216, 0), S(149, 5), S(266, 35), S(257, 53), S(302, 27), S(329, -16), \
   S(-26, 19), S(29, 23), S(85, 42), S(39, 43), S(280, 58), S(343, 52), S(415, 28), S(258, 12), \
   S(-82, -9), S(0, 30), S(3, 37), S(-112, 60), S(269, 56), S(245, 54), S(384, 26), S(277, 14), \
   S(-173, 6), S(-29, -1), S(-11, 30), S(-127, 57), S(205, 57), S(266, 38), S(287, 12), S(182, 0), \
   S(-43, -29), S(-3, -5), S(-63, 23), S(-35, 30), S(227, 45), S(260, 23), S(282, 0), S(282, -14), \
   S(11, -38), S(38, -27), S(4, -2), S(-74, 23), S(265, 29), S(256, 10), S(304, -17), S(314, -44), \
   S(33, -89), S(58, -58), S(5, -37), S(-80, 0), S(277, -14), S(245, -11), S(321, -52), S(301, -90), \
}, { \
   S(-166, -135), S(-8, -107), S(-21, -59), S(-297, 0), S(-35, 5), S(70, -13), S(185, -30), S(-31, -33), \
   S(-250, 2), S(-172, 9), S(-289, 27), S(-258, 35), S(58, 36), S(62, 39), S(191, -2), S(-177, 48), \
   S(-307, 16), S(-176, 17), S(-158, 16), S(-304, 45), S(83, 37), S(300, 28), S(251, 29), S(34, 4), \
   S(-237, 0), S(-221, 20), S(-272, 39), S(-322, 57), S(-76, 64), S(-13, 49), S(-14, 30), S(-166, 19), \
   S(-427, 15), S(-241, -2), S(-287, 28), S(-413, 63), S(-134, 82), S(-65, 47), S(-62, 21), S(-131, 8), \
   S(-307, -21), S(-302, 1), S(-325, 21), S(-412, 53), S(-57, 55), S(-54, 40), S(-13, 14), S(-58, -7), \
   S(-209, -70), S(-254, -23), S(-314, 11), S(-366, 31), S(-66, 42), S(-33, 29), S(17, 0), S(15, -29), \
   S(-252, -118), S(-213, -86), S(-237, -50), S(-388, 6), S(-13, -14), S(-55, 5), S(34, -40), S(23, -81), \
}, }

#endif