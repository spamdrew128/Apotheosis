#ifndef __EVAL_CONSTANTS_H__
#define __EVAL_CONSTANTS_H__

#include <stdint.h>

#include "board_constants.h"
#include "board_info.h"

typedef uint8_t Phase_t;
typedef uint8_t Bucket_t;
enum {
  mg_phase,
  eg_phase,
  NUM_PHASES,
  PHASE_MAX = 24,

  KNIGHT_PHASE_VALUE = 1,
  BISHOP_PHASE_VALUE = 1,
  ROOK_PHASE_VALUE = 2,
  QUEEN_PHASE_VALUE = 4,
  PAWN_PHASE_VALUE = 0,
  KING_PHASE_VALUE = 0,

  QS_PST_MASK = C64(0x0F0F0F0F0F0F0F0F),
  KS_PST_MASK = C64(0xF0F0F0F0F0F0F0F0),
  NUM_PST_BUCKETS = 2,
};

// used for eval calcuations. Contains both EG and MG score packed into 1 value.
typedef int32_t Score_t;
#define S(mg, eg) \
	((Score_t)((uint32_t)eg << 16) + mg)

/*

 ██████╗ ██████╗ ███╗   ██╗███████╗████████╗ █████╗ ███╗   ██╗████████╗███████╗
██╔════╝██╔═══██╗████╗  ██║██╔════╝╚══██╔══╝██╔══██╗████╗  ██║╚══██╔══╝██╔════╝
██║     ██║   ██║██╔██╗ ██║███████╗   ██║   ███████║██╔██╗ ██║   ██║   ███████╗
██║     ██║   ██║██║╚██╗██║╚════██║   ██║   ██╔══██║██║╚██╗██║   ██║   ╚════██║
╚██████╗╚██████╔╝██║ ╚████║███████║   ██║   ██║  ██║██║ ╚████║   ██║   ███████║
 ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝

*/                                                                        

#define BISHOP_PAIR_BONUS \
   S(37, 66)

#define PASSED_PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(16, 340), S(31, 281), S(9, 296), S(10, 312), S(38, 355), S(-5, 369), S(-49, 383), S(22, 375), \
   S(-28, 187), S(-39, 181), S(-6, 122), S(-107, 116), S(-3, 124), S(-18, 221), S(-75, 265), S(-84, 309), \
   S(-15, 86), S(10, 71), S(41, 51), S(33, 41), S(-21, 80), S(-61, 112), S(-75, 152), S(-122, 189), \
   S(10, 49), S(0, 44), S(0, 26), S(2, 16), S(-54, 42), S(-71, 57), S(-26, 80), S(-68, 96), \
   S(61, 7), S(5, 23), S(50, 3), S(1, -3), S(-47, 17), S(-32, 22), S(-60, 43), S(-14, 32), \
   S(14, 3), S(81, 16), S(90, 7), S(-15, -6), S(-30, 8), S(-33, 11), S(-43, 31), S(-34, 28), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(72, 369), S(49, 356), S(18, 363), S(63, 322), S(70, 306), S(29, 288), S(3, 314), S(-21, 345), \
   S(40, 248), S(3, 266), S(3, 210), S(28, 153), S(4, 97), S(53, 111), S(-16, 112), S(-24, 165), \
   S(12, 135), S(3, 130), S(9, 97), S(6, 81), S(16, 56), S(60, 43), S(17, 69), S(23, 70), \
   S(6, 73), S(-23, 75), S(-37, 62), S(-13, 38), S(-13, 36), S(-21, 41), S(11, 52), S(38, 39), \
   S(1, 27), S(-14, 36), S(-35, 30), S(-30, 21), S(4, 6), S(5, 12), S(30, 32), S(51, 8), \
   S(-2, 21), S(-1, 28), S(-2, 10), S(-28, 17), S(26, 5), S(25, 5), S(59, 27), S(21, 20), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define BLOCKED_PASSERS { \
   S(146, -430), S(23, -134), S(0, -51), S(-2, -19), S(0, 0), S(-11, -2), S(0, 0), S(0, 0), \
}

#define ROOK_OPEN_FILE { \
   S(41, -3), S(54, -9), S(47, -7), S(51, -5), S(57, -6), S(82, -20), S(130, -27), S(127, -22), \
}

#define ROOK_SEMI_OPEN_FILE { \
   S(-12, 53), S(12, 22), S(17, 10), S(27, 1), S(25, -7), S(29, -11), S(54, -12), S(25, 31), \
}

#define QUEEN_OPEN_FILE { \
   S(-5, 3), S(-5, 18), S(-22, 21), S(-19, 28), S(-4, 29), S(31, -14), S(56, -43), S(96, -65), \
}

#define QUEEN_SEMI_OPEN_FILE { \
   S(-3, 5), S(13, 2), S(0, 10), S(-10, 49), S(8, 19), S(31, -43), S(46, -71), S(49, -46), \
}

#define KING_OPEN_FILE { \
   S(-85, -14), S(-123, 0), S(-94, -2), S(-51, -10), S(-68, -2), S(-93, 8), S(-111, 16), S(-56, 2), \
}

#define KING_SEMI_OPEN_FILE { \
   S(-35, 38), S(-61, 19), S(-26, -3), S(-21, -5), S(-25, -1), S(-33, 2), S(-45, 19), S(-47, 36), \
}

#define ISOLATED_PAWNS { \
   S(-20, -19), S(-21, -15), S(-23, -17), S(-38, -11), S(-32, -20), S(-11, -17), S(-15, -18), S(-34, -14), \
}

#define KNIGHT_MOBILITY { \
   S(274, 142), S(299, 201), S(313, 230), S(317, 247), S(331, 249), S(339, 261), S(348, 260), S(356, 257), S(382, 240), \
}

#define BISHOP_MOBILITY { \
   S(268, 157), S(283, 191), S(301, 201), S(312, 216), S(321, 233), S(325, 245), S(329, 252), S(333, 255), S(331, 264), S(340, 260), S(353, 260), S(381, 250), S(350, 285), S(422, 242), \
}

#define ROOK_MOBILITY { \
   S(341, 315), S(356, 342), S(360, 353), S(366, 368), S(366, 380), S(373, 388), S(375, 395), S(383, 399), S(394, 404), S(400, 409), S(402, 415), S(412, 419), S(414, 426), S(426, 420), S(433, 417), \
}

#define QUEEN_MOBILITY { \
   S(784, 501), S(782, 599), S(780, 551), S(782, 571), S(788, 572), S(788, 600), S(790, 630), S(793, 663), S(797, 677), S(801, 691), S(802, 702), S(807, 715), S(808, 724), S(810, 739), S(819, 747), S(819, 759), S(819, 767), S(823, 772), S(848, 763), S(861, 764), S(887, 762), S(906, 764), S(957, 732), S(953, 746), S(971, 729), S(1093, 673), S(809, 859), S(775, 839), \
}

#define PAWN_THREAT_ON_KNIGHT S(50, 0)
#define PAWN_THREAT_ON_BISHOP S(54, 29)
#define PAWN_THREAT_ON_ROOK S(117, -55)
#define PAWN_THREAT_ON_QUEEN S(53, -34)

#define KNIGHT_THREAT_ON_BISHOP S(26, 20)
#define KNIGHT_THREAT_ON_ROOK S(68, -23)
#define KNIGHT_THREAT_ON_QUEEN S(31, -63)

#define BISHOP_THREAT_ON_KNIGHT S(18, 25)
#define BISHOP_THREAT_ON_ROOK S(42, -5)
#define BISHOP_THREAT_ON_QUEEN S(30, 11)

#define ROOK_THREAT_ON_QUEEN S(55, -49)

/*
Average PST values for MG, EG:
Knight Values: 162 118
Bishop Values: 182 155
Rook Values: 245 327
Queen Values: 592 580
Pawn Values: 104 159
*/

#define KNIGHT_PST { { \
   S(-68, 11), S(175, 6), S(-3, 66), S(166, 56), S(242, 46), S(143, 59), S(101, 60), S(73, 20), \
   S(146, 46), S(224, 56), S(143, 82), S(246, 69), S(197, 91), S(218, 70), S(137, 86), S(23, 101), \
   S(188, 55), S(228, 63), S(215, 92), S(217, 99), S(207, 100), S(209, 89), S(170, 98), S(81, 86), \
   S(176, 96), S(184, 93), S(215, 122), S(210, 115), S(222, 121), S(211, 106), S(187, 94), S(114, 103), \
   S(171, 81), S(220, 86), S(185, 129), S(201, 117), S(170, 131), S(186, 113), S(144, 100), S(106, 121), \
   S(138, 73), S(154, 103), S(154, 109), S(168, 122), S(199, 107), S(172, 96), S(147, 98), S(103, 113), \
   S(71, 75), S(145, 99), S(136, 102), S(153, 116), S(149, 107), S(136, 106), S(108, 105), S(88, 100), \
   S(98, 49), S(125, 84), S(81, 114), S(145, 94), S(104, 99), S(133, 78), S(133, 54), S(35, 97), \
}, { \
   S(-37, 139), S(-41, 176), S(75, 147), S(97, 144), S(186, 129), S(51, 146), S(125, 81), S(54, 39), \
   S(69, 146), S(97, 175), S(173, 149), S(209, 149), S(198, 156), S(213, 123), S(166, 124), S(136, 122), \
   S(103, 154), S(171, 146), S(184, 183), S(228, 169), S(265, 155), S(370, 120), S(242, 141), S(215, 114), \
   S(167, 151), S(196, 162), S(191, 185), S(247, 183), S(216, 189), S(259, 182), S(197, 180), S(235, 145), \
   S(166, 152), S(175, 168), S(193, 182), S(204, 186), S(211, 191), S(211, 183), S(227, 159), S(188, 153), \
   S(156, 143), S(170, 151), S(191, 152), S(191, 173), S(215, 175), S(204, 151), S(207, 149), S(168, 154), \
   S(152, 109), S(166, 123), S(172, 148), S(205, 139), S(207, 146), S(199, 138), S(202, 139), S(181, 131), \
   S(58, 145), S(170, 122), S(150, 133), S(165, 150), S(191, 149), S(177, 146), S(172, 137), S(148, 114), \
}, }

#define BISHOP_PST { { \
   S(42, 143), S(157, 122), S(118, 109), S(85, 107), S(-20, 146), S(35, 135), S(83, 126), S(120, 127), \
   S(191, 95), S(171, 115), S(149, 118), S(155, 114), S(211, 118), S(112, 137), S(107, 151), S(15, 156), \
   S(228, 112), S(343, 81), S(210, 124), S(231, 119), S(203, 132), S(220, 120), S(126, 146), S(128, 139), \
   S(195, 119), S(178, 130), S(223, 130), S(231, 122), S(210, 149), S(196, 136), S(205, 125), S(127, 135), \
   S(160, 123), S(157, 134), S(147, 145), S(197, 141), S(213, 130), S(227, 123), S(172, 124), S(136, 132), \
   S(147, 125), S(164, 132), S(169, 142), S(173, 137), S(213, 133), S(206, 126), S(224, 130), S(176, 141), \
   S(181, 110), S(170, 136), S(169, 116), S(182, 125), S(185, 124), S(218, 122), S(220, 115), S(160, 121), \
   S(57, 142), S(121, 146), S(174, 130), S(140, 143), S(178, 125), S(161, 130), S(151, 130), S(115, 141), \
}, { \
   S(174, 177), S(134, 183), S(92, 192), S(84, 188), S(113, 184), S(130, 179), S(155, 177), S(179, 158), \
   S(130, 203), S(159, 195), S(173, 183), S(153, 180), S(174, 183), S(213, 165), S(164, 186), S(138, 167), \
   S(176, 185), S(194, 194), S(204, 192), S(209, 185), S(249, 177), S(288, 187), S(257, 178), S(229, 172), \
   S(172, 190), S(208, 187), S(202, 201), S(264, 191), S(233, 204), S(232, 199), S(210, 188), S(197, 185), \
   S(191, 177), S(200, 188), S(215, 200), S(237, 203), S(241, 193), S(206, 196), S(215, 177), S(210, 170), \
   S(206, 176), S(224, 188), S(219, 195), S(223, 194), S(219, 201), S(233, 186), S(214, 183), S(207, 178), \
   S(227, 161), S(232, 156), S(225, 168), S(213, 178), S(223, 179), S(237, 177), S(252, 166), S(218, 158), \
   S(193, 164), S(224, 172), S(206, 181), S(193, 184), S(209, 182), S(199, 186), S(214, 168), S(204, 152), \
}, }

#define ROOK_PST { { \
   S(224, 289), S(181, 302), S(200, 297), S(201, 299), S(207, 300), S(207, 303), S(178, 299), S(194, 287), \
   S(283, 264), S(286, 267), S(287, 261), S(264, 270), S(216, 281), S(222, 292), S(148, 299), S(153, 295), \
   S(277, 268), S(302, 260), S(322, 266), S(287, 256), S(247, 269), S(186, 301), S(193, 282), S(142, 282), \
   S(229, 277), S(195, 285), S(197, 287), S(240, 284), S(197, 295), S(229, 293), S(123, 300), S(161, 283), \
   S(153, 288), S(189, 284), S(189, 285), S(188, 285), S(194, 284), S(194, 294), S(136, 290), S(128, 291), \
   S(147, 279), S(189, 273), S(206, 272), S(212, 261), S(176, 278), S(198, 283), S(138, 290), S(160, 263), \
   S(171, 257), S(162, 277), S(201, 259), S(195, 270), S(170, 280), S(165, 294), S(123, 273), S(132, 270), \
   S(195, 263), S(215, 264), S(209, 268), S(205, 278), S(207, 275), S(202, 284), S(131, 300), S(174, 271), \
}, { \
   S(312, 371), S(302, 383), S(255, 401), S(309, 380), S(306, 386), S(279, 398), S(329, 384), S(340, 371), \
   S(287, 387), S(276, 401), S(311, 392), S(353, 376), S(353, 371), S(350, 377), S(235, 410), S(290, 380), \
   S(266, 382), S(292, 387), S(296, 389), S(328, 376), S(338, 365), S(378, 360), S(357, 365), S(328, 361), \
   S(251, 387), S(275, 384), S(283, 398), S(296, 380), S(293, 380), S(328, 376), S(310, 378), S(281, 373), \
   S(257, 373), S(246, 390), S(273, 390), S(274, 382), S(293, 365), S(282, 376), S(289, 374), S(277, 356), \
   S(259, 363), S(257, 377), S(269, 378), S(274, 373), S(290, 365), S(301, 364), S(305, 358), S(275, 348), \
   S(254, 362), S(267, 362), S(266, 376), S(280, 369), S(293, 358), S(308, 359), S(319, 346), S(226, 355), \
   S(282, 366), S(280, 365), S(285, 375), S(295, 368), S(300, 362), S(305, 367), S(262, 372), S(302, 324), \
}, }

#define QUEEN_PST { { \
   S(564, 471), S(566, 478), S(704, 411), S(502, 478), S(599, 462), S(505, 508), S(610, 421), S(420, 509), \
   S(714, 385), S(614, 429), S(661, 443), S(493, 551), S(573, 489), S(486, 502), S(392, 548), S(475, 472), \
   S(655, 399), S(674, 434), S(750, 438), S(645, 435), S(527, 508), S(463, 526), S(465, 515), S(429, 512), \
   S(571, 493), S(571, 465), S(531, 490), S(520, 503), S(517, 463), S(500, 478), S(457, 512), S(486, 473), \
   S(539, 504), S(509, 513), S(496, 575), S(534, 483), S(508, 444), S(481, 536), S(466, 519), S(440, 496), \
   S(540, 464), S(526, 471), S(514, 473), S(512, 441), S(521, 467), S(546, 446), S(487, 528), S(471, 458), \
   S(522, 442), S(502, 455), S(552, 416), S(517, 460), S(548, 420), S(559, 432), S(436, 522), S(469, 450), \
   S(454, 493), S(510, 447), S(514, 447), S(540, 408), S(535, 401), S(501, 468), S(461, 491), S(439, 469), \
}, { \
   S(614, 663), S(625, 683), S(639, 685), S(660, 691), S(702, 676), S(744, 687), S(763, 694), S(682, 744), \
   S(609, 675), S(586, 682), S(606, 719), S(611, 727), S(584, 797), S(718, 729), S(641, 780), S(672, 769), \
   S(622, 657), S(638, 648), S(631, 679), S(657, 703), S(710, 690), S(765, 728), S(748, 718), S(721, 757), \
   S(603, 687), S(627, 672), S(627, 687), S(644, 686), S(632, 750), S(656, 782), S(653, 810), S(655, 769), \
   S(650, 644), S(619, 685), S(652, 672), S(640, 704), S(649, 700), S(640, 736), S(653, 759), S(653, 766), \
   S(641, 645), S(664, 625), S(647, 674), S(660, 654), S(666, 657), S(661, 698), S(668, 718), S(655, 716), \
   S(643, 629), S(661, 626), S(681, 612), S(685, 620), S(687, 613), S(681, 634), S(677, 636), S(646, 699), \
   S(646, 635), S(644, 628), S(665, 613), S(685, 595), S(668, 604), S(626, 658), S(618, 678), S(640, 625), \
}, }

#define PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(16, 340), S(31, 281), S(9, 296), S(10, 312), S(38, 355), S(-5, 369), S(-49, 383), S(22, 375), \
   S(125, 141), S(222, 95), S(198, 131), S(276, 138), S(124, 184), S(134, 135), S(87, 177), S(125, 150), \
   S(62, 136), S(98, 113), S(123, 112), S(140, 109), S(132, 121), S(134, 121), S(119, 134), S(132, 129), \
   S(46, 128), S(57, 118), S(112, 109), S(136, 109), S(130, 115), S(142, 108), S(102, 120), S(123, 115), \
   S(39, 122), S(61, 114), S(96, 116), S(101, 119), S(129, 116), S(137, 109), S(134, 102), S(133, 103), \
   S(43, 131), S(69, 116), S(110, 115), S(121, 112), S(126, 119), S(169, 106), S(148, 103), S(122, 106), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(72, 369), S(49, 356), S(18, 363), S(63, 322), S(70, 306), S(29, 288), S(3, 314), S(-21, 345), \
   S(81, 178), S(113, 152), S(128, 146), S(145, 143), S(201, 156), S(203, 128), S(187, 156), S(138, 150), \
   S(83, 156), S(106, 134), S(109, 130), S(132, 106), S(130, 117), S(134, 110), S(100, 126), S(106, 122), \
   S(71, 140), S(93, 124), S(116, 114), S(138, 109), S(132, 114), S(140, 102), S(96, 113), S(100, 111), \
   S(78, 126), S(99, 110), S(111, 114), S(115, 118), S(123, 128), S(131, 110), S(132, 101), S(114, 103), \
   S(76, 132), S(111, 109), S(97, 130), S(118, 127), S(111, 140), S(160, 115), S(149, 104), S(115, 99), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define KING_PST { { \
   S(37, -99), S(118, -32), S(76, -78), S(227, -86), S(234, -31), S(329, -11), S(326, -43), S(229, -55), \
   S(56, -40), S(217, 20), S(154, 11), S(27, 13), S(259, 38), S(337, 28), S(361, 12), S(399, -49), \
   S(112, -17), S(133, 10), S(268, 26), S(2, 36), S(292, 42), S(386, 32), S(375, 13), S(318, -2), \
   S(-65, -21), S(50, 17), S(30, 31), S(-85, 60), S(237, 60), S(217, 61), S(293, 44), S(276, 10), \
   S(-107, -10), S(-67, 13), S(-98, 46), S(-167, 66), S(147, 77), S(247, 47), S(270, 18), S(189, 2), \
   S(-124, -21), S(-29, -1), S(-127, 41), S(-153, 53), S(208, 54), S(200, 39), S(273, 7), S(282, -20), \
   S(16, -45), S(0, -14), S(-49, 7), S(-136, 28), S(224, 35), S(253, 13), S(298, -14), S(295, -37), \
   S(8, -95), S(55, -74), S(-19, -38), S(-127, -3), S(276, -21), S(237, -15), S(338, -62), S(314, -89), \
}, { \
   S(-60, -160), S(-141, -68), S(-125, -57), S(-201, -37), S(-21, -20), S(57, -22), S(321, -88), S(80, -59), \
   S(-78, -64), S(-167, 0), S(-148, -1), S(-274, 21), S(82, 14), S(100, 16), S(132, 19), S(-54, 19), \
   S(-210, -9), S(-159, 10), S(-219, 20), S(-256, 41), S(67, 38), S(277, 28), S(198, 42), S(40, 6), \
   S(-261, -5), S(-282, 32), S(-297, 40), S(-341, 61), S(-35, 56), S(25, 46), S(-72, 47), S(-198, 22), \
   S(-363, -5), S(-247, -1), S(-347, 43), S(-426, 64), S(-111, 73), S(-116, 58), S(-96, 30), S(-165, 6), \
   S(-306, -26), S(-303, 0), S(-362, 31), S(-430, 56), S(-112, 65), S(-81, 44), S(-35, 14), S(-62, -13), \
   S(-214, -73), S(-272, -22), S(-352, 16), S(-382, 28), S(-99, 46), S(-58, 29), S(11, -3), S(15, -34), \
   S(-236, -111), S(-191, -93), S(-227, -57), S(-376, -6), S(-14, -17), S(-61, -3), S(46, -50), S(31, -91), \
}, }

#endif