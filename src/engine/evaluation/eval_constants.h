#ifndef __EVAL_CONSTANTS_H__
#define __EVAL_CONSTANTS_H__

#include <stdint.h>

#include "board_constants.h"
#include "board_info.h"

typedef uint8_t Phase_t;
typedef uint8_t Bucket_t;
enum {
  mg_phase,
  eg_phase,
  NUM_PHASES,
  PHASE_MAX = 24,

  KNIGHT_PHASE_VALUE = 1,
  BISHOP_PHASE_VALUE = 1,
  ROOK_PHASE_VALUE = 2,
  QUEEN_PHASE_VALUE = 4,
  PAWN_PHASE_VALUE = 0,
  KING_PHASE_VALUE = 0,

  QS_PST_MASK = C64(0x0F0F0F0F0F0F0F0F),
  KS_PST_MASK = C64(0xF0F0F0F0F0F0F0F0),
  NUM_PST_BUCKETS = 2,
};

// used for eval calcuations. Contains both EG and MG score packed into 1 value.
typedef int32_t Score_t;
#define S(mg, eg) \
	((Score_t)((uint32_t)eg << 16) + mg)

/*

 ██████╗ ██████╗ ███╗   ██╗███████╗████████╗ █████╗ ███╗   ██╗████████╗███████╗
██╔════╝██╔═══██╗████╗  ██║██╔════╝╚══██╔══╝██╔══██╗████╗  ██║╚══██╔══╝██╔════╝
██║     ██║   ██║██╔██╗ ██║███████╗   ██║   ███████║██╔██╗ ██║   ██║   ███████╗
██║     ██║   ██║██║╚██╗██║╚════██║   ██║   ██╔══██║██║╚██╗██║   ██║   ╚════██║
╚██████╗╚██████╔╝██║ ╚████║███████║   ██║   ██║  ██║██║ ╚████║   ██║   ███████║
 ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝

*/                                                                        

#define BISHOP_PAIR_BONUS \
   S(28, 71)

#define PASSED_PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(74, 210), S(1, 195), S(46, 194), S(138, 190), S(37, 262), S(47, 232), S(20, 271), S(56, 269), \
   S(60, 161), S(-60, 190), S(-28, 141), S(-36, 103), S(52, 138), S(-84, 236), S(-72, 274), S(-74, 291), \
   S(-1, 88), S(-10, 74), S(91, 39), S(-4, 51), S(0, 68), S(-61, 113), S(-116, 162), S(-113, 186), \
   S(-13, 54), S(-44, 51), S(24, 28), S(-14, 27), S(-78, 57), S(-71, 64), S(-47, 88), S(-57, 90), \
   S(82, 9), S(-27, 33), S(-12, 15), S(-3, 19), S(-57, 25), S(-11, 9), S(-27, 35), S(-29, 43), \
   S(8, 9), S(86, 21), S(95, -2), S(-26, 12), S(-17, 14), S(-47, 21), S(-38, 23), S(-40, 31), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(103, 258), S(90, 255), S(77, 247), S(114, 206), S(74, 212), S(65, 183), S(0, 216), S(-12, 244), \
   S(53, 230), S(19, 238), S(32, 201), S(34, 159), S(3, 129), S(64, 104), S(-49, 123), S(-38, 148), \
   S(29, 129), S(-3, 127), S(10, 100), S(11, 86), S(11, 60), S(61, 42), S(-8, 87), S(18, 73), \
   S(6, 72), S(-22, 73), S(-38, 59), S(-18, 46), S(-28, 43), S(-7, 40), S(6, 56), S(28, 48), \
   S(2, 21), S(-12, 38), S(-30, 30), S(-29, 27), S(3, 8), S(36, 9), S(40, 34), S(57, 11), \
   S(-6, 20), S(8, 26), S(7, 13), S(-22, 26), S(2, 8), S(14, 10), S(63, 25), S(8, 28), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define BLOCKED_PASSERS { \
   S(63, -200), S(6, -119), S(-8, -47), S(1, -25), S(-18, 5), S(4, -14), S(0, 0), S(0, 0), \
}

#define ROOK_OPEN_FILE { \
   S(31, 0), S(36, 0), S(36, 1), S(40, 1), S(42, 5), S(37, -4), S(108, -21), S(100, -11), \
}

#define ROOK_SEMI_OPEN_FILE { \
   S(-11, 43), S(4, 13), S(12, 7), S(23, -2), S(19, -6), S(9, -6), S(38, -10), S(19, 23), \
}

#define QUEEN_OPEN_FILE { \
   S(-13, 12), S(-7, 27), S(-18, 22), S(-19, 34), S(-13, 42), S(-9, 13), S(22, 16), S(39, -14), \
}

#define QUEEN_SEMI_OPEN_FILE { \
   S(-7, 2), S(5, 0), S(5, 0), S(-4, 30), S(-1, 30), S(14, -38), S(49, -51), S(27, -19), \
}

#define KING_OPEN_FILE { \
   S(-69, -15), S(-122, 6), S(-100, 3), S(-41, -13), S(-70, -5), S(-101, 7), S(-107, 17), S(-69, 10), \
}

#define KING_SEMI_OPEN_FILE { \
   S(-32, 30), S(-61, 19), S(-19, -3), S(7, -10), S(-16, 1), S(-31, 2), S(-41, 19), S(-39, 31), \
}

#define ISOLATED_PAWNS { \
   S(-15, -17), S(-19, -16), S(-18, -21), S(-32, -15), S(-31, -22), S(-9, -20), S(-16, -15), S(-28, -19), \
}

#define KNIGHT_MOBILITY { \
   S(132, 56), S(151, 122), S(162, 144), S(168, 155), S(182, 160), S(189, 171), S(200, 168), S(204, 168), S(228, 146), \
}

#define BISHOP_MOBILITY { \
   S(110, 79), S(125, 101), S(140, 118), S(148, 137), S(156, 149), S(160, 159), S(166, 167), S(169, 168), S(167, 175), S(175, 171), S(191, 166), S(220, 161), S(142, 202), S(224, 153), \
}

#define ROOK_MOBILITY { \
   S(151, 184), S(165, 211), S(171, 228), S(175, 241), S(175, 253), S(182, 259), S(185, 266), S(191, 269), S(201, 274), S(207, 278), S(208, 284), S(218, 288), S(214, 296), S(230, 289), S(233, 287), \
}

#define QUEEN_MOBILITY { \
   S(450, 466), S(446, 347), S(444, 327), S(444, 351), S(448, 390), S(451, 408), S(454, 414), S(453, 452), S(455, 463), S(459, 470), S(464, 481), S(465, 495), S(461, 504), S(471, 507), S(472, 519), S(470, 532), S(467, 541), S(482, 529), S(499, 529), S(504, 526), S(495, 544), S(550, 514), S(516, 530), S(623, 476), S(693, 428), S(809, 378), S(572, 547), S(503, 543), \
}

#define KNIGHT_KING_ZONE_ATTACKS { \
   S(175, 174), S(175, 181), S(182, 182), S(209, 162), S(268, 166), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}

#define BISHOP_KING_ZONE_ATTACKS { \
   S(198, 179), S(203, 188), S(207, 183), S(228, 184), S(267, 172), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}

#define ROOK_KING_ZONE_ATTACKS { \
   S(237, 302), S(249, 295), S(253, 288), S(264, 291), S(295, 272), S(326, 273), S(353, 268), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}

#define QUEEN_KING_ZONE_ATTACKS { \
   S(486, 496), S(490, 505), S(489, 518), S(491, 536), S(489, 538), S(508, 547), S(519, 548), S(572, 536), S(613, 522), S(733, 450), S(811, 441), S(0, 0), S(0, 0), S(0, 0), \
}

#define PAWN_KING_ZONE_ATTACKS { \
   S(-36, 16), S(0, -16), S(25, -14), S(82, -20), S(209, -39), S(21, 0), S(63, 89), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}

#define CHECK_BONUS { \
   S(123, 3), S(127, 66), S(202, -10), S(100, 117), S(383, -14), \
}

#define PAWN_THREAT_ON_KNIGHT S(61, 10)
#define PAWN_THREAT_ON_BISHOP S(61, 41)
#define PAWN_THREAT_ON_ROOK S(118, -38)
#define PAWN_THREAT_ON_QUEEN S(63, -8)

#define KNIGHT_THREAT_ON_BISHOP S(27, 24)
#define KNIGHT_THREAT_ON_ROOK S(63, -10)
#define KNIGHT_THREAT_ON_QUEEN S(27, -32)

#define BISHOP_THREAT_ON_KNIGHT S(24, 30)
#define BISHOP_THREAT_ON_ROOK S(43, 5)
#define BISHOP_THREAT_ON_QUEEN S(45, 37)

#define ROOK_THREAT_ON_QUEEN S(61, -20)

/*
Average PST values for MG, EG:
Knight Values: 82 65
Bishop Values: 89 92
Rook Values: 124 213
Queen Values: 340 376
Pawn Values: 98 146
*/

#define KNIGHT_PST { { \
   S(-142, -46), S(35, -45), S(-51, 62), S(105, -5), S(134, 16), S(117, -5), S(61, -12), S(19, -3), \
   S(45, 5), S(124, 6), S(138, 19), S(104, 26), S(33, 47), S(93, 41), S(66, 37), S(-31, 54), \
   S(-17, 40), S(123, 24), S(115, 55), S(130, 60), S(89, 66), S(89, 49), S(44, 55), S(65, 26), \
   S(98, 27), S(107, 46), S(107, 78), S(123, 82), S(138, 65), S(122, 65), S(101, 50), S(26, 48), \
   S(85, 46), S(119, 36), S(103, 77), S(114, 72), S(93, 76), S(85, 69), S(80, 57), S(51, 64), \
   S(70, 20), S(79, 47), S(78, 52), S(95, 76), S(129, 58), S(90, 46), S(90, 26), S(50, 36), \
   S(21, 31), S(107, 42), S(51, 49), S(70, 58), S(72, 51), S(76, 36), S(35, 35), S(7, 54), \
   S(-37, 27), S(55, 32), S(35, 56), S(47, 53), S(45, 39), S(67, 26), S(46, 34), S(14, 54), \
}, { \
   S(-76, 70), S(-35, 80), S(3, 104), S(73, 67), S(116, 76), S(-47, 89), S(-2, 41), S(-22, -63), \
   S(-14, 103), S(32, 120), S(116, 80), S(104, 105), S(99, 99), S(139, 72), S(95, 71), S(93, 38), \
   S(43, 86), S(125, 90), S(126, 122), S(143, 114), S(148, 108), S(215, 102), S(146, 70), S(87, 75), \
   S(100, 102), S(114, 115), S(112, 138), S(166, 129), S(128, 138), S(168, 127), S(122, 118), S(144, 88), \
   S(90, 105), S(100, 101), S(116, 130), S(129, 131), S(134, 129), S(125, 128), S(151, 101), S(107, 94), \
   S(82, 85), S(90, 103), S(115, 98), S(117, 110), S(137, 116), S(127, 88), S(124, 82), S(97, 98), \
   S(71, 68), S(75, 85), S(94, 86), S(122, 87), S(121, 98), S(121, 82), S(122, 68), S(108, 71), \
   S(-6, 87), S(92, 65), S(89, 74), S(90, 93), S(112, 89), S(110, 84), S(98, 77), S(103, 31), \
}, }

#define BISHOP_PST { { \
   S(94, 66), S(47, 56), S(-35, 75), S(-146, 72), S(-124, 92), S(-72, 68), S(-28, 88), S(45, 68), \
   S(71, 44), S(75, 54), S(81, 52), S(62, 18), S(119, 56), S(36, 86), S(7, 88), S(-50, 97), \
   S(141, 37), S(168, 38), S(115, 83), S(127, 62), S(91, 69), S(124, 46), S(64, 86), S(94, 74), \
   S(92, 45), S(70, 74), S(93, 77), S(144, 74), S(92, 86), S(100, 74), S(127, 57), S(37, 87), \
   S(68, 54), S(60, 70), S(53, 79), S(96, 76), S(124, 66), S(108, 62), S(64, 69), S(57, 85), \
   S(64, 68), S(69, 64), S(85, 72), S(81, 77), S(110, 73), S(121, 62), S(113, 82), S(88, 77), \
   S(84, 42), S(81, 68), S(119, 51), S(87, 69), S(97, 59), S(130, 41), S(141, 38), S(55, 86), \
   S(-4, 70), S(3, 103), S(83, 80), S(87, 78), S(115, 59), S(91, 60), S(95, 60), S(80, 55), \
}, { \
   S(83, 118), S(61, 109), S(0, 124), S(-34, 135), S(39, 113), S(0, 127), S(135, 99), S(97, 86), \
   S(68, 128), S(83, 129), S(58, 119), S(27, 132), S(83, 112), S(101, 109), S(72, 116), S(31, 103), \
   S(91, 125), S(127, 119), S(124, 115), S(119, 110), S(116, 114), S(161, 126), S(117, 120), S(132, 110), \
   S(87, 124), S(114, 123), S(112, 133), S(155, 133), S(121, 137), S(135, 128), S(102, 114), S(102, 122), \
   S(97, 120), S(110, 124), S(118, 131), S(140, 137), S(132, 126), S(109, 125), S(104, 120), S(104, 104), \
   S(113, 108), S(130, 121), S(127, 127), S(123, 123), S(131, 131), S(137, 119), S(126, 110), S(116, 106), \
   S(123, 105), S(135, 92), S(132, 102), S(124, 112), S(132, 112), S(150, 105), S(158, 100), S(132, 90), \
   S(107, 96), S(136, 102), S(119, 117), S(106, 113), S(130, 112), S(113, 127), S(133, 109), S(126, 92), \
}, }

#define ROOK_PST { { \
   S(146, 173), S(71, 181), S(106, 177), S(48, 201), S(55, 203), S(59, 205), S(104, 183), S(27, 196), \
   S(192, 148), S(211, 150), S(104, 168), S(124, 170), S(132, 160), S(82, 189), S(33, 193), S(26, 192), \
   S(144, 160), S(163, 160), S(126, 157), S(159, 156), S(84, 175), S(78, 183), S(142, 158), S(5, 177), \
   S(79, 169), S(81, 178), S(76, 188), S(69, 186), S(92, 175), S(131, 179), S(8, 194), S(25, 182), \
   S(28, 174), S(26, 191), S(23, 195), S(65, 186), S(95, 168), S(73, 188), S(66, 166), S(58, 156), \
   S(57, 158), S(43, 174), S(80, 155), S(100, 136), S(39, 175), S(83, 168), S(40, 169), S(42, 149), \
   S(64, 151), S(53, 168), S(93, 148), S(77, 157), S(88, 158), S(89, 168), S(23, 169), S(39, 156), \
   S(89, 146), S(101, 152), S(83, 161), S(89, 160), S(102, 148), S(94, 163), S(39, 173), S(61, 156), \
}, { \
   S(185, 262), S(213, 256), S(149, 287), S(204, 260), S(189, 263), S(130, 292), S(198, 266), S(203, 258), \
   S(163, 271), S(163, 278), S(197, 272), S(222, 262), S(218, 251), S(224, 260), S(98, 302), S(159, 266), \
   S(145, 265), S(177, 267), S(165, 273), S(178, 269), S(189, 250), S(232, 246), S(204, 269), S(168, 252), \
   S(135, 265), S(177, 253), S(164, 272), S(163, 261), S(154, 256), S(153, 268), S(143, 261), S(135, 256), \
   S(140, 257), S(147, 261), S(154, 268), S(161, 258), S(184, 238), S(150, 257), S(162, 260), S(142, 247), \
   S(149, 242), S(157, 252), S(160, 247), S(151, 253), S(167, 247), S(187, 241), S(181, 245), S(158, 226), \
   S(139, 243), S(161, 238), S(161, 245), S(168, 250), S(178, 235), S(185, 239), S(182, 234), S(110, 242), \
   S(169, 243), S(170, 241), S(173, 247), S(183, 239), S(186, 236), S(190, 241), S(147, 247), S(172, 209), \
}, }

#define QUEEN_PST { { \
   S(297, 341), S(375, 279), S(561, 172), S(363, 238), S(449, 210), S(321, 293), S(335, 223), S(221, 331), \
   S(449, 214), S(335, 273), S(441, 196), S(318, 294), S(252, 307), S(245, 311), S(232, 294), S(238, 296), \
   S(367, 240), S(293, 309), S(370, 283), S(290, 304), S(301, 306), S(287, 299), S(242, 295), S(235, 300), \
   S(298, 293), S(271, 283), S(184, 334), S(259, 323), S(245, 276), S(278, 299), S(198, 330), S(272, 318), \
   S(302, 285), S(243, 327), S(242, 336), S(251, 315), S(237, 281), S(250, 360), S(232, 326), S(219, 335), \
   S(330, 232), S(285, 227), S(281, 277), S(283, 227), S(268, 279), S(311, 251), S(259, 306), S(241, 306), \
   S(254, 271), S(269, 217), S(307, 221), S(290, 255), S(305, 255), S(332, 253), S(233, 296), S(252, 227), \
   S(225, 277), S(250, 212), S(258, 252), S(299, 209), S(310, 221), S(267, 231), S(195, 292), S(198, 320), \
}, { \
   S(351, 470), S(370, 474), S(335, 528), S(406, 474), S(494, 413), S(380, 528), S(508, 452), S(430, 532), \
   S(352, 477), S(336, 487), S(373, 520), S(357, 542), S(305, 585), S(405, 487), S(415, 535), S(468, 514), \
   S(392, 448), S(386, 448), S(374, 477), S(371, 521), S(408, 478), S(429, 520), S(388, 491), S(407, 526), \
   S(359, 494), S(377, 478), S(383, 476), S(362, 505), S(362, 518), S(385, 512), S(364, 543), S(392, 492), \
   S(394, 450), S(369, 485), S(386, 487), S(379, 508), S(389, 475), S(374, 493), S(397, 484), S(392, 508), \
   S(384, 475), S(403, 442), S(396, 478), S(403, 447), S(402, 464), S(409, 466), S(413, 468), S(399, 488), \
   S(390, 439), S(400, 438), S(415, 425), S(425, 411), S(426, 419), S(425, 435), S(410, 405), S(414, 437), \
   S(406, 434), S(390, 425), S(403, 432), S(425, 402), S(408, 428), S(384, 454), S(382, 432), S(384, 396), \
}, }

#define PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(74, 210), S(1, 195), S(46, 194), S(138, 190), S(37, 262), S(47, 232), S(20, 271), S(56, 269), \
   S(66, 161), S(172, 119), S(198, 127), S(188, 146), S(47, 181), S(163, 130), S(98, 167), S(117, 161), \
   S(51, 139), S(60, 132), S(103, 127), S(111, 127), S(107, 137), S(106, 130), S(148, 122), S(150, 131), \
   S(32, 132), S(44, 133), S(96, 121), S(121, 117), S(118, 117), S(111, 116), S(115, 115), S(118, 120), \
   S(21, 128), S(46, 124), S(84, 121), S(74, 130), S(108, 119), S(116, 118), S(132, 97), S(136, 103), \
   S(28, 136), S(52, 128), S(92, 122), S(93, 124), S(102, 125), S(141, 114), S(143, 101), S(124, 109), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(103, 258), S(90, 255), S(77, 247), S(114, 206), S(74, 212), S(65, 183), S(0, 216), S(-12, 244), \
   S(81, 183), S(87, 169), S(97, 165), S(120, 145), S(157, 147), S(156, 149), S(162, 161), S(133, 170), \
   S(76, 158), S(98, 136), S(102, 133), S(119, 105), S(121, 126), S(118, 123), S(95, 129), S(94, 136), \
   S(66, 144), S(88, 127), S(101, 123), S(129, 111), S(123, 117), S(121, 110), S(93, 113), S(90, 118), \
   S(70, 131), S(91, 116), S(100, 117), S(108, 124), S(115, 134), S(118, 118), S(121, 103), S(104, 110), \
   S(71, 137), S(100, 114), S(87, 134), S(107, 128), S(105, 149), S(144, 121), S(138, 104), S(103, 104), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define KING_PST { { \
   S(-84, -85), S(18, -17), S(37, -61), S(-206, 13), S(9, 36), S(-15, 63), S(263, 0), S(331, -52), \
   S(183, -79), S(136, 15), S(199, 1), S(113, 11), S(213, 41), S(212, 56), S(253, 32), S(291, -15), \
   S(-15, 16), S(14, 24), S(59, 45), S(39, 41), S(239, 60), S(322, 50), S(378, 29), S(246, 7), \
   S(-69, -13), S(6, 29), S(29, 33), S(-113, 59), S(261, 53), S(247, 51), S(372, 25), S(287, 4), \
   S(-156, 1), S(-27, -2), S(1, 27), S(-107, 52), S(198, 55), S(266, 34), S(279, 8), S(188, -10), \
   S(-23, -35), S(3, -8), S(-49, 19), S(-23, 27), S(224, 41), S(254, 17), S(277, -5), S(295, -26), \
   S(31, -42), S(43, -28), S(16, -5), S(-64, 20), S(257, 27), S(251, 6), S(295, -20), S(319, -51), \
   S(46, -90), S(62, -58), S(13, -38), S(-75, 0), S(267, -15), S(233, -12), S(311, -54), S(297, -93), \
}, { \
   S(-176, -133), S(-28, -104), S(-40, -55), S(-320, 5), S(-78, 14), S(17, -6), S(164, -27), S(-42, -33), \
   S(-234, 0), S(-189, 13), S(-301, 31), S(-272, 39), S(11, 44), S(17, 47), S(161, 3), S(-194, 47), \
   S(-295, 13), S(-178, 18), S(-154, 15), S(-303, 43), S(51, 40), S(285, 29), S(241, 28), S(37, 0), \
   S(-200, -7), S(-200, 19), S(-245, 35), S(-306, 52), S(-74, 62), S(9, 47), S(-5, 28), S(-155, 11), \
   S(-388, 8), S(-218, -6), S(-264, 25), S(-387, 58), S(-131, 80), S(-52, 44), S(-60, 19), S(-109, -2), \
   S(-262, -30), S(-279, -2), S(-299, 17), S(-385, 48), S(-53, 53), S(-48, 36), S(-14, 11), S(-31, -19), \
   S(-167, -78), S(-233, -26), S(-290, 8), S(-340, 27), S(-67, 42), S(-30, 27), S(17, -2), S(27, -33), \
   S(-221, -122), S(-192, -87), S(-215, -52), S(-369, 7), S(-16, -12), S(-55, 5), S(34, -40), S(26, -80), \
}, }

#endif