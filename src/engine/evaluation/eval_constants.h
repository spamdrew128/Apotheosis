#ifndef __EVAL_CONSTANTS_H__
#define __EVAL_CONSTANTS_H__

#include <stdint.h>

#include "board_constants.h"
#include "board_info.h"

typedef uint8_t Phase_t;
typedef uint8_t Bucket_t;
enum {
  mg_phase,
  eg_phase,
  NUM_PHASES,
  PHASE_MAX = 24,

  KNIGHT_PHASE_VALUE = 1,
  BISHOP_PHASE_VALUE = 1,
  ROOK_PHASE_VALUE = 2,
  QUEEN_PHASE_VALUE = 4,
  PAWN_PHASE_VALUE = 0,
  KING_PHASE_VALUE = 0,

  QS_PST_MASK = C64(0x0F0F0F0F0F0F0F0F),
  KS_PST_MASK = C64(0xF0F0F0F0F0F0F0F0),
  NUM_PST_BUCKETS = 2,
};

// used for eval calcuations. Contains both EG and MG score packed into 1 value.
typedef int32_t Score_t;
#define S(mg, eg) \
	((Score_t)((uint32_t)eg << 16) + mg)

/*

 ██████╗ ██████╗ ███╗   ██╗███████╗████████╗ █████╗ ███╗   ██╗████████╗███████╗
██╔════╝██╔═══██╗████╗  ██║██╔════╝╚══██╔══╝██╔══██╗████╗  ██║╚══██╔══╝██╔════╝
██║     ██║   ██║██╔██╗ ██║███████╗   ██║   ███████║██╔██╗ ██║   ██║   ███████╗
██║     ██║   ██║██║╚██╗██║╚════██║   ██║   ██╔══██║██║╚██╗██║   ██║   ╚════██║
╚██████╗╚██████╔╝██║ ╚████║███████║   ██║   ██║  ██║██║ ╚████║   ██║   ███████║
 ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝

*/                                                                        

#define BISHOP_PAIR_BONUS \
   S(42, 66)

#define PASSED_PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(36, 326), S(39, 279), S(12, 288), S(29, 303), S(69, 343), S(19, 357), S(-25, 377), S(34, 364), \
   S(-22, 166), S(-45, 165), S(-7, 113), S(-110, 111), S(1, 109), S(-33, 211), S(-83, 248), S(-101, 292), \
   S(-13, 69), S(16, 55), S(39, 42), S(30, 35), S(-25, 72), S(-72, 102), S(-88, 141), S(-131, 174), \
   S(8, 33), S(4, 28), S(4, 18), S(0, 12), S(-59, 36), S(-66, 46), S(-36, 68), S(-78, 83), \
   S(49, -4), S(17, 8), S(49, -2), S(-4, -5), S(-45, 10), S(-32, 13), S(-58, 30), S(-26, 20), \
   S(19, -10), S(97, 1), S(91, 0), S(-13, -2), S(-41, 8), S(-26, 2), S(-35, 20), S(-40, 18), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(92, 359), S(90, 349), S(42, 356), S(85, 316), S(106, 295), S(51, 281), S(40, 309), S(-7, 337), \
   S(48, 228), S(11, 248), S(3, 196), S(28, 151), S(7, 92), S(48, 104), S(-12, 100), S(-23, 153), \
   S(10, 121), S(6, 116), S(10, 88), S(7, 75), S(15, 53), S(61, 36), S(14, 60), S(18, 59), \
   S(6, 58), S(-23, 62), S(-26, 51), S(-10, 33), S(-20, 32), S(-13, 32), S(7, 42), S(34, 27), \
   S(-3, 15), S(-8, 22), S(-34, 24), S(-29, 15), S(0, 3), S(6, 6), S(32, 22), S(40, 0), \
   S(-1, 9), S(7, 15), S(5, 1), S(-28, 20), S(27, 2), S(32, -1), S(69, 15), S(17, 8), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define BLOCKED_PASSERS { \
   S(158, -417), S(29, -127), S(2, -48), S(-4, -18), S(0, 0), S(-14, -4), S(0, 0), S(0, 0), \
}

#define ROOK_OPEN_FILE { \
   S(66, 13), S(76, 3), S(67, 4), S(69, 7), S(74, 6), S(102, -6), S(147, -16), S(150, -7), \
}

#define ROOK_SEMI_OPEN_FILE { \
   S(12, 62), S(28, 28), S(32, 17), S(34, 7), S(38, -2), S(51, -2), S(70, -6), S(49, 42), \
}

#define QUEEN_OPEN_FILE { \
   S(8, 42), S(-1, 46), S(-16, 46), S(-16, 58), S(0, 53), S(37, 10), S(58, -15), S(106, -23), \
}

#define QUEEN_SEMI_OPEN_FILE { \
   S(6, 23), S(15, 13), S(8, 18), S(-5, 53), S(14, 23), S(39, -28), S(51, -67), S(59, -28), \
}

#define KING_OPEN_FILE { \
   S(-86, -13), S(-125, 2), S(-95, 0), S(-41, -12), S(-65, -3), S(-94, 8), S(-110, 14), S(-62, 2), \
}

#define KING_SEMI_OPEN_FILE { \
   S(-32, 43), S(-64, 24), S(-22, 2), S(-13, -4), S(-15, 0), S(-23, 5), S(-48, 22), S(-38, 37), \
}

#define ISOLATED_PAWNS { \
   S(-17, -1), S(-20, -16), S(-23, -11), S(-35, -12), S(-27, -18), S(-11, -11), S(-15, -18), S(-19, 0), \
}

#define DOUBLED_PAWNS { \
   S(-13, -57), S(17, -35), S(-13, -25), S(-3, -22), S(-12, -18), S(-29, -18), S(6, -32), S(-29, -40), \
}

/*
Average PST values for MG, EG:
Knight Values: 462 364
Bishop Values: 470 403
Rook Values: 566 730
Queen Values: 1278 1325
Pawn Values: 114 164
*/

#define KNIGHT_PST { { \
   S(208, 230), S(429, 245), S(275, 309), S(451, 298), S(529, 287), S(452, 295), S(406, 293), S(347, 237), \
   S(412, 281), S(520, 294), S(464, 325), S(544, 319), S(491, 341), S(564, 308), S(428, 323), S(310, 330), \
   S(459, 298), S(549, 311), S(551, 331), S(548, 340), S(531, 342), S(537, 329), S(493, 343), S(368, 322), \
   S(451, 334), S(477, 345), S(531, 367), S(522, 362), S(532, 368), S(535, 349), S(484, 344), S(414, 335), \
   S(450, 319), S(501, 340), S(487, 378), S(495, 366), S(463, 381), S(480, 363), S(430, 348), S(386, 351), \
   S(426, 309), S(447, 353), S(452, 361), S(465, 372), S(488, 359), S(464, 350), S(441, 348), S(382, 341), \
   S(347, 307), S(417, 337), S(421, 352), S(425, 366), S(418, 360), S(427, 353), S(392, 336), S(366, 326), \
   S(410, 260), S(391, 295), S(341, 354), S(399, 332), S(355, 338), S(391, 319), S(406, 259), S(299, 309), \
}, { \
   S(256, 360), S(271, 422), S(401, 397), S(423, 392), S(503, 381), S(347, 400), S(413, 330), S(338, 271), \
   S(390, 384), S(427, 421), S(524, 404), S(550, 407), S(525, 414), S(560, 373), S(476, 375), S(458, 357), \
   S(420, 401), S(516, 403), S(541, 434), S(580, 424), S(629, 404), S(705, 378), S(585, 395), S(511, 365), \
   S(474, 399), S(509, 428), S(527, 445), S(570, 447), S(538, 454), S(594, 442), S(505, 443), S(539, 394), \
   S(465, 401), S(483, 433), S(506, 449), S(507, 454), S(522, 455), S(515, 448), S(522, 423), S(481, 393), \
   S(459, 389), S(480, 414), S(505, 419), S(499, 440), S(519, 443), S(509, 421), S(518, 411), S(463, 397), \
   S(443, 351), S(452, 376), S(476, 409), S(486, 411), S(490, 414), S(503, 399), S(494, 385), S(471, 370), \
   S(345, 368), S(457, 340), S(426, 384), S(440, 397), S(462, 398), S(465, 393), S(456, 364), S(434, 328), \
}, }

#define BISHOP_PST { { \
   S(321, 373), S(452, 355), S(418, 343), S(364, 350), S(267, 387), S(308, 377), S(374, 362), S(401, 362), \
   S(460, 328), S(467, 358), S(441, 363), S(441, 358), S(515, 363), S(412, 382), S(418, 393), S(311, 386), \
   S(493, 350), S(620, 327), S(498, 373), S(539, 365), S(501, 381), S(517, 369), S(413, 391), S(405, 375), \
   S(470, 359), S(456, 379), S(517, 381), S(530, 374), S(505, 402), S(497, 383), S(487, 374), S(414, 370), \
   S(435, 362), S(447, 381), S(440, 395), S(487, 393), S(497, 383), S(513, 374), S(457, 370), S(404, 369), \
   S(433, 360), S(443, 378), S(451, 391), S(451, 388), S(489, 384), S(477, 376), S(501, 370), S(455, 371), \
   S(447, 345), S(442, 378), S(443, 362), S(449, 369), S(450, 370), S(489, 365), S(489, 353), S(422, 348), \
   S(311, 369), S(365, 384), S(424, 346), S(386, 380), S(412, 362), S(418, 349), S(422, 364), S(361, 369), \
}, { \
   S(476, 419), S(437, 430), S(413, 439), S(400, 438), S(419, 437), S(427, 433), S(446, 428), S(477, 404), \
   S(435, 445), S(502, 443), S(494, 440), S(470, 436), S(512, 436), S(524, 422), S(514, 432), S(445, 410), \
   S(453, 444), S(500, 453), S(524, 454), S(533, 446), S(559, 440), S(594, 451), S(545, 442), S(502, 431), \
   S(474, 443), S(498, 457), S(515, 465), S(568, 461), S(543, 472), S(538, 462), S(504, 453), S(482, 437), \
   S(482, 432), S(504, 451), S(512, 467), S(531, 473), S(533, 464), S(512, 460), S(513, 437), S(492, 420), \
   S(502, 426), S(518, 444), S(510, 459), S(518, 457), S(510, 464), S(522, 450), S(511, 436), S(501, 421), \
   S(515, 406), S(518, 405), S(520, 422), S(493, 438), S(505, 441), S(521, 435), S(540, 415), S(506, 396), \
   S(464, 400), S(494, 416), S(477, 404), S(463, 432), S(472, 428), S(476, 419), S(482, 416), S(475, 397), \
}, }

#define ROOK_PST { { \
   S(530, 683), S(502, 695), S(517, 690), S(544, 687), S(544, 689), S(544, 690), S(508, 690), S(518, 678), \
   S(589, 653), S(604, 659), S(607, 652), S(594, 656), S(540, 671), S(546, 681), S(468, 690), S(461, 686), \
   S(578, 654), S(599, 653), S(627, 656), S(602, 643), S(552, 660), S(493, 691), S(498, 675), S(453, 668), \
   S(529, 660), S(491, 675), S(495, 677), S(541, 673), S(499, 684), S(527, 684), S(427, 690), S(469, 666), \
   S(455, 667), S(485, 670), S(486, 672), S(490, 671), S(486, 675), S(490, 680), S(432, 679), S(435, 672), \
   S(449, 658), S(479, 663), S(502, 660), S(502, 651), S(470, 667), S(488, 671), S(435, 680), S(456, 647), \
   S(471, 640), S(461, 666), S(490, 651), S(487, 657), S(459, 670), S(464, 681), S(416, 663), S(426, 655), \
   S(502, 649), S(514, 662), S(506, 668), S(506, 677), S(506, 673), S(496, 679), S(427, 698), S(475, 657), \
}, { \
   S(669, 787), S(667, 800), S(627, 817), S(687, 793), S(682, 800), S(646, 812), S(679, 805), S(705, 785), \
   S(636, 802), S(631, 818), S(668, 809), S(711, 792), S(708, 788), S(706, 793), S(588, 828), S(631, 798), \
   S(603, 796), S(630, 805), S(639, 805), S(668, 791), S(674, 785), S(711, 778), S(677, 790), S(659, 775), \
   S(587, 798), S(605, 801), S(621, 813), S(633, 797), S(625, 796), S(657, 793), S(631, 797), S(616, 783), \
   S(598, 779), S(571, 807), S(595, 808), S(606, 797), S(620, 782), S(613, 787), S(615, 790), S(621, 760), \
   S(590, 771), S(588, 790), S(594, 793), S(599, 789), S(619, 779), S(621, 779), S(640, 770), S(610, 754), \
   S(586, 771), S(595, 778), S(592, 792), S(602, 786), S(613, 775), S(634, 773), S(643, 763), S(556, 763), \
   S(619, 782), S(610, 789), S(615, 801), S(626, 793), S(629, 788), S(633, 786), S(589, 798), S(635, 738), \
}, }

#define QUEEN_PST { { \
   S(1189, 1189), S(1195, 1208), S(1385, 1118), S(1169, 1202), S(1246, 1196), S(1180, 1222), S(1271, 1138), S(1075, 1218), \
   S(1344, 1100), S(1280, 1150), S(1362, 1147), S(1167, 1270), S(1258, 1211), S(1168, 1223), S(1073, 1267), S(1137, 1175), \
   S(1304, 1105), S(1330, 1154), S(1426, 1158), S(1311, 1164), S(1196, 1239), S(1146, 1252), S(1134, 1240), S(1094, 1207), \
   S(1215, 1193), S(1224, 1186), S(1191, 1220), S(1187, 1237), S(1193, 1199), S(1161, 1219), S(1126, 1232), S(1158, 1158), \
   S(1198, 1196), S(1178, 1227), S(1161, 1297), S(1195, 1215), S(1170, 1182), S(1145, 1261), S(1133, 1225), S(1106, 1181), \
   S(1201, 1152), S(1187, 1187), S(1170, 1204), S(1166, 1167), S(1174, 1193), S(1198, 1168), S(1141, 1241), S(1115, 1151), \
   S(1173, 1133), S(1156, 1171), S(1211, 1129), S(1160, 1185), S(1194, 1139), S(1203, 1151), S(1095, 1222), S(1114, 1132), \
   S(1112, 1182), S(1151, 1168), S(1153, 1174), S(1190, 1099), S(1175, 1120), S(1136, 1186), S(1082, 1216), S(1079, 1165), \
}, { \
   S(1308, 1443), S(1339, 1471), S(1353, 1477), S(1386, 1476), S(1426, 1461), S(1470, 1462), S(1473, 1476), S(1378, 1522), \
   S(1324, 1433), S(1322, 1460), S(1342, 1503), S(1344, 1509), S(1320, 1579), S(1446, 1512), S(1385, 1553), S(1380, 1523), \
   S(1333, 1419), S(1357, 1431), S(1358, 1473), S(1389, 1491), S(1429, 1488), S(1484, 1514), S(1456, 1498), S(1431, 1504), \
   S(1318, 1449), S(1337, 1469), S(1349, 1480), S(1370, 1484), S(1351, 1552), S(1372, 1573), S(1363, 1582), S(1363, 1520), \
   S(1360, 1407), S(1337, 1473), S(1361, 1467), S(1359, 1500), S(1361, 1501), S(1358, 1518), S(1369, 1526), S(1370, 1497), \
   S(1352, 1400), S(1377, 1394), S(1356, 1467), S(1370, 1439), S(1375, 1439), S(1370, 1475), S(1385, 1477), S(1368, 1447), \
   S(1341, 1384), S(1367, 1409), S(1391, 1382), S(1385, 1405), S(1384, 1402), S(1387, 1405), S(1381, 1409), S(1347, 1436), \
   S(1351, 1400), S(1340, 1407), S(1363, 1396), S(1387, 1360), S(1364, 1385), S(1320, 1426), S(1313, 1447), S(1338, 1376), \
}, }

#define PAWN_PST { { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(36, 326), S(39, 279), S(12, 288), S(29, 303), S(69, 343), S(19, 357), S(-25, 377), S(34, 364), \
   S(135, 144), S(224, 114), S(221, 130), S(296, 136), S(137, 190), S(178, 134), S(104, 193), S(149, 151), \
   S(69, 137), S(101, 133), S(143, 114), S(156, 113), S(154, 124), S(164, 123), S(140, 149), S(144, 130), \
   S(49, 131), S(61, 138), S(115, 113), S(140, 114), S(137, 119), S(154, 114), S(117, 136), S(131, 117), \
   S(42, 124), S(56, 136), S(101, 119), S(92, 128), S(120, 124), S(143, 115), S(139, 121), S(137, 107), \
   S(36, 136), S(60, 139), S(108, 122), S(88, 121), S(101, 127), S(171, 113), S(144, 123), S(120, 112), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(92, 359), S(90, 349), S(42, 356), S(85, 316), S(106, 295), S(51, 281), S(40, 309), S(-7, 337), \
   S(98, 179), S(121, 172), S(163, 148), S(171, 140), S(226, 154), S(248, 127), S(197, 174), S(155, 149), \
   S(99, 156), S(117, 154), S(130, 133), S(149, 110), S(158, 117), S(163, 112), S(122, 141), S(117, 123), \
   S(79, 143), S(99, 144), S(115, 120), S(140, 116), S(138, 119), S(150, 108), S(108, 131), S(108, 112), \
   S(86, 127), S(95, 134), S(115, 119), S(106, 130), S(116, 136), S(140, 116), S(140, 120), S(122, 104), \
   S(71, 139), S(99, 135), S(89, 140), S(83, 140), S(86, 150), S(164, 121), S(144, 127), S(111, 105), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}, }

#define KING_PST { { \
   S(72, -99), S(145, -39), S(95, -78), S(212, -84), S(336, -34), S(399, -10), S(428, -45), S(343, -59), \
   S(68, -41), S(205, 23), S(149, 10), S(2, 18), S(348, 38), S(432, 27), S(444, 13), S(505, -49), \
   S(113, -17), S(132, 9), S(260, 23), S(-22, 39), S(369, 43), S(474, 33), S(462, 13), S(418, -4), \
   S(-58, -23), S(47, 16), S(34, 29), S(-100, 63), S(323, 61), S(306, 60), S(386, 44), S(370, 9), \
   S(-112, -10), S(-69, 12), S(-97, 45), S(-182, 70), S(239, 78), S(338, 48), S(369, 18), S(292, 1), \
   S(-117, -21), S(-25, 0), S(-119, 38), S(-151, 55), S(309, 54), S(299, 40), S(378, 6), S(383, -19), \
   S(16, -43), S(10, -15), S(-33, 5), S(-135, 31), S(326, 35), S(355, 13), S(408, -15), S(406, -37), \
   S(19, -94), S(53, -72), S(-32, -36), S(-136, -1), S(368, -24), S(317, -13), S(431, -59), S(418, -87), \
}, { \
   S(-182, -152), S(-246, -66), S(-245, -53), S(-333, -28), S(-23, -22), S(32, -20), S(318, -89), S(85, -62), \
   S(-178, -62), S(-265, 0), S(-262, 0), S(-399, 29), S(68, 14), S(79, 17), S(120, 19), S(-54, 18), \
   S(-309, -8), S(-261, 11), S(-318, 19), S(-367, 44), S(55, 38), S(263, 27), S(187, 43), S(25, 8), \
   S(-334, -9), S(-374, 31), S(-391, 38), S(-449, 65), S(-42, 56), S(28, 44), S(-74, 46), S(-203, 22), \
   S(-455, -5), S(-334, -2), S(-435, 41), S(-524, 66), S(-115, 74), S(-116, 58), S(-93, 29), S(-158, 5), \
   S(-388, -28), S(-384, -1), S(-442, 28), S(-518, 57), S(-108, 65), S(-77, 44), S(-20, 12), S(-50, -15), \
   S(-294, -73), S(-345, -25), S(-424, 12), S(-483, 32), S(-107, 50), S(-48, 26), S(26, -5), S(28, -34), \
   S(-315, -110), S(-278, -93), S(-320, -60), S(-468, -6), S(-13, -25), S(-69, -4), S(47, -48), S(41, -91), \
}, }

#endif