#ifndef __EVAL_CONSTANTS_H__
#define __EVAL_CONSTANTS_H__

#include <stdint.h>

#include "phase_score_packing.h"

typedef uint8_t Phase_t;
enum {
  mg_phase,
  eg_phase,
  NUM_PHASES,
  PHASE_MAX = 24,

  KNIGHT_PHASE_VALUE = 1,
  BISHOP_PHASE_VALUE = 1,
  ROOK_PHASE_VALUE = 2,
  QUEEN_PHASE_VALUE = 4,
  PAWN_PHASE_VALUE = 0,
  KING_PHASE_VALUE = 0,

  NUM_PST_BUCKETS = 2,
};

#define BISHOP_PAIR_BONUS \
   S(37, 66)

#define PASSED_PAWN_PST { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(81, 343), S(95, 316), S(45, 329), S(77, 306), S(88, 304), S(27, 309), S(23, 331), S(-19, 352), \
   S(38, 199), S(7, 204), S(9, 165), S(18, 126), S(-7, 99), S(2, 148), S(-61, 156), S(-50, 203), \
   S(8, 94), S(0, 85), S(9, 72), S(2, 62), S(0, 54), S(19, 58), S(-36, 85), S(-23, 93), \
   S(1, 41), S(-37, 41), S(-30, 36), S(-19, 22), S(-32, 25), S(-35, 33), S(-24, 46), S(3, 42), \
   S(-13, 5), S(-26, 8), S(-37, 14), S(-35, 4), S(-10, -4), S(-8, 3), S(-26, 18), S(16, 1), \
   S(-13, -3), S(-6, 0), S(0, -3), S(-33, 10), S(17, -8), S(12, -10), S(19, 3), S(-3, 5), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}

#define BLOCKED_PASSERS { \
S(161, -435), S(44, -150), S(7, -60), S(-6, -22), S(-5, 0), S(-30, 0), S(0, 0), S(0, 0), }

#define ROOK_OPEN_FILE { \
S(65, 8), S(72, 1), S(65, 1), S(69, 5), S(72, 6), S(96, -9), S(139, -19), S(147, -11), }

#define ROOK_SEMI_OPEN_FILE { \
S(4, 53), S(28, 22), S(28, 9), S(31, 6), S(32, -4), S(39, -11), S(60, -12), S(32, 33), }

#define QUEEN_OPEN_FILE { \
S(2, 38), S(-3, 45), S(-18, 40), S(-19, 55), S(0, 47), S(38, 0), S(45, -19), S(104, -45), }

#define QUEEN_SEMI_OPEN_FILE { \
S(2, 9), S(17, 15), S(4, 6), S(-8, 49), S(12, 17), S(30, -39), S(49, -64), S(44, -32), }

#define KING_OPEN_FILE { \
S(-123, -18), S(-165, -5), S(-108, -10), S(-26, -25), S(-70, -2), S(-104, 8), S(-121, 13), S(-73, 1), }

#define KING_SEMI_OPEN_FILE { \
S(-64, 66), S(-112, 41), S(-67, 18), S(-24, -2), S(-17, -2), S(-49, 7), S(-66, 22), S(-75, 51), }

/*
Average PST values for MG, EG:
Knight Values: 478 369
Bishop Values: 488 404
Rook Values: 616 737
Queen Values: 1356 1345
Pawn Values: 113 163
*/

#define KNIGHT_PST { \
   S(260, 303), S(299, 366), S(402, 357), S(444, 353), S(527, 339), S(365, 363), S(428, 312), S(356, 254), \
   S(401, 346), S(435, 383), S(525, 370), S(550, 373), S(514, 384), S(577, 345), S(470, 355), S(437, 339), \
   S(425, 364), S(514, 371), S(538, 399), S(573, 392), S(618, 372), S(662, 353), S(572, 370), S(494, 342), \
   S(467, 373), S(502, 396), S(521, 415), S(562, 412), S(532, 420), S(590, 400), S(501, 406), S(524, 364), \
   S(459, 368), S(480, 399), S(499, 418), S(503, 419), S(514, 423), S(508, 414), S(511, 389), S(471, 365), \
   S(451, 356), S(472, 386), S(497, 391), S(492, 410), S(512, 408), S(502, 388), S(508, 379), S(455, 363), \
   S(431, 321), S(444, 354), S(466, 379), S(478, 383), S(481, 383), S(494, 372), S(479, 357), S(460, 339), \
   S(349, 325), S(449, 311), S(410, 362), S(433, 369), S(451, 367), S(453, 361), S(450, 327), S(417, 305), \
}

#define BISHOP_PST { \
   S(464, 392), S(436, 397), S(413, 401), S(395, 401), S(399, 406), S(419, 401), S(421, 400), S(462, 382), \
   S(443, 402), S(501, 407), S(492, 405), S(471, 401), S(515, 402), S(497, 401), S(501, 409), S(428, 389), \
   S(451, 413), S(508, 412), S(517, 421), S(529, 413), S(550, 409), S(586, 409), S(522, 413), S(494, 400), \
   S(471, 410), S(487, 424), S(512, 430), S(560, 424), S(536, 439), S(533, 426), S(496, 421), S(471, 407), \
   S(474, 400), S(495, 418), S(499, 432), S(522, 436), S(525, 428), S(503, 426), S(503, 405), S(480, 391), \
   S(491, 392), S(505, 411), S(501, 425), S(507, 423), S(502, 429), S(514, 415), S(502, 406), S(493, 393), \
   S(504, 373), S(508, 379), S(507, 391), S(483, 404), S(494, 407), S(511, 403), S(531, 383), S(492, 368), \
   S(449, 374), S(479, 390), S(467, 371), S(449, 403), S(462, 396), S(466, 384), S(470, 386), S(461, 370), \
}

#define ROOK_PST { \
   S(654, 738), S(647, 749), S(615, 763), S(665, 742), S(664, 748), S(644, 758), S(651, 754), S(681, 734), \
   S(632, 745), S(626, 759), S(662, 750), S(700, 733), S(689, 730), S(685, 743), S(576, 769), S(600, 750), \
   S(593, 744), S(625, 748), S(633, 751), S(660, 733), S(664, 726), S(673, 737), S(658, 735), S(629, 725), \
   S(576, 747), S(596, 746), S(608, 757), S(618, 743), S(611, 742), S(645, 744), S(610, 745), S(599, 732), \
   S(584, 728), S(564, 750), S(583, 753), S(593, 741), S(603, 731), S(600, 740), S(599, 738), S(602, 713), \
   S(577, 719), S(576, 736), S(583, 740), S(585, 731), S(603, 725), S(608, 729), S(618, 721), S(595, 704), \
   S(575, 718), S(582, 726), S(582, 735), S(588, 730), S(596, 723), S(619, 727), S(618, 712), S(541, 716), \
   S(608, 726), S(599, 735), S(604, 745), S(611, 741), S(616, 734), S(619, 736), S(572, 749), S(618, 694), \
}

#define QUEEN_PST { \
   S(1310, 1330), S(1334, 1351), S(1355, 1363), S(1370, 1355), S(1410, 1348), S(1422, 1358), S(1459, 1326), S(1354, 1380), \
   S(1339, 1310), S(1310, 1349), S(1339, 1384), S(1338, 1390), S(1321, 1446), S(1400, 1390), S(1355, 1386), S(1363, 1370), \
   S(1331, 1312), S(1345, 1323), S(1351, 1371), S(1385, 1367), S(1415, 1369), S(1456, 1379), S(1425, 1364), S(1411, 1364), \
   S(1314, 1341), S(1327, 1355), S(1339, 1369), S(1356, 1370), S(1344, 1418), S(1364, 1432), S(1352, 1438), S(1353, 1389), \
   S(1346, 1310), S(1324, 1363), S(1346, 1367), S(1348, 1381), S(1351, 1374), S(1343, 1406), S(1356, 1398), S(1354, 1373), \
   S(1338, 1301), S(1362, 1285), S(1343, 1354), S(1357, 1322), S(1360, 1327), S(1359, 1358), S(1367, 1362), S(1351, 1327), \
   S(1328, 1281), S(1352, 1297), S(1378, 1272), S(1370, 1291), S(1370, 1289), S(1375, 1295), S(1359, 1301), S(1337, 1309), \
   S(1339, 1288), S(1326, 1298), S(1349, 1288), S(1375, 1246), S(1350, 1272), S(1301, 1325), S(1292, 1342), S(1323, 1269), \
}

#define PAWN_PST { \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
   S(81, 343), S(95, 316), S(45, 329), S(77, 306), S(88, 304), S(27, 309), S(23, 331), S(-19, 352), \
   S(98, 170), S(150, 153), S(158, 142), S(170, 146), S(216, 150), S(220, 126), S(186, 169), S(126, 151), \
   S(87, 153), S(135, 141), S(124, 125), S(143, 108), S(153, 112), S(145, 116), S(133, 138), S(92, 131), \
   S(68, 144), S(117, 138), S(114, 116), S(136, 115), S(137, 114), S(137, 112), S(121, 129), S(85, 120), \
   S(74, 131), S(112, 132), S(112, 116), S(102, 126), S(116, 129), S(126, 117), S(153, 118), S(99, 111), \
   S(61, 142), S(118, 133), S(89, 133), S(81, 131), S(87, 139), S(154, 122), S(160, 123), S(88, 111), \
   S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), \
}

#define KING_PST { \
   S(195, -154), S(144, -61), S(133, -59), S(90, -42), S(-44, -24), S(1, -10), S(179, -67), S(34, -66), \
   S(203, -67), S(162, 0), S(122, 2), S(-50, 37), S(10, 22), S(38, 27), S(72, 15), S(28, -18), \
   S(94, -16), S(152, 9), S(92, 23), S(-15, 53), S(21, 34), S(145, 31), S(106, 27), S(18, 0), \
   S(43, -18), S(33, 28), S(2, 42), S(-94, 77), S(-63, 52), S(-28, 48), S(-50, 41), S(-139, 11), \
   S(-74, -9), S(52, -2), S(-48, 46), S(-165, 81), S(-128, 67), S(-93, 46), S(-69, 18), S(-138, -6), \
   S(-23, -23), S(25, -1), S(-56, 36), S(-145, 72), S(-103, 55), S(-74, 35), S(-10, 2), S(-39, -22), \
   S(57, -53), S(31, -10), S(-33, 19), S(-121, 49), S(-100, 40), S(-36, 16), S(34, -15), S(35, -43), \
   S(19, -85), S(71, -63), S(30, -35), S(-105, 11), S(-6, -34), S(-64, -12), S(53, -56), S(45, -96), \
}

#endif